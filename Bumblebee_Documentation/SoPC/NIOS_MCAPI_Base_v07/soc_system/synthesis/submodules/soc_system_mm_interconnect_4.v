// soc_system_mm_interconnect_4.v

// This file was auto-generated from altera_merlin_interconnect_wrapper_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 13.1 162 at 2014.12.19.15:55:03

`timescale 1 ps / 1 ps
module soc_system_mm_interconnect_4 (
		input  wire        system_pll_outclk0_clk,                      //                   system_pll_outclk0.clk
		input  wire        cpu_s1_reset_n_reset_bridge_in_reset_reset,  // cpu_s1_reset_n_reset_bridge_in_reset.reset
		input  wire [27:0] cpu_s1_data_master_address,                  //                   cpu_s1_data_master.address
		output wire        cpu_s1_data_master_waitrequest,              //                                     .waitrequest
		input  wire [3:0]  cpu_s1_data_master_byteenable,               //                                     .byteenable
		input  wire        cpu_s1_data_master_read,                     //                                     .read
		output wire [31:0] cpu_s1_data_master_readdata,                 //                                     .readdata
		input  wire        cpu_s1_data_master_write,                    //                                     .write
		input  wire [31:0] cpu_s1_data_master_writedata,                //                                     .writedata
		input  wire        cpu_s1_data_master_debugaccess,              //                                     .debugaccess
		input  wire [27:0] cpu_s1_instruction_master_address,           //            cpu_s1_instruction_master.address
		output wire        cpu_s1_instruction_master_waitrequest,       //                                     .waitrequest
		input  wire        cpu_s1_instruction_master_read,              //                                     .read
		output wire [31:0] cpu_s1_instruction_master_readdata,          //                                     .readdata
		output wire        cpu_s1_instruction_master_readdatavalid,     //                                     .readdatavalid
		output wire [8:0]  cpu_s1_jtag_debug_module_address,            //             cpu_s1_jtag_debug_module.address
		output wire        cpu_s1_jtag_debug_module_write,              //                                     .write
		output wire        cpu_s1_jtag_debug_module_read,               //                                     .read
		input  wire [31:0] cpu_s1_jtag_debug_module_readdata,           //                                     .readdata
		output wire [31:0] cpu_s1_jtag_debug_module_writedata,          //                                     .writedata
		output wire [3:0]  cpu_s1_jtag_debug_module_byteenable,         //                                     .byteenable
		input  wire        cpu_s1_jtag_debug_module_waitrequest,        //                                     .waitrequest
		output wire        cpu_s1_jtag_debug_module_debugaccess,        //                                     .debugaccess
		output wire [7:0]  fifo_bridge_cpuM_cpus1_s0_address,           //            fifo_bridge_cpuM_cpus1_s0.address
		output wire        fifo_bridge_cpuM_cpus1_s0_write,             //                                     .write
		output wire        fifo_bridge_cpuM_cpus1_s0_read,              //                                     .read
		input  wire [31:0] fifo_bridge_cpuM_cpus1_s0_readdata,          //                                     .readdata
		output wire [31:0] fifo_bridge_cpuM_cpus1_s0_writedata,         //                                     .writedata
		output wire [7:0]  fifo_bridge_cpus0_cpus1_s1_address,          //           fifo_bridge_cpus0_cpus1_s1.address
		output wire        fifo_bridge_cpus0_cpus1_s1_write,            //                                     .write
		output wire        fifo_bridge_cpus0_cpus1_s1_read,             //                                     .read
		input  wire [31:0] fifo_bridge_cpus0_cpus1_s1_readdata,         //                                     .readdata
		output wire [31:0] fifo_bridge_cpus0_cpus1_s1_writedata,        //                                     .writedata
		output wire [16:0] onchip_sram_s1_address,                      //                       onchip_sram_s1.address
		output wire        onchip_sram_s1_write,                        //                                     .write
		input  wire [31:0] onchip_sram_s1_readdata,                     //                                     .readdata
		output wire [31:0] onchip_sram_s1_writedata,                    //                                     .writedata
		output wire [3:0]  onchip_sram_s1_byteenable,                   //                                     .byteenable
		output wire        onchip_sram_s1_chipselect,                   //                                     .chipselect
		output wire        onchip_sram_s1_clken,                        //                                     .clken
		output wire [9:0]  s1_io_clockCrossing_bridge_s0_address,       //        s1_io_clockCrossing_bridge_s0.address
		output wire        s1_io_clockCrossing_bridge_s0_write,         //                                     .write
		output wire        s1_io_clockCrossing_bridge_s0_read,          //                                     .read
		input  wire [31:0] s1_io_clockCrossing_bridge_s0_readdata,      //                                     .readdata
		output wire [31:0] s1_io_clockCrossing_bridge_s0_writedata,     //                                     .writedata
		output wire [0:0]  s1_io_clockCrossing_bridge_s0_burstcount,    //                                     .burstcount
		output wire [3:0]  s1_io_clockCrossing_bridge_s0_byteenable,    //                                     .byteenable
		input  wire        s1_io_clockCrossing_bridge_s0_readdatavalid, //                                     .readdatavalid
		input  wire        s1_io_clockCrossing_bridge_s0_waitrequest,   //                                     .waitrequest
		output wire        s1_io_clockCrossing_bridge_s0_debugaccess    //                                     .debugaccess
	);

	wire          cpu_s1_instruction_master_translator_avalon_universal_master_0_waitrequest;                         // cpu_s1_instruction_master_translator_avalon_universal_master_0_agent:av_waitrequest -> cpu_s1_instruction_master_translator:uav_waitrequest
	wire    [2:0] cpu_s1_instruction_master_translator_avalon_universal_master_0_burstcount;                          // cpu_s1_instruction_master_translator:uav_burstcount -> cpu_s1_instruction_master_translator_avalon_universal_master_0_agent:av_burstcount
	wire   [31:0] cpu_s1_instruction_master_translator_avalon_universal_master_0_writedata;                           // cpu_s1_instruction_master_translator:uav_writedata -> cpu_s1_instruction_master_translator_avalon_universal_master_0_agent:av_writedata
	wire   [27:0] cpu_s1_instruction_master_translator_avalon_universal_master_0_address;                             // cpu_s1_instruction_master_translator:uav_address -> cpu_s1_instruction_master_translator_avalon_universal_master_0_agent:av_address
	wire          cpu_s1_instruction_master_translator_avalon_universal_master_0_lock;                                // cpu_s1_instruction_master_translator:uav_lock -> cpu_s1_instruction_master_translator_avalon_universal_master_0_agent:av_lock
	wire          cpu_s1_instruction_master_translator_avalon_universal_master_0_write;                               // cpu_s1_instruction_master_translator:uav_write -> cpu_s1_instruction_master_translator_avalon_universal_master_0_agent:av_write
	wire          cpu_s1_instruction_master_translator_avalon_universal_master_0_read;                                // cpu_s1_instruction_master_translator:uav_read -> cpu_s1_instruction_master_translator_avalon_universal_master_0_agent:av_read
	wire   [31:0] cpu_s1_instruction_master_translator_avalon_universal_master_0_readdata;                            // cpu_s1_instruction_master_translator_avalon_universal_master_0_agent:av_readdata -> cpu_s1_instruction_master_translator:uav_readdata
	wire          cpu_s1_instruction_master_translator_avalon_universal_master_0_debugaccess;                         // cpu_s1_instruction_master_translator:uav_debugaccess -> cpu_s1_instruction_master_translator_avalon_universal_master_0_agent:av_debugaccess
	wire    [3:0] cpu_s1_instruction_master_translator_avalon_universal_master_0_byteenable;                          // cpu_s1_instruction_master_translator:uav_byteenable -> cpu_s1_instruction_master_translator_avalon_universal_master_0_agent:av_byteenable
	wire          cpu_s1_instruction_master_translator_avalon_universal_master_0_readdatavalid;                       // cpu_s1_instruction_master_translator_avalon_universal_master_0_agent:av_readdatavalid -> cpu_s1_instruction_master_translator:uav_readdatavalid
	wire          cpu_s1_data_master_translator_avalon_universal_master_0_waitrequest;                                // cpu_s1_data_master_translator_avalon_universal_master_0_agent:av_waitrequest -> cpu_s1_data_master_translator:uav_waitrequest
	wire    [2:0] cpu_s1_data_master_translator_avalon_universal_master_0_burstcount;                                 // cpu_s1_data_master_translator:uav_burstcount -> cpu_s1_data_master_translator_avalon_universal_master_0_agent:av_burstcount
	wire   [31:0] cpu_s1_data_master_translator_avalon_universal_master_0_writedata;                                  // cpu_s1_data_master_translator:uav_writedata -> cpu_s1_data_master_translator_avalon_universal_master_0_agent:av_writedata
	wire   [27:0] cpu_s1_data_master_translator_avalon_universal_master_0_address;                                    // cpu_s1_data_master_translator:uav_address -> cpu_s1_data_master_translator_avalon_universal_master_0_agent:av_address
	wire          cpu_s1_data_master_translator_avalon_universal_master_0_lock;                                       // cpu_s1_data_master_translator:uav_lock -> cpu_s1_data_master_translator_avalon_universal_master_0_agent:av_lock
	wire          cpu_s1_data_master_translator_avalon_universal_master_0_write;                                      // cpu_s1_data_master_translator:uav_write -> cpu_s1_data_master_translator_avalon_universal_master_0_agent:av_write
	wire          cpu_s1_data_master_translator_avalon_universal_master_0_read;                                       // cpu_s1_data_master_translator:uav_read -> cpu_s1_data_master_translator_avalon_universal_master_0_agent:av_read
	wire   [31:0] cpu_s1_data_master_translator_avalon_universal_master_0_readdata;                                   // cpu_s1_data_master_translator_avalon_universal_master_0_agent:av_readdata -> cpu_s1_data_master_translator:uav_readdata
	wire          cpu_s1_data_master_translator_avalon_universal_master_0_debugaccess;                                // cpu_s1_data_master_translator:uav_debugaccess -> cpu_s1_data_master_translator_avalon_universal_master_0_agent:av_debugaccess
	wire    [3:0] cpu_s1_data_master_translator_avalon_universal_master_0_byteenable;                                 // cpu_s1_data_master_translator:uav_byteenable -> cpu_s1_data_master_translator_avalon_universal_master_0_agent:av_byteenable
	wire          cpu_s1_data_master_translator_avalon_universal_master_0_readdatavalid;                              // cpu_s1_data_master_translator_avalon_universal_master_0_agent:av_readdatavalid -> cpu_s1_data_master_translator:uav_readdatavalid
	wire          rsp_xbar_mux_001_src_endofpacket;                                                                   // rsp_xbar_mux_001:src_endofpacket -> cpu_s1_data_master_translator_avalon_universal_master_0_agent:rp_endofpacket
	wire          rsp_xbar_mux_001_src_valid;                                                                         // rsp_xbar_mux_001:src_valid -> cpu_s1_data_master_translator_avalon_universal_master_0_agent:rp_valid
	wire          rsp_xbar_mux_001_src_startofpacket;                                                                 // rsp_xbar_mux_001:src_startofpacket -> cpu_s1_data_master_translator_avalon_universal_master_0_agent:rp_startofpacket
	wire  [103:0] rsp_xbar_mux_001_src_data;                                                                          // rsp_xbar_mux_001:src_data -> cpu_s1_data_master_translator_avalon_universal_master_0_agent:rp_data
	wire    [4:0] rsp_xbar_mux_001_src_channel;                                                                       // rsp_xbar_mux_001:src_channel -> cpu_s1_data_master_translator_avalon_universal_master_0_agent:rp_channel
	wire          rsp_xbar_mux_001_src_ready;                                                                         // cpu_s1_data_master_translator_avalon_universal_master_0_agent:rp_ready -> rsp_xbar_mux_001:src_ready
	wire          cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_waitrequest;                  // cpu_s1_jtag_debug_module_translator:uav_waitrequest -> cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_burstcount;                   // cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_burstcount -> cpu_s1_jtag_debug_module_translator:uav_burstcount
	wire   [31:0] cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_writedata;                    // cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_writedata -> cpu_s1_jtag_debug_module_translator:uav_writedata
	wire   [27:0] cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_address;                      // cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_address -> cpu_s1_jtag_debug_module_translator:uav_address
	wire          cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_write;                        // cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_write -> cpu_s1_jtag_debug_module_translator:uav_write
	wire          cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_lock;                         // cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_lock -> cpu_s1_jtag_debug_module_translator:uav_lock
	wire          cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_read;                         // cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_read -> cpu_s1_jtag_debug_module_translator:uav_read
	wire   [31:0] cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdata;                     // cpu_s1_jtag_debug_module_translator:uav_readdata -> cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                // cpu_s1_jtag_debug_module_translator:uav_readdatavalid -> cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_debugaccess;                  // cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_debugaccess -> cpu_s1_jtag_debug_module_translator:uav_debugaccess
	wire    [3:0] cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_byteenable;                   // cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:m0_byteenable -> cpu_s1_jtag_debug_module_translator:uav_byteenable
	wire          cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;           // cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_valid;                 // cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_valid -> cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;         // cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [104:0] cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_data;                  // cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_data -> cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_ready;                 // cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;        // cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;              // cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;      // cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [104:0] cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;               // cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;              // cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:rf_sink_ready -> cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;            // cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;             // cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;            // cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_src_endofpacket;                                                                       // cmd_xbar_mux:src_endofpacket -> cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_src_valid;                                                                             // cmd_xbar_mux:src_valid -> cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_src_startofpacket;                                                                     // cmd_xbar_mux:src_startofpacket -> cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [103:0] cmd_xbar_mux_src_data;                                                                              // cmd_xbar_mux:src_data -> cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_data
	wire    [4:0] cmd_xbar_mux_src_channel;                                                                           // cmd_xbar_mux:src_channel -> cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_src_ready;                                                                             // cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux:src_ready
	wire          onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                            // onchip_sram_s1_translator:uav_waitrequest -> onchip_sram_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                             // onchip_sram_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> onchip_sram_s1_translator:uav_burstcount
	wire   [31:0] onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                              // onchip_sram_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> onchip_sram_s1_translator:uav_writedata
	wire   [27:0] onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_address;                                // onchip_sram_s1_translator_avalon_universal_slave_0_agent:m0_address -> onchip_sram_s1_translator:uav_address
	wire          onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_write;                                  // onchip_sram_s1_translator_avalon_universal_slave_0_agent:m0_write -> onchip_sram_s1_translator:uav_write
	wire          onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                   // onchip_sram_s1_translator_avalon_universal_slave_0_agent:m0_lock -> onchip_sram_s1_translator:uav_lock
	wire          onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_read;                                   // onchip_sram_s1_translator_avalon_universal_slave_0_agent:m0_read -> onchip_sram_s1_translator:uav_read
	wire   [31:0] onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                               // onchip_sram_s1_translator:uav_readdata -> onchip_sram_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                          // onchip_sram_s1_translator:uav_readdatavalid -> onchip_sram_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                            // onchip_sram_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> onchip_sram_s1_translator:uav_debugaccess
	wire    [3:0] onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                             // onchip_sram_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> onchip_sram_s1_translator:uav_byteenable
	wire          onchip_sram_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                     // onchip_sram_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> onchip_sram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          onchip_sram_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                           // onchip_sram_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> onchip_sram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          onchip_sram_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                   // onchip_sram_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> onchip_sram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [104:0] onchip_sram_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                            // onchip_sram_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> onchip_sram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          onchip_sram_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                           // onchip_sram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> onchip_sram_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          onchip_sram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                  // onchip_sram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> onchip_sram_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          onchip_sram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                        // onchip_sram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> onchip_sram_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          onchip_sram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                // onchip_sram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> onchip_sram_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [104:0] onchip_sram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                         // onchip_sram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> onchip_sram_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          onchip_sram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                        // onchip_sram_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> onchip_sram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          onchip_sram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                      // onchip_sram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> onchip_sram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] onchip_sram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                       // onchip_sram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> onchip_sram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          onchip_sram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                      // onchip_sram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> onchip_sram_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_001_src_endofpacket;                                                                   // cmd_xbar_mux_001:src_endofpacket -> onchip_sram_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_001_src_valid;                                                                         // cmd_xbar_mux_001:src_valid -> onchip_sram_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_001_src_startofpacket;                                                                 // cmd_xbar_mux_001:src_startofpacket -> onchip_sram_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [103:0] cmd_xbar_mux_001_src_data;                                                                          // cmd_xbar_mux_001:src_data -> onchip_sram_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire    [4:0] cmd_xbar_mux_001_src_channel;                                                                       // cmd_xbar_mux_001:src_channel -> onchip_sram_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_001_src_ready;                                                                         // onchip_sram_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_001:src_ready
	wire          fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest;                 // fifo_bridge_cpuM_cpus1_s0_translator:uav_waitrequest -> fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_burstcount;                  // fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:m0_burstcount -> fifo_bridge_cpuM_cpus1_s0_translator:uav_burstcount
	wire   [31:0] fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_writedata;                   // fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:m0_writedata -> fifo_bridge_cpuM_cpus1_s0_translator:uav_writedata
	wire   [27:0] fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_address;                     // fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:m0_address -> fifo_bridge_cpuM_cpus1_s0_translator:uav_address
	wire          fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_write;                       // fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:m0_write -> fifo_bridge_cpuM_cpus1_s0_translator:uav_write
	wire          fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_lock;                        // fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:m0_lock -> fifo_bridge_cpuM_cpus1_s0_translator:uav_lock
	wire          fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_read;                        // fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:m0_read -> fifo_bridge_cpuM_cpus1_s0_translator:uav_read
	wire   [31:0] fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_readdata;                    // fifo_bridge_cpuM_cpus1_s0_translator:uav_readdata -> fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid;               // fifo_bridge_cpuM_cpus1_s0_translator:uav_readdatavalid -> fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess;                 // fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:m0_debugaccess -> fifo_bridge_cpuM_cpus1_s0_translator:uav_debugaccess
	wire    [3:0] fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_byteenable;                  // fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:m0_byteenable -> fifo_bridge_cpuM_cpus1_s0_translator:uav_byteenable
	wire          fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;          // fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rf_source_valid;                // fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:rf_source_valid -> fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;        // fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [104:0] fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rf_source_data;                 // fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:rf_source_data -> fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rf_source_ready;                // fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;       // fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;             // fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;     // fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [104:0] fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;              // fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;             // fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:rf_sink_ready -> fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;           // fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;            // fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;           // fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_002_src_endofpacket;                                                                   // cmd_xbar_mux_002:src_endofpacket -> fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_002_src_valid;                                                                         // cmd_xbar_mux_002:src_valid -> fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_002_src_startofpacket;                                                                 // cmd_xbar_mux_002:src_startofpacket -> fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [103:0] cmd_xbar_mux_002_src_data;                                                                          // cmd_xbar_mux_002:src_data -> fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:cp_data
	wire    [4:0] cmd_xbar_mux_002_src_channel;                                                                       // cmd_xbar_mux_002:src_channel -> fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_002_src_ready;                                                                         // fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_002:src_ready
	wire          fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                // fifo_bridge_cpus0_cpus1_s1_translator:uav_waitrequest -> fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                 // fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> fifo_bridge_cpus0_cpus1_s1_translator:uav_burstcount
	wire   [31:0] fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                  // fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> fifo_bridge_cpus0_cpus1_s1_translator:uav_writedata
	wire   [27:0] fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_address;                    // fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:m0_address -> fifo_bridge_cpus0_cpus1_s1_translator:uav_address
	wire          fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_write;                      // fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:m0_write -> fifo_bridge_cpus0_cpus1_s1_translator:uav_write
	wire          fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_lock;                       // fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:m0_lock -> fifo_bridge_cpus0_cpus1_s1_translator:uav_lock
	wire          fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_read;                       // fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:m0_read -> fifo_bridge_cpus0_cpus1_s1_translator:uav_read
	wire   [31:0] fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                   // fifo_bridge_cpus0_cpus1_s1_translator:uav_readdata -> fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;              // fifo_bridge_cpus0_cpus1_s1_translator:uav_readdatavalid -> fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                // fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> fifo_bridge_cpus0_cpus1_s1_translator:uav_debugaccess
	wire    [3:0] fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                 // fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> fifo_bridge_cpus0_cpus1_s1_translator:uav_byteenable
	wire          fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;         // fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;               // fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;       // fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [104:0] fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                // fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;               // fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;      // fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;            // fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;    // fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [104:0] fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;             // fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;            // fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;          // fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;           // fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;          // fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_003_src_endofpacket;                                                                   // cmd_xbar_mux_003:src_endofpacket -> fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_003_src_valid;                                                                         // cmd_xbar_mux_003:src_valid -> fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_003_src_startofpacket;                                                                 // cmd_xbar_mux_003:src_startofpacket -> fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [103:0] cmd_xbar_mux_003_src_data;                                                                          // cmd_xbar_mux_003:src_data -> fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire    [4:0] cmd_xbar_mux_003_src_channel;                                                                       // cmd_xbar_mux_003:src_channel -> fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_003_src_ready;                                                                         // fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_003:src_ready
	wire          s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest;             // s1_io_clockCrossing_bridge_s0_translator:uav_waitrequest -> s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire    [2:0] s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_burstcount;              // s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:m0_burstcount -> s1_io_clockCrossing_bridge_s0_translator:uav_burstcount
	wire   [31:0] s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_writedata;               // s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:m0_writedata -> s1_io_clockCrossing_bridge_s0_translator:uav_writedata
	wire   [27:0] s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_address;                 // s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:m0_address -> s1_io_clockCrossing_bridge_s0_translator:uav_address
	wire          s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_write;                   // s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:m0_write -> s1_io_clockCrossing_bridge_s0_translator:uav_write
	wire          s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_lock;                    // s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:m0_lock -> s1_io_clockCrossing_bridge_s0_translator:uav_lock
	wire          s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_read;                    // s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:m0_read -> s1_io_clockCrossing_bridge_s0_translator:uav_read
	wire   [31:0] s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_readdata;                // s1_io_clockCrossing_bridge_s0_translator:uav_readdata -> s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:m0_readdata
	wire          s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid;           // s1_io_clockCrossing_bridge_s0_translator:uav_readdatavalid -> s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire          s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess;             // s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:m0_debugaccess -> s1_io_clockCrossing_bridge_s0_translator:uav_debugaccess
	wire    [3:0] s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_byteenable;              // s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:m0_byteenable -> s1_io_clockCrossing_bridge_s0_translator:uav_byteenable
	wire          s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;      // s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire          s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rf_source_valid;            // s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:rf_source_valid -> s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire          s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;    // s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [104:0] s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rf_source_data;             // s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:rf_source_data -> s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire          s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rf_source_ready;            // s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire          s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;   // s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire          s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;         // s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire          s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket; // s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [104:0] s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;          // s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire          s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;         // s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:rf_sink_ready -> s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire          s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;       // s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire   [33:0] s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;        // s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire          s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;       // s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire          cmd_xbar_mux_004_src_endofpacket;                                                                   // cmd_xbar_mux_004:src_endofpacket -> s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire          cmd_xbar_mux_004_src_valid;                                                                         // cmd_xbar_mux_004:src_valid -> s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:cp_valid
	wire          cmd_xbar_mux_004_src_startofpacket;                                                                 // cmd_xbar_mux_004:src_startofpacket -> s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [103:0] cmd_xbar_mux_004_src_data;                                                                          // cmd_xbar_mux_004:src_data -> s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:cp_data
	wire    [4:0] cmd_xbar_mux_004_src_channel;                                                                       // cmd_xbar_mux_004:src_channel -> s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:cp_channel
	wire          cmd_xbar_mux_004_src_ready;                                                                         // s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_004:src_ready
	wire          cpu_s1_instruction_master_translator_avalon_universal_master_0_agent_cp_endofpacket;                // cpu_s1_instruction_master_translator_avalon_universal_master_0_agent:cp_endofpacket -> addr_router:sink_endofpacket
	wire          cpu_s1_instruction_master_translator_avalon_universal_master_0_agent_cp_valid;                      // cpu_s1_instruction_master_translator_avalon_universal_master_0_agent:cp_valid -> addr_router:sink_valid
	wire          cpu_s1_instruction_master_translator_avalon_universal_master_0_agent_cp_startofpacket;              // cpu_s1_instruction_master_translator_avalon_universal_master_0_agent:cp_startofpacket -> addr_router:sink_startofpacket
	wire  [103:0] cpu_s1_instruction_master_translator_avalon_universal_master_0_agent_cp_data;                       // cpu_s1_instruction_master_translator_avalon_universal_master_0_agent:cp_data -> addr_router:sink_data
	wire          cpu_s1_instruction_master_translator_avalon_universal_master_0_agent_cp_ready;                      // addr_router:sink_ready -> cpu_s1_instruction_master_translator_avalon_universal_master_0_agent:cp_ready
	wire          cpu_s1_data_master_translator_avalon_universal_master_0_agent_cp_endofpacket;                       // cpu_s1_data_master_translator_avalon_universal_master_0_agent:cp_endofpacket -> addr_router_001:sink_endofpacket
	wire          cpu_s1_data_master_translator_avalon_universal_master_0_agent_cp_valid;                             // cpu_s1_data_master_translator_avalon_universal_master_0_agent:cp_valid -> addr_router_001:sink_valid
	wire          cpu_s1_data_master_translator_avalon_universal_master_0_agent_cp_startofpacket;                     // cpu_s1_data_master_translator_avalon_universal_master_0_agent:cp_startofpacket -> addr_router_001:sink_startofpacket
	wire  [103:0] cpu_s1_data_master_translator_avalon_universal_master_0_agent_cp_data;                              // cpu_s1_data_master_translator_avalon_universal_master_0_agent:cp_data -> addr_router_001:sink_data
	wire          cpu_s1_data_master_translator_avalon_universal_master_0_agent_cp_ready;                             // addr_router_001:sink_ready -> cpu_s1_data_master_translator_avalon_universal_master_0_agent:cp_ready
	wire          addr_router_001_src_endofpacket;                                                                    // addr_router_001:src_endofpacket -> cmd_xbar_demux_001:sink_endofpacket
	wire          addr_router_001_src_valid;                                                                          // addr_router_001:src_valid -> cmd_xbar_demux_001:sink_valid
	wire          addr_router_001_src_startofpacket;                                                                  // addr_router_001:src_startofpacket -> cmd_xbar_demux_001:sink_startofpacket
	wire  [103:0] addr_router_001_src_data;                                                                           // addr_router_001:src_data -> cmd_xbar_demux_001:sink_data
	wire    [4:0] addr_router_001_src_channel;                                                                        // addr_router_001:src_channel -> cmd_xbar_demux_001:sink_channel
	wire          addr_router_001_src_ready;                                                                          // cmd_xbar_demux_001:sink_ready -> addr_router_001:src_ready
	wire          cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_endofpacket;                  // cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router:sink_endofpacket
	wire          cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_valid;                        // cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_valid -> id_router:sink_valid
	wire          cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_startofpacket;                // cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router:sink_startofpacket
	wire  [103:0] cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_data;                         // cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_data -> id_router:sink_data
	wire          cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_ready;                        // id_router:sink_ready -> cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_src_endofpacket;                                                                          // id_router:src_endofpacket -> rsp_xbar_demux:sink_endofpacket
	wire          id_router_src_valid;                                                                                // id_router:src_valid -> rsp_xbar_demux:sink_valid
	wire          id_router_src_startofpacket;                                                                        // id_router:src_startofpacket -> rsp_xbar_demux:sink_startofpacket
	wire  [103:0] id_router_src_data;                                                                                 // id_router:src_data -> rsp_xbar_demux:sink_data
	wire    [4:0] id_router_src_channel;                                                                              // id_router:src_channel -> rsp_xbar_demux:sink_channel
	wire          id_router_src_ready;                                                                                // rsp_xbar_demux:sink_ready -> id_router:src_ready
	wire          onchip_sram_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                            // onchip_sram_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_001:sink_endofpacket
	wire          onchip_sram_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                  // onchip_sram_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_001:sink_valid
	wire          onchip_sram_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                          // onchip_sram_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_001:sink_startofpacket
	wire  [103:0] onchip_sram_s1_translator_avalon_universal_slave_0_agent_rp_data;                                   // onchip_sram_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_001:sink_data
	wire          onchip_sram_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                  // id_router_001:sink_ready -> onchip_sram_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_001_src_endofpacket;                                                                      // id_router_001:src_endofpacket -> rsp_xbar_demux_001:sink_endofpacket
	wire          id_router_001_src_valid;                                                                            // id_router_001:src_valid -> rsp_xbar_demux_001:sink_valid
	wire          id_router_001_src_startofpacket;                                                                    // id_router_001:src_startofpacket -> rsp_xbar_demux_001:sink_startofpacket
	wire  [103:0] id_router_001_src_data;                                                                             // id_router_001:src_data -> rsp_xbar_demux_001:sink_data
	wire    [4:0] id_router_001_src_channel;                                                                          // id_router_001:src_channel -> rsp_xbar_demux_001:sink_channel
	wire          id_router_001_src_ready;                                                                            // rsp_xbar_demux_001:sink_ready -> id_router_001:src_ready
	wire          fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket;                 // fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_002:sink_endofpacket
	wire          fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rp_valid;                       // fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_002:sink_valid
	wire          fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket;               // fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_002:sink_startofpacket
	wire  [103:0] fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rp_data;                        // fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:rp_data -> id_router_002:sink_data
	wire          fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rp_ready;                       // id_router_002:sink_ready -> fifo_bridge_cpuM_cpus1_s0_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_002_src_endofpacket;                                                                      // id_router_002:src_endofpacket -> rsp_xbar_demux_002:sink_endofpacket
	wire          id_router_002_src_valid;                                                                            // id_router_002:src_valid -> rsp_xbar_demux_002:sink_valid
	wire          id_router_002_src_startofpacket;                                                                    // id_router_002:src_startofpacket -> rsp_xbar_demux_002:sink_startofpacket
	wire  [103:0] id_router_002_src_data;                                                                             // id_router_002:src_data -> rsp_xbar_demux_002:sink_data
	wire    [4:0] id_router_002_src_channel;                                                                          // id_router_002:src_channel -> rsp_xbar_demux_002:sink_channel
	wire          id_router_002_src_ready;                                                                            // rsp_xbar_demux_002:sink_ready -> id_router_002:src_ready
	wire          fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                // fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_003:sink_endofpacket
	wire          fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rp_valid;                      // fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_003:sink_valid
	wire          fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;              // fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_003:sink_startofpacket
	wire  [103:0] fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rp_data;                       // fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_003:sink_data
	wire          fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rp_ready;                      // id_router_003:sink_ready -> fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_003_src_endofpacket;                                                                      // id_router_003:src_endofpacket -> rsp_xbar_demux_003:sink_endofpacket
	wire          id_router_003_src_valid;                                                                            // id_router_003:src_valid -> rsp_xbar_demux_003:sink_valid
	wire          id_router_003_src_startofpacket;                                                                    // id_router_003:src_startofpacket -> rsp_xbar_demux_003:sink_startofpacket
	wire  [103:0] id_router_003_src_data;                                                                             // id_router_003:src_data -> rsp_xbar_demux_003:sink_data
	wire    [4:0] id_router_003_src_channel;                                                                          // id_router_003:src_channel -> rsp_xbar_demux_003:sink_channel
	wire          id_router_003_src_ready;                                                                            // rsp_xbar_demux_003:sink_ready -> id_router_003:src_ready
	wire          s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket;             // s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_004:sink_endofpacket
	wire          s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rp_valid;                   // s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_004:sink_valid
	wire          s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket;           // s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_004:sink_startofpacket
	wire  [103:0] s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rp_data;                    // s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:rp_data -> id_router_004:sink_data
	wire          s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rp_ready;                   // id_router_004:sink_ready -> s1_io_clockCrossing_bridge_s0_translator_avalon_universal_slave_0_agent:rp_ready
	wire          id_router_004_src_endofpacket;                                                                      // id_router_004:src_endofpacket -> rsp_xbar_demux_004:sink_endofpacket
	wire          id_router_004_src_valid;                                                                            // id_router_004:src_valid -> rsp_xbar_demux_004:sink_valid
	wire          id_router_004_src_startofpacket;                                                                    // id_router_004:src_startofpacket -> rsp_xbar_demux_004:sink_startofpacket
	wire  [103:0] id_router_004_src_data;                                                                             // id_router_004:src_data -> rsp_xbar_demux_004:sink_data
	wire    [4:0] id_router_004_src_channel;                                                                          // id_router_004:src_channel -> rsp_xbar_demux_004:sink_channel
	wire          id_router_004_src_ready;                                                                            // rsp_xbar_demux_004:sink_ready -> id_router_004:src_ready
	wire          addr_router_src_endofpacket;                                                                        // addr_router:src_endofpacket -> limiter:cmd_sink_endofpacket
	wire          addr_router_src_valid;                                                                              // addr_router:src_valid -> limiter:cmd_sink_valid
	wire          addr_router_src_startofpacket;                                                                      // addr_router:src_startofpacket -> limiter:cmd_sink_startofpacket
	wire  [103:0] addr_router_src_data;                                                                               // addr_router:src_data -> limiter:cmd_sink_data
	wire    [4:0] addr_router_src_channel;                                                                            // addr_router:src_channel -> limiter:cmd_sink_channel
	wire          addr_router_src_ready;                                                                              // limiter:cmd_sink_ready -> addr_router:src_ready
	wire          limiter_cmd_src_endofpacket;                                                                        // limiter:cmd_src_endofpacket -> cmd_xbar_demux:sink_endofpacket
	wire          limiter_cmd_src_startofpacket;                                                                      // limiter:cmd_src_startofpacket -> cmd_xbar_demux:sink_startofpacket
	wire  [103:0] limiter_cmd_src_data;                                                                               // limiter:cmd_src_data -> cmd_xbar_demux:sink_data
	wire    [4:0] limiter_cmd_src_channel;                                                                            // limiter:cmd_src_channel -> cmd_xbar_demux:sink_channel
	wire          limiter_cmd_src_ready;                                                                              // cmd_xbar_demux:sink_ready -> limiter:cmd_src_ready
	wire          rsp_xbar_mux_src_endofpacket;                                                                       // rsp_xbar_mux:src_endofpacket -> limiter:rsp_sink_endofpacket
	wire          rsp_xbar_mux_src_valid;                                                                             // rsp_xbar_mux:src_valid -> limiter:rsp_sink_valid
	wire          rsp_xbar_mux_src_startofpacket;                                                                     // rsp_xbar_mux:src_startofpacket -> limiter:rsp_sink_startofpacket
	wire  [103:0] rsp_xbar_mux_src_data;                                                                              // rsp_xbar_mux:src_data -> limiter:rsp_sink_data
	wire    [4:0] rsp_xbar_mux_src_channel;                                                                           // rsp_xbar_mux:src_channel -> limiter:rsp_sink_channel
	wire          rsp_xbar_mux_src_ready;                                                                             // limiter:rsp_sink_ready -> rsp_xbar_mux:src_ready
	wire          limiter_rsp_src_endofpacket;                                                                        // limiter:rsp_src_endofpacket -> cpu_s1_instruction_master_translator_avalon_universal_master_0_agent:rp_endofpacket
	wire          limiter_rsp_src_valid;                                                                              // limiter:rsp_src_valid -> cpu_s1_instruction_master_translator_avalon_universal_master_0_agent:rp_valid
	wire          limiter_rsp_src_startofpacket;                                                                      // limiter:rsp_src_startofpacket -> cpu_s1_instruction_master_translator_avalon_universal_master_0_agent:rp_startofpacket
	wire  [103:0] limiter_rsp_src_data;                                                                               // limiter:rsp_src_data -> cpu_s1_instruction_master_translator_avalon_universal_master_0_agent:rp_data
	wire    [4:0] limiter_rsp_src_channel;                                                                            // limiter:rsp_src_channel -> cpu_s1_instruction_master_translator_avalon_universal_master_0_agent:rp_channel
	wire          limiter_rsp_src_ready;                                                                              // cpu_s1_instruction_master_translator_avalon_universal_master_0_agent:rp_ready -> limiter:rsp_src_ready
	wire          cmd_xbar_demux_src0_endofpacket;                                                                    // cmd_xbar_demux:src0_endofpacket -> cmd_xbar_mux:sink0_endofpacket
	wire          cmd_xbar_demux_src0_valid;                                                                          // cmd_xbar_demux:src0_valid -> cmd_xbar_mux:sink0_valid
	wire          cmd_xbar_demux_src0_startofpacket;                                                                  // cmd_xbar_demux:src0_startofpacket -> cmd_xbar_mux:sink0_startofpacket
	wire  [103:0] cmd_xbar_demux_src0_data;                                                                           // cmd_xbar_demux:src0_data -> cmd_xbar_mux:sink0_data
	wire    [4:0] cmd_xbar_demux_src0_channel;                                                                        // cmd_xbar_demux:src0_channel -> cmd_xbar_mux:sink0_channel
	wire          cmd_xbar_demux_src0_ready;                                                                          // cmd_xbar_mux:sink0_ready -> cmd_xbar_demux:src0_ready
	wire          cmd_xbar_demux_src1_endofpacket;                                                                    // cmd_xbar_demux:src1_endofpacket -> cmd_xbar_mux_001:sink0_endofpacket
	wire          cmd_xbar_demux_src1_valid;                                                                          // cmd_xbar_demux:src1_valid -> cmd_xbar_mux_001:sink0_valid
	wire          cmd_xbar_demux_src1_startofpacket;                                                                  // cmd_xbar_demux:src1_startofpacket -> cmd_xbar_mux_001:sink0_startofpacket
	wire  [103:0] cmd_xbar_demux_src1_data;                                                                           // cmd_xbar_demux:src1_data -> cmd_xbar_mux_001:sink0_data
	wire    [4:0] cmd_xbar_demux_src1_channel;                                                                        // cmd_xbar_demux:src1_channel -> cmd_xbar_mux_001:sink0_channel
	wire          cmd_xbar_demux_src1_ready;                                                                          // cmd_xbar_mux_001:sink0_ready -> cmd_xbar_demux:src1_ready
	wire          cmd_xbar_demux_001_src0_endofpacket;                                                                // cmd_xbar_demux_001:src0_endofpacket -> cmd_xbar_mux:sink1_endofpacket
	wire          cmd_xbar_demux_001_src0_valid;                                                                      // cmd_xbar_demux_001:src0_valid -> cmd_xbar_mux:sink1_valid
	wire          cmd_xbar_demux_001_src0_startofpacket;                                                              // cmd_xbar_demux_001:src0_startofpacket -> cmd_xbar_mux:sink1_startofpacket
	wire  [103:0] cmd_xbar_demux_001_src0_data;                                                                       // cmd_xbar_demux_001:src0_data -> cmd_xbar_mux:sink1_data
	wire    [4:0] cmd_xbar_demux_001_src0_channel;                                                                    // cmd_xbar_demux_001:src0_channel -> cmd_xbar_mux:sink1_channel
	wire          cmd_xbar_demux_001_src0_ready;                                                                      // cmd_xbar_mux:sink1_ready -> cmd_xbar_demux_001:src0_ready
	wire          cmd_xbar_demux_001_src1_endofpacket;                                                                // cmd_xbar_demux_001:src1_endofpacket -> cmd_xbar_mux_001:sink1_endofpacket
	wire          cmd_xbar_demux_001_src1_valid;                                                                      // cmd_xbar_demux_001:src1_valid -> cmd_xbar_mux_001:sink1_valid
	wire          cmd_xbar_demux_001_src1_startofpacket;                                                              // cmd_xbar_demux_001:src1_startofpacket -> cmd_xbar_mux_001:sink1_startofpacket
	wire  [103:0] cmd_xbar_demux_001_src1_data;                                                                       // cmd_xbar_demux_001:src1_data -> cmd_xbar_mux_001:sink1_data
	wire    [4:0] cmd_xbar_demux_001_src1_channel;                                                                    // cmd_xbar_demux_001:src1_channel -> cmd_xbar_mux_001:sink1_channel
	wire          cmd_xbar_demux_001_src1_ready;                                                                      // cmd_xbar_mux_001:sink1_ready -> cmd_xbar_demux_001:src1_ready
	wire          cmd_xbar_demux_001_src2_endofpacket;                                                                // cmd_xbar_demux_001:src2_endofpacket -> cmd_xbar_mux_002:sink0_endofpacket
	wire          cmd_xbar_demux_001_src2_valid;                                                                      // cmd_xbar_demux_001:src2_valid -> cmd_xbar_mux_002:sink0_valid
	wire          cmd_xbar_demux_001_src2_startofpacket;                                                              // cmd_xbar_demux_001:src2_startofpacket -> cmd_xbar_mux_002:sink0_startofpacket
	wire  [103:0] cmd_xbar_demux_001_src2_data;                                                                       // cmd_xbar_demux_001:src2_data -> cmd_xbar_mux_002:sink0_data
	wire    [4:0] cmd_xbar_demux_001_src2_channel;                                                                    // cmd_xbar_demux_001:src2_channel -> cmd_xbar_mux_002:sink0_channel
	wire          cmd_xbar_demux_001_src2_ready;                                                                      // cmd_xbar_mux_002:sink0_ready -> cmd_xbar_demux_001:src2_ready
	wire          cmd_xbar_demux_001_src3_endofpacket;                                                                // cmd_xbar_demux_001:src3_endofpacket -> cmd_xbar_mux_003:sink0_endofpacket
	wire          cmd_xbar_demux_001_src3_valid;                                                                      // cmd_xbar_demux_001:src3_valid -> cmd_xbar_mux_003:sink0_valid
	wire          cmd_xbar_demux_001_src3_startofpacket;                                                              // cmd_xbar_demux_001:src3_startofpacket -> cmd_xbar_mux_003:sink0_startofpacket
	wire  [103:0] cmd_xbar_demux_001_src3_data;                                                                       // cmd_xbar_demux_001:src3_data -> cmd_xbar_mux_003:sink0_data
	wire    [4:0] cmd_xbar_demux_001_src3_channel;                                                                    // cmd_xbar_demux_001:src3_channel -> cmd_xbar_mux_003:sink0_channel
	wire          cmd_xbar_demux_001_src3_ready;                                                                      // cmd_xbar_mux_003:sink0_ready -> cmd_xbar_demux_001:src3_ready
	wire          cmd_xbar_demux_001_src4_endofpacket;                                                                // cmd_xbar_demux_001:src4_endofpacket -> cmd_xbar_mux_004:sink0_endofpacket
	wire          cmd_xbar_demux_001_src4_valid;                                                                      // cmd_xbar_demux_001:src4_valid -> cmd_xbar_mux_004:sink0_valid
	wire          cmd_xbar_demux_001_src4_startofpacket;                                                              // cmd_xbar_demux_001:src4_startofpacket -> cmd_xbar_mux_004:sink0_startofpacket
	wire  [103:0] cmd_xbar_demux_001_src4_data;                                                                       // cmd_xbar_demux_001:src4_data -> cmd_xbar_mux_004:sink0_data
	wire    [4:0] cmd_xbar_demux_001_src4_channel;                                                                    // cmd_xbar_demux_001:src4_channel -> cmd_xbar_mux_004:sink0_channel
	wire          cmd_xbar_demux_001_src4_ready;                                                                      // cmd_xbar_mux_004:sink0_ready -> cmd_xbar_demux_001:src4_ready
	wire          rsp_xbar_demux_src0_endofpacket;                                                                    // rsp_xbar_demux:src0_endofpacket -> rsp_xbar_mux:sink0_endofpacket
	wire          rsp_xbar_demux_src0_valid;                                                                          // rsp_xbar_demux:src0_valid -> rsp_xbar_mux:sink0_valid
	wire          rsp_xbar_demux_src0_startofpacket;                                                                  // rsp_xbar_demux:src0_startofpacket -> rsp_xbar_mux:sink0_startofpacket
	wire  [103:0] rsp_xbar_demux_src0_data;                                                                           // rsp_xbar_demux:src0_data -> rsp_xbar_mux:sink0_data
	wire    [4:0] rsp_xbar_demux_src0_channel;                                                                        // rsp_xbar_demux:src0_channel -> rsp_xbar_mux:sink0_channel
	wire          rsp_xbar_demux_src0_ready;                                                                          // rsp_xbar_mux:sink0_ready -> rsp_xbar_demux:src0_ready
	wire          rsp_xbar_demux_src1_endofpacket;                                                                    // rsp_xbar_demux:src1_endofpacket -> rsp_xbar_mux_001:sink0_endofpacket
	wire          rsp_xbar_demux_src1_valid;                                                                          // rsp_xbar_demux:src1_valid -> rsp_xbar_mux_001:sink0_valid
	wire          rsp_xbar_demux_src1_startofpacket;                                                                  // rsp_xbar_demux:src1_startofpacket -> rsp_xbar_mux_001:sink0_startofpacket
	wire  [103:0] rsp_xbar_demux_src1_data;                                                                           // rsp_xbar_demux:src1_data -> rsp_xbar_mux_001:sink0_data
	wire    [4:0] rsp_xbar_demux_src1_channel;                                                                        // rsp_xbar_demux:src1_channel -> rsp_xbar_mux_001:sink0_channel
	wire          rsp_xbar_demux_src1_ready;                                                                          // rsp_xbar_mux_001:sink0_ready -> rsp_xbar_demux:src1_ready
	wire          rsp_xbar_demux_001_src0_endofpacket;                                                                // rsp_xbar_demux_001:src0_endofpacket -> rsp_xbar_mux:sink1_endofpacket
	wire          rsp_xbar_demux_001_src0_valid;                                                                      // rsp_xbar_demux_001:src0_valid -> rsp_xbar_mux:sink1_valid
	wire          rsp_xbar_demux_001_src0_startofpacket;                                                              // rsp_xbar_demux_001:src0_startofpacket -> rsp_xbar_mux:sink1_startofpacket
	wire  [103:0] rsp_xbar_demux_001_src0_data;                                                                       // rsp_xbar_demux_001:src0_data -> rsp_xbar_mux:sink1_data
	wire    [4:0] rsp_xbar_demux_001_src0_channel;                                                                    // rsp_xbar_demux_001:src0_channel -> rsp_xbar_mux:sink1_channel
	wire          rsp_xbar_demux_001_src0_ready;                                                                      // rsp_xbar_mux:sink1_ready -> rsp_xbar_demux_001:src0_ready
	wire          rsp_xbar_demux_001_src1_endofpacket;                                                                // rsp_xbar_demux_001:src1_endofpacket -> rsp_xbar_mux_001:sink1_endofpacket
	wire          rsp_xbar_demux_001_src1_valid;                                                                      // rsp_xbar_demux_001:src1_valid -> rsp_xbar_mux_001:sink1_valid
	wire          rsp_xbar_demux_001_src1_startofpacket;                                                              // rsp_xbar_demux_001:src1_startofpacket -> rsp_xbar_mux_001:sink1_startofpacket
	wire  [103:0] rsp_xbar_demux_001_src1_data;                                                                       // rsp_xbar_demux_001:src1_data -> rsp_xbar_mux_001:sink1_data
	wire    [4:0] rsp_xbar_demux_001_src1_channel;                                                                    // rsp_xbar_demux_001:src1_channel -> rsp_xbar_mux_001:sink1_channel
	wire          rsp_xbar_demux_001_src1_ready;                                                                      // rsp_xbar_mux_001:sink1_ready -> rsp_xbar_demux_001:src1_ready
	wire          rsp_xbar_demux_002_src0_endofpacket;                                                                // rsp_xbar_demux_002:src0_endofpacket -> rsp_xbar_mux_001:sink2_endofpacket
	wire          rsp_xbar_demux_002_src0_valid;                                                                      // rsp_xbar_demux_002:src0_valid -> rsp_xbar_mux_001:sink2_valid
	wire          rsp_xbar_demux_002_src0_startofpacket;                                                              // rsp_xbar_demux_002:src0_startofpacket -> rsp_xbar_mux_001:sink2_startofpacket
	wire  [103:0] rsp_xbar_demux_002_src0_data;                                                                       // rsp_xbar_demux_002:src0_data -> rsp_xbar_mux_001:sink2_data
	wire    [4:0] rsp_xbar_demux_002_src0_channel;                                                                    // rsp_xbar_demux_002:src0_channel -> rsp_xbar_mux_001:sink2_channel
	wire          rsp_xbar_demux_002_src0_ready;                                                                      // rsp_xbar_mux_001:sink2_ready -> rsp_xbar_demux_002:src0_ready
	wire          rsp_xbar_demux_003_src0_endofpacket;                                                                // rsp_xbar_demux_003:src0_endofpacket -> rsp_xbar_mux_001:sink3_endofpacket
	wire          rsp_xbar_demux_003_src0_valid;                                                                      // rsp_xbar_demux_003:src0_valid -> rsp_xbar_mux_001:sink3_valid
	wire          rsp_xbar_demux_003_src0_startofpacket;                                                              // rsp_xbar_demux_003:src0_startofpacket -> rsp_xbar_mux_001:sink3_startofpacket
	wire  [103:0] rsp_xbar_demux_003_src0_data;                                                                       // rsp_xbar_demux_003:src0_data -> rsp_xbar_mux_001:sink3_data
	wire    [4:0] rsp_xbar_demux_003_src0_channel;                                                                    // rsp_xbar_demux_003:src0_channel -> rsp_xbar_mux_001:sink3_channel
	wire          rsp_xbar_demux_003_src0_ready;                                                                      // rsp_xbar_mux_001:sink3_ready -> rsp_xbar_demux_003:src0_ready
	wire          rsp_xbar_demux_004_src0_endofpacket;                                                                // rsp_xbar_demux_004:src0_endofpacket -> rsp_xbar_mux_001:sink4_endofpacket
	wire          rsp_xbar_demux_004_src0_valid;                                                                      // rsp_xbar_demux_004:src0_valid -> rsp_xbar_mux_001:sink4_valid
	wire          rsp_xbar_demux_004_src0_startofpacket;                                                              // rsp_xbar_demux_004:src0_startofpacket -> rsp_xbar_mux_001:sink4_startofpacket
	wire  [103:0] rsp_xbar_demux_004_src0_data;                                                                       // rsp_xbar_demux_004:src0_data -> rsp_xbar_mux_001:sink4_data
	wire    [4:0] rsp_xbar_demux_004_src0_channel;                                                                    // rsp_xbar_demux_004:src0_channel -> rsp_xbar_mux_001:sink4_channel
	wire          rsp_xbar_demux_004_src0_ready;                                                                      // rsp_xbar_mux_001:sink4_ready -> rsp_xbar_demux_004:src0_ready
	wire    [4:0] limiter_cmd_valid_data;                                                                             // limiter:cmd_src_valid -> cmd_xbar_demux:sink_valid

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (28),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (28),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (0),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (1),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (1),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) cpu_s1_instruction_master_translator (
		.clk                      (system_pll_outclk0_clk),                                                       //                       clk.clk
		.reset                    (cpu_s1_reset_n_reset_bridge_in_reset_reset),                                   //                     reset.reset
		.uav_address              (cpu_s1_instruction_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount           (cpu_s1_instruction_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read                 (cpu_s1_instruction_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write                (cpu_s1_instruction_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest          (cpu_s1_instruction_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid        (cpu_s1_instruction_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable           (cpu_s1_instruction_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata             (cpu_s1_instruction_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata            (cpu_s1_instruction_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock                 (cpu_s1_instruction_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess          (cpu_s1_instruction_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address               (cpu_s1_instruction_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest           (cpu_s1_instruction_master_waitrequest),                                        //                          .waitrequest
		.av_read                  (cpu_s1_instruction_master_read),                                               //                          .read
		.av_readdata              (cpu_s1_instruction_master_readdata),                                           //                          .readdata
		.av_readdatavalid         (cpu_s1_instruction_master_readdatavalid),                                      //                          .readdatavalid
		.av_burstcount            (1'b1),                                                                         //               (terminated)
		.av_byteenable            (4'b1111),                                                                      //               (terminated)
		.av_beginbursttransfer    (1'b0),                                                                         //               (terminated)
		.av_begintransfer         (1'b0),                                                                         //               (terminated)
		.av_chipselect            (1'b0),                                                                         //               (terminated)
		.av_write                 (1'b0),                                                                         //               (terminated)
		.av_writedata             (32'b00000000000000000000000000000000),                                         //               (terminated)
		.av_lock                  (1'b0),                                                                         //               (terminated)
		.av_debugaccess           (1'b0),                                                                         //               (terminated)
		.uav_clken                (),                                                                             //               (terminated)
		.av_clken                 (1'b1),                                                                         //               (terminated)
		.uav_response             (2'b00),                                                                        //               (terminated)
		.av_response              (),                                                                             //               (terminated)
		.uav_writeresponserequest (),                                                                             //               (terminated)
		.uav_writeresponsevalid   (1'b0),                                                                         //               (terminated)
		.av_writeresponserequest  (1'b0),                                                                         //               (terminated)
		.av_writeresponsevalid    ()                                                                              //               (terminated)
	);

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (28),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (28),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (1),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (0),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) cpu_s1_data_master_translator (
		.clk                      (system_pll_outclk0_clk),                                                //                       clk.clk
		.reset                    (cpu_s1_reset_n_reset_bridge_in_reset_reset),                            //                     reset.reset
		.uav_address              (cpu_s1_data_master_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount           (cpu_s1_data_master_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read                 (cpu_s1_data_master_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write                (cpu_s1_data_master_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest          (cpu_s1_data_master_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid        (cpu_s1_data_master_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable           (cpu_s1_data_master_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata             (cpu_s1_data_master_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata            (cpu_s1_data_master_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock                 (cpu_s1_data_master_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess          (cpu_s1_data_master_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address               (cpu_s1_data_master_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest           (cpu_s1_data_master_waitrequest),                                        //                          .waitrequest
		.av_byteenable            (cpu_s1_data_master_byteenable),                                         //                          .byteenable
		.av_read                  (cpu_s1_data_master_read),                                               //                          .read
		.av_readdata              (cpu_s1_data_master_readdata),                                           //                          .readdata
		.av_write                 (cpu_s1_data_master_write),                                              //                          .write
		.av_writedata             (cpu_s1_data_master_writedata),                                          //                          .writedata
		.av_debugaccess           (cpu_s1_data_master_debugaccess),                                        //                          .debugaccess
		.av_burstcount            (1'b1),                                                                  //               (terminated)
		.av_beginbursttransfer    (1'b0),                                                                  //               (terminated)
		.av_begintransfer         (1'b0),                                                                  //               (terminated)
		.av_chipselect            (1'b0),                                                                  //               (terminated)
		.av_readdatavalid         (),                                                                      //               (terminated)
		.av_lock                  (1'b0),                                                                  //               (terminated)
		.uav_clken                (),                                                                      //               (terminated)
		.av_clken                 (1'b1),                                                                  //               (terminated)
		.uav_response             (2'b00),                                                                 //               (terminated)
		.av_response              (),                                                                      //               (terminated)
		.uav_writeresponserequest (),                                                                      //               (terminated)
		.uav_writeresponsevalid   (1'b0),                                                                  //               (terminated)
		.av_writeresponserequest  (1'b0),                                                                  //               (terminated)
		.av_writeresponsevalid    ()                                                                       //               (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (9),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (28),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) cpu_s1_jtag_debug_module_translator (
		.clk                      (system_pll_outclk0_clk),                                                              //                      clk.clk
		.reset                    (cpu_s1_reset_n_reset_bridge_in_reset_reset),                                          //                    reset.reset
		.uav_address              (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (cpu_s1_jtag_debug_module_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (cpu_s1_jtag_debug_module_write),                                                      //                         .write
		.av_read                  (cpu_s1_jtag_debug_module_read),                                                       //                         .read
		.av_readdata              (cpu_s1_jtag_debug_module_readdata),                                                   //                         .readdata
		.av_writedata             (cpu_s1_jtag_debug_module_writedata),                                                  //                         .writedata
		.av_byteenable            (cpu_s1_jtag_debug_module_byteenable),                                                 //                         .byteenable
		.av_waitrequest           (cpu_s1_jtag_debug_module_waitrequest),                                                //                         .waitrequest
		.av_debugaccess           (cpu_s1_jtag_debug_module_debugaccess),                                                //                         .debugaccess
		.av_begintransfer         (),                                                                                    //              (terminated)
		.av_beginbursttransfer    (),                                                                                    //              (terminated)
		.av_burstcount            (),                                                                                    //              (terminated)
		.av_readdatavalid         (1'b0),                                                                                //              (terminated)
		.av_writebyteenable       (),                                                                                    //              (terminated)
		.av_lock                  (),                                                                                    //              (terminated)
		.av_chipselect            (),                                                                                    //              (terminated)
		.av_clken                 (),                                                                                    //              (terminated)
		.uav_clken                (1'b0),                                                                                //              (terminated)
		.av_outputenable          (),                                                                                    //              (terminated)
		.uav_response             (),                                                                                    //              (terminated)
		.av_response              (2'b00),                                                                               //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                                //              (terminated)
		.uav_writeresponsevalid   (),                                                                                    //              (terminated)
		.av_writeresponserequest  (),                                                                                    //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                                 //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (17),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (28),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (1),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) onchip_sram_s1_translator (
		.clk                      (system_pll_outclk0_clk),                                                    //                      clk.clk
		.reset                    (cpu_s1_reset_n_reset_bridge_in_reset_reset),                                //                    reset.reset
		.uav_address              (onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (onchip_sram_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (onchip_sram_s1_write),                                                      //                         .write
		.av_readdata              (onchip_sram_s1_readdata),                                                   //                         .readdata
		.av_writedata             (onchip_sram_s1_writedata),                                                  //                         .writedata
		.av_byteenable            (onchip_sram_s1_byteenable),                                                 //                         .byteenable
		.av_chipselect            (onchip_sram_s1_chipselect),                                                 //                         .chipselect
		.av_clken                 (onchip_sram_s1_clken),                                                      //                         .clken
		.av_read                  (),                                                                          //              (terminated)
		.av_begintransfer         (),                                                                          //              (terminated)
		.av_beginbursttransfer    (),                                                                          //              (terminated)
		.av_burstcount            (),                                                                          //              (terminated)
		.av_readdatavalid         (1'b0),                                                                      //              (terminated)
		.av_waitrequest           (1'b0),                                                                      //              (terminated)
		.av_writebyteenable       (),                                                                          //              (terminated)
		.av_lock                  (),                                                                          //              (terminated)
		.uav_clken                (1'b0),                                                                      //              (terminated)
		.av_debugaccess           (),                                                                          //              (terminated)
		.av_outputenable          (),                                                                          //              (terminated)
		.uav_response             (),                                                                          //              (terminated)
		.av_response              (2'b00),                                                                     //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                      //              (terminated)
		.uav_writeresponsevalid   (),                                                                          //              (terminated)
		.av_writeresponserequest  (),                                                                          //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                       //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (8),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (28),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) fifo_bridge_cpum_cpus1_s0_translator (
		.clk                      (system_pll_outclk0_clk),                                                               //                      clk.clk
		.reset                    (cpu_s1_reset_n_reset_bridge_in_reset_reset),                                           //                    reset.reset
		.uav_address              (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (fifo_bridge_cpuM_cpus1_s0_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (fifo_bridge_cpuM_cpus1_s0_write),                                                      //                         .write
		.av_read                  (fifo_bridge_cpuM_cpus1_s0_read),                                                       //                         .read
		.av_readdata              (fifo_bridge_cpuM_cpus1_s0_readdata),                                                   //                         .readdata
		.av_writedata             (fifo_bridge_cpuM_cpus1_s0_writedata),                                                  //                         .writedata
		.av_begintransfer         (),                                                                                     //              (terminated)
		.av_beginbursttransfer    (),                                                                                     //              (terminated)
		.av_burstcount            (),                                                                                     //              (terminated)
		.av_byteenable            (),                                                                                     //              (terminated)
		.av_readdatavalid         (1'b0),                                                                                 //              (terminated)
		.av_waitrequest           (1'b0),                                                                                 //              (terminated)
		.av_writebyteenable       (),                                                                                     //              (terminated)
		.av_lock                  (),                                                                                     //              (terminated)
		.av_chipselect            (),                                                                                     //              (terminated)
		.av_clken                 (),                                                                                     //              (terminated)
		.uav_clken                (1'b0),                                                                                 //              (terminated)
		.av_debugaccess           (),                                                                                     //              (terminated)
		.av_outputenable          (),                                                                                     //              (terminated)
		.uav_response             (),                                                                                     //              (terminated)
		.av_response              (2'b00),                                                                                //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                                 //              (terminated)
		.uav_writeresponsevalid   (),                                                                                     //              (terminated)
		.av_writeresponserequest  (),                                                                                     //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                                  //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (8),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (28),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) fifo_bridge_cpus0_cpus1_s1_translator (
		.clk                      (system_pll_outclk0_clk),                                                                //                      clk.clk
		.reset                    (cpu_s1_reset_n_reset_bridge_in_reset_reset),                                            //                    reset.reset
		.uav_address              (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (fifo_bridge_cpus0_cpus1_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (fifo_bridge_cpus0_cpus1_s1_write),                                                      //                         .write
		.av_read                  (fifo_bridge_cpus0_cpus1_s1_read),                                                       //                         .read
		.av_readdata              (fifo_bridge_cpus0_cpus1_s1_readdata),                                                   //                         .readdata
		.av_writedata             (fifo_bridge_cpus0_cpus1_s1_writedata),                                                  //                         .writedata
		.av_begintransfer         (),                                                                                      //              (terminated)
		.av_beginbursttransfer    (),                                                                                      //              (terminated)
		.av_burstcount            (),                                                                                      //              (terminated)
		.av_byteenable            (),                                                                                      //              (terminated)
		.av_readdatavalid         (1'b0),                                                                                  //              (terminated)
		.av_waitrequest           (1'b0),                                                                                  //              (terminated)
		.av_writebyteenable       (),                                                                                      //              (terminated)
		.av_lock                  (),                                                                                      //              (terminated)
		.av_chipselect            (),                                                                                      //              (terminated)
		.av_clken                 (),                                                                                      //              (terminated)
		.uav_clken                (1'b0),                                                                                  //              (terminated)
		.av_debugaccess           (),                                                                                      //              (terminated)
		.av_outputenable          (),                                                                                      //              (terminated)
		.uav_response             (),                                                                                      //              (terminated)
		.av_response              (2'b00),                                                                                 //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                                  //              (terminated)
		.uav_writeresponsevalid   (),                                                                                      //              (terminated)
		.av_writeresponserequest  (),                                                                                      //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                                   //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (10),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (28),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (1),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (1),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) s1_io_clockcrossing_bridge_s0_translator (
		.clk                      (system_pll_outclk0_clk),                                                                   //                      clk.clk
		.reset                    (cpu_s1_reset_n_reset_bridge_in_reset_reset),                                               //                    reset.reset
		.uav_address              (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (s1_io_clockCrossing_bridge_s0_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (s1_io_clockCrossing_bridge_s0_write),                                                      //                         .write
		.av_read                  (s1_io_clockCrossing_bridge_s0_read),                                                       //                         .read
		.av_readdata              (s1_io_clockCrossing_bridge_s0_readdata),                                                   //                         .readdata
		.av_writedata             (s1_io_clockCrossing_bridge_s0_writedata),                                                  //                         .writedata
		.av_burstcount            (s1_io_clockCrossing_bridge_s0_burstcount),                                                 //                         .burstcount
		.av_byteenable            (s1_io_clockCrossing_bridge_s0_byteenable),                                                 //                         .byteenable
		.av_readdatavalid         (s1_io_clockCrossing_bridge_s0_readdatavalid),                                              //                         .readdatavalid
		.av_waitrequest           (s1_io_clockCrossing_bridge_s0_waitrequest),                                                //                         .waitrequest
		.av_debugaccess           (s1_io_clockCrossing_bridge_s0_debugaccess),                                                //                         .debugaccess
		.av_begintransfer         (),                                                                                         //              (terminated)
		.av_beginbursttransfer    (),                                                                                         //              (terminated)
		.av_writebyteenable       (),                                                                                         //              (terminated)
		.av_lock                  (),                                                                                         //              (terminated)
		.av_chipselect            (),                                                                                         //              (terminated)
		.av_clken                 (),                                                                                         //              (terminated)
		.uav_clken                (1'b0),                                                                                     //              (terminated)
		.av_outputenable          (),                                                                                         //              (terminated)
		.uav_response             (),                                                                                         //              (terminated)
		.av_response              (2'b00),                                                                                    //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                                     //              (terminated)
		.uav_writeresponsevalid   (),                                                                                         //              (terminated)
		.av_writeresponserequest  (),                                                                                         //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                                      //              (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_PROTECTION_H          (94),
		.PKT_PROTECTION_L          (92),
		.PKT_BEGIN_BURST           (83),
		.PKT_BURSTWRAP_H           (75),
		.PKT_BURSTWRAP_L           (73),
		.PKT_BURST_SIZE_H          (78),
		.PKT_BURST_SIZE_L          (76),
		.PKT_BURST_TYPE_H          (80),
		.PKT_BURST_TYPE_L          (79),
		.PKT_BYTE_CNT_H            (72),
		.PKT_BYTE_CNT_L            (70),
		.PKT_ADDR_H                (63),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (64),
		.PKT_TRANS_POSTED          (65),
		.PKT_TRANS_WRITE           (66),
		.PKT_TRANS_READ            (67),
		.PKT_TRANS_LOCK            (68),
		.PKT_TRANS_EXCLUSIVE       (69),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (87),
		.PKT_SRC_ID_L              (85),
		.PKT_DEST_ID_H             (90),
		.PKT_DEST_ID_L             (88),
		.PKT_THREAD_ID_H           (91),
		.PKT_THREAD_ID_L           (91),
		.PKT_CACHE_H               (98),
		.PKT_CACHE_L               (95),
		.PKT_DATA_SIDEBAND_H       (82),
		.PKT_DATA_SIDEBAND_L       (82),
		.PKT_QOS_H                 (84),
		.PKT_QOS_L                 (84),
		.PKT_ADDR_SIDEBAND_H       (81),
		.PKT_ADDR_SIDEBAND_L       (81),
		.PKT_RESPONSE_STATUS_H     (100),
		.PKT_RESPONSE_STATUS_L     (99),
		.PKT_ORI_BURST_SIZE_L      (101),
		.PKT_ORI_BURST_SIZE_H      (103),
		.ST_DATA_W                 (104),
		.ST_CHANNEL_W              (5),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (1),
		.BURSTWRAP_VALUE           (3),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) cpu_s1_instruction_master_translator_avalon_universal_master_0_agent (
		.clk                     (system_pll_outclk0_clk),                                                                //       clk.clk
		.reset                   (cpu_s1_reset_n_reset_bridge_in_reset_reset),                                            // clk_reset.reset
		.av_address              (cpu_s1_instruction_master_translator_avalon_universal_master_0_address),                //        av.address
		.av_write                (cpu_s1_instruction_master_translator_avalon_universal_master_0_write),                  //          .write
		.av_read                 (cpu_s1_instruction_master_translator_avalon_universal_master_0_read),                   //          .read
		.av_writedata            (cpu_s1_instruction_master_translator_avalon_universal_master_0_writedata),              //          .writedata
		.av_readdata             (cpu_s1_instruction_master_translator_avalon_universal_master_0_readdata),               //          .readdata
		.av_waitrequest          (cpu_s1_instruction_master_translator_avalon_universal_master_0_waitrequest),            //          .waitrequest
		.av_readdatavalid        (cpu_s1_instruction_master_translator_avalon_universal_master_0_readdatavalid),          //          .readdatavalid
		.av_byteenable           (cpu_s1_instruction_master_translator_avalon_universal_master_0_byteenable),             //          .byteenable
		.av_burstcount           (cpu_s1_instruction_master_translator_avalon_universal_master_0_burstcount),             //          .burstcount
		.av_debugaccess          (cpu_s1_instruction_master_translator_avalon_universal_master_0_debugaccess),            //          .debugaccess
		.av_lock                 (cpu_s1_instruction_master_translator_avalon_universal_master_0_lock),                   //          .lock
		.cp_valid                (cpu_s1_instruction_master_translator_avalon_universal_master_0_agent_cp_valid),         //        cp.valid
		.cp_data                 (cpu_s1_instruction_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.cp_startofpacket        (cpu_s1_instruction_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.cp_endofpacket          (cpu_s1_instruction_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.cp_ready                (cpu_s1_instruction_master_translator_avalon_universal_master_0_agent_cp_ready),         //          .ready
		.rp_valid                (limiter_rsp_src_valid),                                                                 //        rp.valid
		.rp_data                 (limiter_rsp_src_data),                                                                  //          .data
		.rp_channel              (limiter_rsp_src_channel),                                                               //          .channel
		.rp_startofpacket        (limiter_rsp_src_startofpacket),                                                         //          .startofpacket
		.rp_endofpacket          (limiter_rsp_src_endofpacket),                                                           //          .endofpacket
		.rp_ready                (limiter_rsp_src_ready),                                                                 //          .ready
		.av_response             (),                                                                                      // (terminated)
		.av_writeresponserequest (1'b0),                                                                                  // (terminated)
		.av_writeresponsevalid   ()                                                                                       // (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_PROTECTION_H          (94),
		.PKT_PROTECTION_L          (92),
		.PKT_BEGIN_BURST           (83),
		.PKT_BURSTWRAP_H           (75),
		.PKT_BURSTWRAP_L           (73),
		.PKT_BURST_SIZE_H          (78),
		.PKT_BURST_SIZE_L          (76),
		.PKT_BURST_TYPE_H          (80),
		.PKT_BURST_TYPE_L          (79),
		.PKT_BYTE_CNT_H            (72),
		.PKT_BYTE_CNT_L            (70),
		.PKT_ADDR_H                (63),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (64),
		.PKT_TRANS_POSTED          (65),
		.PKT_TRANS_WRITE           (66),
		.PKT_TRANS_READ            (67),
		.PKT_TRANS_LOCK            (68),
		.PKT_TRANS_EXCLUSIVE       (69),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (87),
		.PKT_SRC_ID_L              (85),
		.PKT_DEST_ID_H             (90),
		.PKT_DEST_ID_L             (88),
		.PKT_THREAD_ID_H           (91),
		.PKT_THREAD_ID_L           (91),
		.PKT_CACHE_H               (98),
		.PKT_CACHE_L               (95),
		.PKT_DATA_SIDEBAND_H       (82),
		.PKT_DATA_SIDEBAND_L       (82),
		.PKT_QOS_H                 (84),
		.PKT_QOS_L                 (84),
		.PKT_ADDR_SIDEBAND_H       (81),
		.PKT_ADDR_SIDEBAND_L       (81),
		.PKT_RESPONSE_STATUS_H     (100),
		.PKT_RESPONSE_STATUS_L     (99),
		.PKT_ORI_BURST_SIZE_L      (101),
		.PKT_ORI_BURST_SIZE_H      (103),
		.ST_DATA_W                 (104),
		.ST_CHANNEL_W              (5),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (0),
		.BURSTWRAP_VALUE           (7),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) cpu_s1_data_master_translator_avalon_universal_master_0_agent (
		.clk                     (system_pll_outclk0_clk),                                                         //       clk.clk
		.reset                   (cpu_s1_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.av_address              (cpu_s1_data_master_translator_avalon_universal_master_0_address),                //        av.address
		.av_write                (cpu_s1_data_master_translator_avalon_universal_master_0_write),                  //          .write
		.av_read                 (cpu_s1_data_master_translator_avalon_universal_master_0_read),                   //          .read
		.av_writedata            (cpu_s1_data_master_translator_avalon_universal_master_0_writedata),              //          .writedata
		.av_readdata             (cpu_s1_data_master_translator_avalon_universal_master_0_readdata),               //          .readdata
		.av_waitrequest          (cpu_s1_data_master_translator_avalon_universal_master_0_waitrequest),            //          .waitrequest
		.av_readdatavalid        (cpu_s1_data_master_translator_avalon_universal_master_0_readdatavalid),          //          .readdatavalid
		.av_byteenable           (cpu_s1_data_master_translator_avalon_universal_master_0_byteenable),             //          .byteenable
		.av_burstcount           (cpu_s1_data_master_translator_avalon_universal_master_0_burstcount),             //          .burstcount
		.av_debugaccess          (cpu_s1_data_master_translator_avalon_universal_master_0_debugaccess),            //          .debugaccess
		.av_lock                 (cpu_s1_data_master_translator_avalon_universal_master_0_lock),                   //          .lock
		.cp_valid                (cpu_s1_data_master_translator_avalon_universal_master_0_agent_cp_valid),         //        cp.valid
		.cp_data                 (cpu_s1_data_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.cp_startofpacket        (cpu_s1_data_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.cp_endofpacket          (cpu_s1_data_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.cp_ready                (cpu_s1_data_master_translator_avalon_universal_master_0_agent_cp_ready),         //          .ready
		.rp_valid                (rsp_xbar_mux_001_src_valid),                                                     //        rp.valid
		.rp_data                 (rsp_xbar_mux_001_src_data),                                                      //          .data
		.rp_channel              (rsp_xbar_mux_001_src_channel),                                                   //          .channel
		.rp_startofpacket        (rsp_xbar_mux_001_src_startofpacket),                                             //          .startofpacket
		.rp_endofpacket          (rsp_xbar_mux_001_src_endofpacket),                                               //          .endofpacket
		.rp_ready                (rsp_xbar_mux_001_src_ready),                                                     //          .ready
		.av_response             (),                                                                               // (terminated)
		.av_writeresponserequest (1'b0),                                                                           // (terminated)
		.av_writeresponsevalid   ()                                                                                // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (83),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (63),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (64),
		.PKT_TRANS_POSTED          (65),
		.PKT_TRANS_WRITE           (66),
		.PKT_TRANS_READ            (67),
		.PKT_TRANS_LOCK            (68),
		.PKT_SRC_ID_H              (87),
		.PKT_SRC_ID_L              (85),
		.PKT_DEST_ID_H             (90),
		.PKT_DEST_ID_L             (88),
		.PKT_BURSTWRAP_H           (75),
		.PKT_BURSTWRAP_L           (73),
		.PKT_BYTE_CNT_H            (72),
		.PKT_BYTE_CNT_L            (70),
		.PKT_PROTECTION_H          (94),
		.PKT_PROTECTION_L          (92),
		.PKT_RESPONSE_STATUS_H     (100),
		.PKT_RESPONSE_STATUS_L     (99),
		.PKT_BURST_SIZE_H          (78),
		.PKT_BURST_SIZE_L          (76),
		.PKT_ORI_BURST_SIZE_L      (101),
		.PKT_ORI_BURST_SIZE_H      (103),
		.ST_CHANNEL_W              (5),
		.ST_DATA_W                 (104),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent (
		.clk                     (system_pll_outclk0_clk),                                                                        //             clk.clk
		.reset                   (cpu_s1_reset_n_reset_bridge_in_reset_reset),                                                    //       clk_reset.reset
		.m0_address              (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_src_ready),                                                                        //              cp.ready
		.cp_valid                (cmd_xbar_mux_src_valid),                                                                        //                .valid
		.cp_data                 (cmd_xbar_mux_src_data),                                                                         //                .data
		.cp_startofpacket        (cmd_xbar_mux_src_startofpacket),                                                                //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_src_endofpacket),                                                                  //                .endofpacket
		.cp_channel              (cmd_xbar_mux_src_channel),                                                                      //                .channel
		.rf_sink_ready           (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                         //     (terminated)
		.m0_writeresponserequest (),                                                                                              //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                           //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (105),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (system_pll_outclk0_clk),                                                                        //       clk.clk
		.reset             (cpu_s1_reset_n_reset_bridge_in_reset_reset),                                                    // clk_reset.reset
		.in_data           (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                         // (terminated)
		.csr_read          (1'b0),                                                                                          // (terminated)
		.csr_write         (1'b0),                                                                                          // (terminated)
		.csr_readdata      (),                                                                                              // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                          // (terminated)
		.almost_full_data  (),                                                                                              // (terminated)
		.almost_empty_data (),                                                                                              // (terminated)
		.in_empty          (1'b0),                                                                                          // (terminated)
		.out_empty         (),                                                                                              // (terminated)
		.in_error          (1'b0),                                                                                          // (terminated)
		.out_error         (),                                                                                              // (terminated)
		.in_channel        (1'b0),                                                                                          // (terminated)
		.out_channel       ()                                                                                               // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (83),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (63),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (64),
		.PKT_TRANS_POSTED          (65),
		.PKT_TRANS_WRITE           (66),
		.PKT_TRANS_READ            (67),
		.PKT_TRANS_LOCK            (68),
		.PKT_SRC_ID_H              (87),
		.PKT_SRC_ID_L              (85),
		.PKT_DEST_ID_H             (90),
		.PKT_DEST_ID_L             (88),
		.PKT_BURSTWRAP_H           (75),
		.PKT_BURSTWRAP_L           (73),
		.PKT_BYTE_CNT_H            (72),
		.PKT_BYTE_CNT_L            (70),
		.PKT_PROTECTION_H          (94),
		.PKT_PROTECTION_L          (92),
		.PKT_RESPONSE_STATUS_H     (100),
		.PKT_RESPONSE_STATUS_L     (99),
		.PKT_BURST_SIZE_H          (78),
		.PKT_BURST_SIZE_L          (76),
		.PKT_ORI_BURST_SIZE_L      (101),
		.PKT_ORI_BURST_SIZE_H      (103),
		.ST_CHANNEL_W              (5),
		.ST_DATA_W                 (104),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) onchip_sram_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (system_pll_outclk0_clk),                                                              //             clk.clk
		.reset                   (cpu_s1_reset_n_reset_bridge_in_reset_reset),                                          //       clk_reset.reset
		.m0_address              (onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (onchip_sram_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_001_src_ready),                                                          //              cp.ready
		.cp_valid                (cmd_xbar_mux_001_src_valid),                                                          //                .valid
		.cp_data                 (cmd_xbar_mux_001_src_data),                                                           //                .data
		.cp_startofpacket        (cmd_xbar_mux_001_src_startofpacket),                                                  //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_001_src_endofpacket),                                                    //                .endofpacket
		.cp_channel              (cmd_xbar_mux_001_src_channel),                                                        //                .channel
		.rf_sink_ready           (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                               //     (terminated)
		.m0_writeresponserequest (),                                                                                    //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                 //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (105),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) onchip_sram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (system_pll_outclk0_clk),                                                              //       clk.clk
		.reset             (cpu_s1_reset_n_reset_bridge_in_reset_reset),                                          // clk_reset.reset
		.in_data           (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                               // (terminated)
		.csr_read          (1'b0),                                                                                // (terminated)
		.csr_write         (1'b0),                                                                                // (terminated)
		.csr_readdata      (),                                                                                    // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                // (terminated)
		.almost_full_data  (),                                                                                    // (terminated)
		.almost_empty_data (),                                                                                    // (terminated)
		.in_empty          (1'b0),                                                                                // (terminated)
		.out_empty         (),                                                                                    // (terminated)
		.in_error          (1'b0),                                                                                // (terminated)
		.out_error         (),                                                                                    // (terminated)
		.in_channel        (1'b0),                                                                                // (terminated)
		.out_channel       ()                                                                                     // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (83),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (63),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (64),
		.PKT_TRANS_POSTED          (65),
		.PKT_TRANS_WRITE           (66),
		.PKT_TRANS_READ            (67),
		.PKT_TRANS_LOCK            (68),
		.PKT_SRC_ID_H              (87),
		.PKT_SRC_ID_L              (85),
		.PKT_DEST_ID_H             (90),
		.PKT_DEST_ID_L             (88),
		.PKT_BURSTWRAP_H           (75),
		.PKT_BURSTWRAP_L           (73),
		.PKT_BYTE_CNT_H            (72),
		.PKT_BYTE_CNT_L            (70),
		.PKT_PROTECTION_H          (94),
		.PKT_PROTECTION_L          (92),
		.PKT_RESPONSE_STATUS_H     (100),
		.PKT_RESPONSE_STATUS_L     (99),
		.PKT_BURST_SIZE_H          (78),
		.PKT_BURST_SIZE_L          (76),
		.PKT_ORI_BURST_SIZE_L      (101),
		.PKT_ORI_BURST_SIZE_H      (103),
		.ST_CHANNEL_W              (5),
		.ST_DATA_W                 (104),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent (
		.clk                     (system_pll_outclk0_clk),                                                                         //             clk.clk
		.reset                   (cpu_s1_reset_n_reset_bridge_in_reset_reset),                                                     //       clk_reset.reset
		.m0_address              (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_002_src_ready),                                                                     //              cp.ready
		.cp_valid                (cmd_xbar_mux_002_src_valid),                                                                     //                .valid
		.cp_data                 (cmd_xbar_mux_002_src_data),                                                                      //                .data
		.cp_startofpacket        (cmd_xbar_mux_002_src_startofpacket),                                                             //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_002_src_endofpacket),                                                               //                .endofpacket
		.cp_channel              (cmd_xbar_mux_002_src_channel),                                                                   //                .channel
		.rf_sink_ready           (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                          //     (terminated)
		.m0_writeresponserequest (),                                                                                               //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                            //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (105),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (system_pll_outclk0_clk),                                                                         //       clk.clk
		.reset             (cpu_s1_reset_n_reset_bridge_in_reset_reset),                                                     // clk_reset.reset
		.in_data           (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                          // (terminated)
		.csr_read          (1'b0),                                                                                           // (terminated)
		.csr_write         (1'b0),                                                                                           // (terminated)
		.csr_readdata      (),                                                                                               // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                           // (terminated)
		.almost_full_data  (),                                                                                               // (terminated)
		.almost_empty_data (),                                                                                               // (terminated)
		.in_empty          (1'b0),                                                                                           // (terminated)
		.out_empty         (),                                                                                               // (terminated)
		.in_error          (1'b0),                                                                                           // (terminated)
		.out_error         (),                                                                                               // (terminated)
		.in_channel        (1'b0),                                                                                           // (terminated)
		.out_channel       ()                                                                                                // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (83),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (63),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (64),
		.PKT_TRANS_POSTED          (65),
		.PKT_TRANS_WRITE           (66),
		.PKT_TRANS_READ            (67),
		.PKT_TRANS_LOCK            (68),
		.PKT_SRC_ID_H              (87),
		.PKT_SRC_ID_L              (85),
		.PKT_DEST_ID_H             (90),
		.PKT_DEST_ID_L             (88),
		.PKT_BURSTWRAP_H           (75),
		.PKT_BURSTWRAP_L           (73),
		.PKT_BYTE_CNT_H            (72),
		.PKT_BYTE_CNT_L            (70),
		.PKT_PROTECTION_H          (94),
		.PKT_PROTECTION_L          (92),
		.PKT_RESPONSE_STATUS_H     (100),
		.PKT_RESPONSE_STATUS_L     (99),
		.PKT_BURST_SIZE_H          (78),
		.PKT_BURST_SIZE_L          (76),
		.PKT_ORI_BURST_SIZE_L      (101),
		.PKT_ORI_BURST_SIZE_H      (103),
		.ST_CHANNEL_W              (5),
		.ST_DATA_W                 (104),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (system_pll_outclk0_clk),                                                                          //             clk.clk
		.reset                   (cpu_s1_reset_n_reset_bridge_in_reset_reset),                                                      //       clk_reset.reset
		.m0_address              (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_003_src_ready),                                                                      //              cp.ready
		.cp_valid                (cmd_xbar_mux_003_src_valid),                                                                      //                .valid
		.cp_data                 (cmd_xbar_mux_003_src_data),                                                                       //                .data
		.cp_startofpacket        (cmd_xbar_mux_003_src_startofpacket),                                                              //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_003_src_endofpacket),                                                                //                .endofpacket
		.cp_channel              (cmd_xbar_mux_003_src_channel),                                                                    //                .channel
		.rf_sink_ready           (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                           //     (terminated)
		.m0_writeresponserequest (),                                                                                                //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                             //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (105),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (system_pll_outclk0_clk),                                                                          //       clk.clk
		.reset             (cpu_s1_reset_n_reset_bridge_in_reset_reset),                                                      // clk_reset.reset
		.in_data           (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                           // (terminated)
		.csr_read          (1'b0),                                                                                            // (terminated)
		.csr_write         (1'b0),                                                                                            // (terminated)
		.csr_readdata      (),                                                                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                            // (terminated)
		.almost_full_data  (),                                                                                                // (terminated)
		.almost_empty_data (),                                                                                                // (terminated)
		.in_empty          (1'b0),                                                                                            // (terminated)
		.out_empty         (),                                                                                                // (terminated)
		.in_error          (1'b0),                                                                                            // (terminated)
		.out_error         (),                                                                                                // (terminated)
		.in_channel        (1'b0),                                                                                            // (terminated)
		.out_channel       ()                                                                                                 // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (83),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (63),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (64),
		.PKT_TRANS_POSTED          (65),
		.PKT_TRANS_WRITE           (66),
		.PKT_TRANS_READ            (67),
		.PKT_TRANS_LOCK            (68),
		.PKT_SRC_ID_H              (87),
		.PKT_SRC_ID_L              (85),
		.PKT_DEST_ID_H             (90),
		.PKT_DEST_ID_L             (88),
		.PKT_BURSTWRAP_H           (75),
		.PKT_BURSTWRAP_L           (73),
		.PKT_BYTE_CNT_H            (72),
		.PKT_BYTE_CNT_L            (70),
		.PKT_PROTECTION_H          (94),
		.PKT_PROTECTION_L          (92),
		.PKT_RESPONSE_STATUS_H     (100),
		.PKT_RESPONSE_STATUS_L     (99),
		.PKT_BURST_SIZE_H          (78),
		.PKT_BURST_SIZE_L          (76),
		.PKT_ORI_BURST_SIZE_L      (101),
		.PKT_ORI_BURST_SIZE_H      (103),
		.ST_CHANNEL_W              (5),
		.ST_DATA_W                 (104),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent (
		.clk                     (system_pll_outclk0_clk),                                                                             //             clk.clk
		.reset                   (cpu_s1_reset_n_reset_bridge_in_reset_reset),                                                         //       clk_reset.reset
		.m0_address              (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_004_src_ready),                                                                         //              cp.ready
		.cp_valid                (cmd_xbar_mux_004_src_valid),                                                                         //                .valid
		.cp_data                 (cmd_xbar_mux_004_src_data),                                                                          //                .data
		.cp_startofpacket        (cmd_xbar_mux_004_src_startofpacket),                                                                 //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_004_src_endofpacket),                                                                   //                .endofpacket
		.cp_channel              (cmd_xbar_mux_004_src_channel),                                                                       //                .channel
		.rf_sink_ready           (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                              //     (terminated)
		.m0_writeresponserequest (),                                                                                                   //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                                //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (105),
		.FIFO_DEPTH          (9),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (system_pll_outclk0_clk),                                                                             //       clk.clk
		.reset             (cpu_s1_reset_n_reset_bridge_in_reset_reset),                                                         // clk_reset.reset
		.in_data           (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                              // (terminated)
		.csr_read          (1'b0),                                                                                               // (terminated)
		.csr_write         (1'b0),                                                                                               // (terminated)
		.csr_readdata      (),                                                                                                   // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                               // (terminated)
		.almost_full_data  (),                                                                                                   // (terminated)
		.almost_empty_data (),                                                                                                   // (terminated)
		.in_empty          (1'b0),                                                                                               // (terminated)
		.out_empty         (),                                                                                                   // (terminated)
		.in_error          (1'b0),                                                                                               // (terminated)
		.out_error         (),                                                                                                   // (terminated)
		.in_channel        (1'b0),                                                                                               // (terminated)
		.out_channel       ()                                                                                                    // (terminated)
	);

	soc_system_mm_interconnect_4_addr_router addr_router (
		.sink_ready         (cpu_s1_instruction_master_translator_avalon_universal_master_0_agent_cp_ready),         //      sink.ready
		.sink_valid         (cpu_s1_instruction_master_translator_avalon_universal_master_0_agent_cp_valid),         //          .valid
		.sink_data          (cpu_s1_instruction_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.sink_startofpacket (cpu_s1_instruction_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (cpu_s1_instruction_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.clk                (system_pll_outclk0_clk),                                                                //       clk.clk
		.reset              (cpu_s1_reset_n_reset_bridge_in_reset_reset),                                            // clk_reset.reset
		.src_ready          (addr_router_src_ready),                                                                 //       src.ready
		.src_valid          (addr_router_src_valid),                                                                 //          .valid
		.src_data           (addr_router_src_data),                                                                  //          .data
		.src_channel        (addr_router_src_channel),                                                               //          .channel
		.src_startofpacket  (addr_router_src_startofpacket),                                                         //          .startofpacket
		.src_endofpacket    (addr_router_src_endofpacket)                                                            //          .endofpacket
	);

	soc_system_mm_interconnect_4_addr_router_001 addr_router_001 (
		.sink_ready         (cpu_s1_data_master_translator_avalon_universal_master_0_agent_cp_ready),         //      sink.ready
		.sink_valid         (cpu_s1_data_master_translator_avalon_universal_master_0_agent_cp_valid),         //          .valid
		.sink_data          (cpu_s1_data_master_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.sink_startofpacket (cpu_s1_data_master_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (cpu_s1_data_master_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.clk                (system_pll_outclk0_clk),                                                         //       clk.clk
		.reset              (cpu_s1_reset_n_reset_bridge_in_reset_reset),                                     // clk_reset.reset
		.src_ready          (addr_router_001_src_ready),                                                      //       src.ready
		.src_valid          (addr_router_001_src_valid),                                                      //          .valid
		.src_data           (addr_router_001_src_data),                                                       //          .data
		.src_channel        (addr_router_001_src_channel),                                                    //          .channel
		.src_startofpacket  (addr_router_001_src_startofpacket),                                              //          .startofpacket
		.src_endofpacket    (addr_router_001_src_endofpacket)                                                 //          .endofpacket
	);

	soc_system_mm_interconnect_4_id_router id_router (
		.sink_ready         (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (cpu_s1_jtag_debug_module_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (system_pll_outclk0_clk),                                                              //       clk.clk
		.reset              (cpu_s1_reset_n_reset_bridge_in_reset_reset),                                          // clk_reset.reset
		.src_ready          (id_router_src_ready),                                                                 //       src.ready
		.src_valid          (id_router_src_valid),                                                                 //          .valid
		.src_data           (id_router_src_data),                                                                  //          .data
		.src_channel        (id_router_src_channel),                                                               //          .channel
		.src_startofpacket  (id_router_src_startofpacket),                                                         //          .startofpacket
		.src_endofpacket    (id_router_src_endofpacket)                                                            //          .endofpacket
	);

	soc_system_mm_interconnect_4_id_router id_router_001 (
		.sink_ready         (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (onchip_sram_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (system_pll_outclk0_clk),                                                    //       clk.clk
		.reset              (cpu_s1_reset_n_reset_bridge_in_reset_reset),                                // clk_reset.reset
		.src_ready          (id_router_001_src_ready),                                                   //       src.ready
		.src_valid          (id_router_001_src_valid),                                                   //          .valid
		.src_data           (id_router_001_src_data),                                                    //          .data
		.src_channel        (id_router_001_src_channel),                                                 //          .channel
		.src_startofpacket  (id_router_001_src_startofpacket),                                           //          .startofpacket
		.src_endofpacket    (id_router_001_src_endofpacket)                                              //          .endofpacket
	);

	soc_system_mm_interconnect_4_id_router_002 id_router_002 (
		.sink_ready         (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (fifo_bridge_cpum_cpus1_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (system_pll_outclk0_clk),                                                               //       clk.clk
		.reset              (cpu_s1_reset_n_reset_bridge_in_reset_reset),                                           // clk_reset.reset
		.src_ready          (id_router_002_src_ready),                                                              //       src.ready
		.src_valid          (id_router_002_src_valid),                                                              //          .valid
		.src_data           (id_router_002_src_data),                                                               //          .data
		.src_channel        (id_router_002_src_channel),                                                            //          .channel
		.src_startofpacket  (id_router_002_src_startofpacket),                                                      //          .startofpacket
		.src_endofpacket    (id_router_002_src_endofpacket)                                                         //          .endofpacket
	);

	soc_system_mm_interconnect_4_id_router_002 id_router_003 (
		.sink_ready         (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (fifo_bridge_cpus0_cpus1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (system_pll_outclk0_clk),                                                                //       clk.clk
		.reset              (cpu_s1_reset_n_reset_bridge_in_reset_reset),                                            // clk_reset.reset
		.src_ready          (id_router_003_src_ready),                                                               //       src.ready
		.src_valid          (id_router_003_src_valid),                                                               //          .valid
		.src_data           (id_router_003_src_data),                                                                //          .data
		.src_channel        (id_router_003_src_channel),                                                             //          .channel
		.src_startofpacket  (id_router_003_src_startofpacket),                                                       //          .startofpacket
		.src_endofpacket    (id_router_003_src_endofpacket)                                                          //          .endofpacket
	);

	soc_system_mm_interconnect_4_id_router_002 id_router_004 (
		.sink_ready         (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (s1_io_clockcrossing_bridge_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (system_pll_outclk0_clk),                                                                   //       clk.clk
		.reset              (cpu_s1_reset_n_reset_bridge_in_reset_reset),                                               // clk_reset.reset
		.src_ready          (id_router_004_src_ready),                                                                  //       src.ready
		.src_valid          (id_router_004_src_valid),                                                                  //          .valid
		.src_data           (id_router_004_src_data),                                                                   //          .data
		.src_channel        (id_router_004_src_channel),                                                                //          .channel
		.src_startofpacket  (id_router_004_src_startofpacket),                                                          //          .startofpacket
		.src_endofpacket    (id_router_004_src_endofpacket)                                                             //          .endofpacket
	);

	altera_merlin_traffic_limiter #(
		.PKT_DEST_ID_H             (90),
		.PKT_DEST_ID_L             (88),
		.PKT_SRC_ID_H              (87),
		.PKT_SRC_ID_L              (85),
		.PKT_TRANS_POSTED          (65),
		.PKT_TRANS_WRITE           (66),
		.MAX_OUTSTANDING_RESPONSES (1),
		.PIPELINED                 (0),
		.ST_DATA_W                 (104),
		.ST_CHANNEL_W              (5),
		.VALID_WIDTH               (5),
		.ENFORCE_ORDER             (1),
		.PREVENT_HAZARDS           (0),
		.PKT_BYTE_CNT_H            (72),
		.PKT_BYTE_CNT_L            (70),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.REORDER                   (0)
	) limiter (
		.clk                    (system_pll_outclk0_clk),                     //       clk.clk
		.reset                  (cpu_s1_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.cmd_sink_ready         (addr_router_src_ready),                      //  cmd_sink.ready
		.cmd_sink_valid         (addr_router_src_valid),                      //          .valid
		.cmd_sink_data          (addr_router_src_data),                       //          .data
		.cmd_sink_channel       (addr_router_src_channel),                    //          .channel
		.cmd_sink_startofpacket (addr_router_src_startofpacket),              //          .startofpacket
		.cmd_sink_endofpacket   (addr_router_src_endofpacket),                //          .endofpacket
		.cmd_src_ready          (limiter_cmd_src_ready),                      //   cmd_src.ready
		.cmd_src_data           (limiter_cmd_src_data),                       //          .data
		.cmd_src_channel        (limiter_cmd_src_channel),                    //          .channel
		.cmd_src_startofpacket  (limiter_cmd_src_startofpacket),              //          .startofpacket
		.cmd_src_endofpacket    (limiter_cmd_src_endofpacket),                //          .endofpacket
		.rsp_sink_ready         (rsp_xbar_mux_src_ready),                     //  rsp_sink.ready
		.rsp_sink_valid         (rsp_xbar_mux_src_valid),                     //          .valid
		.rsp_sink_channel       (rsp_xbar_mux_src_channel),                   //          .channel
		.rsp_sink_data          (rsp_xbar_mux_src_data),                      //          .data
		.rsp_sink_startofpacket (rsp_xbar_mux_src_startofpacket),             //          .startofpacket
		.rsp_sink_endofpacket   (rsp_xbar_mux_src_endofpacket),               //          .endofpacket
		.rsp_src_ready          (limiter_rsp_src_ready),                      //   rsp_src.ready
		.rsp_src_valid          (limiter_rsp_src_valid),                      //          .valid
		.rsp_src_data           (limiter_rsp_src_data),                       //          .data
		.rsp_src_channel        (limiter_rsp_src_channel),                    //          .channel
		.rsp_src_startofpacket  (limiter_rsp_src_startofpacket),              //          .startofpacket
		.rsp_src_endofpacket    (limiter_rsp_src_endofpacket),                //          .endofpacket
		.cmd_src_valid          (limiter_cmd_valid_data)                      // cmd_valid.data
	);

	soc_system_mm_interconnect_4_cmd_xbar_demux cmd_xbar_demux (
		.clk                (system_pll_outclk0_clk),                     //        clk.clk
		.reset              (cpu_s1_reset_n_reset_bridge_in_reset_reset), //  clk_reset.reset
		.sink_ready         (limiter_cmd_src_ready),                      //       sink.ready
		.sink_channel       (limiter_cmd_src_channel),                    //           .channel
		.sink_data          (limiter_cmd_src_data),                       //           .data
		.sink_startofpacket (limiter_cmd_src_startofpacket),              //           .startofpacket
		.sink_endofpacket   (limiter_cmd_src_endofpacket),                //           .endofpacket
		.sink_valid         (limiter_cmd_valid_data),                     // sink_valid.data
		.src0_ready         (cmd_xbar_demux_src0_ready),                  //       src0.ready
		.src0_valid         (cmd_xbar_demux_src0_valid),                  //           .valid
		.src0_data          (cmd_xbar_demux_src0_data),                   //           .data
		.src0_channel       (cmd_xbar_demux_src0_channel),                //           .channel
		.src0_startofpacket (cmd_xbar_demux_src0_startofpacket),          //           .startofpacket
		.src0_endofpacket   (cmd_xbar_demux_src0_endofpacket),            //           .endofpacket
		.src1_ready         (cmd_xbar_demux_src1_ready),                  //       src1.ready
		.src1_valid         (cmd_xbar_demux_src1_valid),                  //           .valid
		.src1_data          (cmd_xbar_demux_src1_data),                   //           .data
		.src1_channel       (cmd_xbar_demux_src1_channel),                //           .channel
		.src1_startofpacket (cmd_xbar_demux_src1_startofpacket),          //           .startofpacket
		.src1_endofpacket   (cmd_xbar_demux_src1_endofpacket)             //           .endofpacket
	);

	soc_system_mm_interconnect_4_cmd_xbar_demux_001 cmd_xbar_demux_001 (
		.clk                (system_pll_outclk0_clk),                     //       clk.clk
		.reset              (cpu_s1_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (addr_router_001_src_ready),                  //      sink.ready
		.sink_channel       (addr_router_001_src_channel),                //          .channel
		.sink_data          (addr_router_001_src_data),                   //          .data
		.sink_startofpacket (addr_router_001_src_startofpacket),          //          .startofpacket
		.sink_endofpacket   (addr_router_001_src_endofpacket),            //          .endofpacket
		.sink_valid         (addr_router_001_src_valid),                  //          .valid
		.src0_ready         (cmd_xbar_demux_001_src0_ready),              //      src0.ready
		.src0_valid         (cmd_xbar_demux_001_src0_valid),              //          .valid
		.src0_data          (cmd_xbar_demux_001_src0_data),               //          .data
		.src0_channel       (cmd_xbar_demux_001_src0_channel),            //          .channel
		.src0_startofpacket (cmd_xbar_demux_001_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (cmd_xbar_demux_001_src0_endofpacket),        //          .endofpacket
		.src1_ready         (cmd_xbar_demux_001_src1_ready),              //      src1.ready
		.src1_valid         (cmd_xbar_demux_001_src1_valid),              //          .valid
		.src1_data          (cmd_xbar_demux_001_src1_data),               //          .data
		.src1_channel       (cmd_xbar_demux_001_src1_channel),            //          .channel
		.src1_startofpacket (cmd_xbar_demux_001_src1_startofpacket),      //          .startofpacket
		.src1_endofpacket   (cmd_xbar_demux_001_src1_endofpacket),        //          .endofpacket
		.src2_ready         (cmd_xbar_demux_001_src2_ready),              //      src2.ready
		.src2_valid         (cmd_xbar_demux_001_src2_valid),              //          .valid
		.src2_data          (cmd_xbar_demux_001_src2_data),               //          .data
		.src2_channel       (cmd_xbar_demux_001_src2_channel),            //          .channel
		.src2_startofpacket (cmd_xbar_demux_001_src2_startofpacket),      //          .startofpacket
		.src2_endofpacket   (cmd_xbar_demux_001_src2_endofpacket),        //          .endofpacket
		.src3_ready         (cmd_xbar_demux_001_src3_ready),              //      src3.ready
		.src3_valid         (cmd_xbar_demux_001_src3_valid),              //          .valid
		.src3_data          (cmd_xbar_demux_001_src3_data),               //          .data
		.src3_channel       (cmd_xbar_demux_001_src3_channel),            //          .channel
		.src3_startofpacket (cmd_xbar_demux_001_src3_startofpacket),      //          .startofpacket
		.src3_endofpacket   (cmd_xbar_demux_001_src3_endofpacket),        //          .endofpacket
		.src4_ready         (cmd_xbar_demux_001_src4_ready),              //      src4.ready
		.src4_valid         (cmd_xbar_demux_001_src4_valid),              //          .valid
		.src4_data          (cmd_xbar_demux_001_src4_data),               //          .data
		.src4_channel       (cmd_xbar_demux_001_src4_channel),            //          .channel
		.src4_startofpacket (cmd_xbar_demux_001_src4_startofpacket),      //          .startofpacket
		.src4_endofpacket   (cmd_xbar_demux_001_src4_endofpacket)         //          .endofpacket
	);

	soc_system_mm_interconnect_4_cmd_xbar_mux cmd_xbar_mux (
		.clk                 (system_pll_outclk0_clk),                     //       clk.clk
		.reset               (cpu_s1_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_src_ready),                     //       src.ready
		.src_valid           (cmd_xbar_mux_src_valid),                     //          .valid
		.src_data            (cmd_xbar_mux_src_data),                      //          .data
		.src_channel         (cmd_xbar_mux_src_channel),                   //          .channel
		.src_startofpacket   (cmd_xbar_mux_src_startofpacket),             //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_src_endofpacket),               //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src0_ready),                  //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src0_valid),                  //          .valid
		.sink0_channel       (cmd_xbar_demux_src0_channel),                //          .channel
		.sink0_data          (cmd_xbar_demux_src0_data),                   //          .data
		.sink0_startofpacket (cmd_xbar_demux_src0_startofpacket),          //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src0_endofpacket),            //          .endofpacket
		.sink1_ready         (cmd_xbar_demux_001_src0_ready),              //     sink1.ready
		.sink1_valid         (cmd_xbar_demux_001_src0_valid),              //          .valid
		.sink1_channel       (cmd_xbar_demux_001_src0_channel),            //          .channel
		.sink1_data          (cmd_xbar_demux_001_src0_data),               //          .data
		.sink1_startofpacket (cmd_xbar_demux_001_src0_startofpacket),      //          .startofpacket
		.sink1_endofpacket   (cmd_xbar_demux_001_src0_endofpacket)         //          .endofpacket
	);

	soc_system_mm_interconnect_4_cmd_xbar_mux cmd_xbar_mux_001 (
		.clk                 (system_pll_outclk0_clk),                     //       clk.clk
		.reset               (cpu_s1_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_001_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_001_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_001_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_001_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_001_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_001_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src1_ready),                  //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src1_valid),                  //          .valid
		.sink0_channel       (cmd_xbar_demux_src1_channel),                //          .channel
		.sink0_data          (cmd_xbar_demux_src1_data),                   //          .data
		.sink0_startofpacket (cmd_xbar_demux_src1_startofpacket),          //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src1_endofpacket),            //          .endofpacket
		.sink1_ready         (cmd_xbar_demux_001_src1_ready),              //     sink1.ready
		.sink1_valid         (cmd_xbar_demux_001_src1_valid),              //          .valid
		.sink1_channel       (cmd_xbar_demux_001_src1_channel),            //          .channel
		.sink1_data          (cmd_xbar_demux_001_src1_data),               //          .data
		.sink1_startofpacket (cmd_xbar_demux_001_src1_startofpacket),      //          .startofpacket
		.sink1_endofpacket   (cmd_xbar_demux_001_src1_endofpacket)         //          .endofpacket
	);

	soc_system_mm_interconnect_4_cmd_xbar_mux_002 cmd_xbar_mux_002 (
		.clk                 (system_pll_outclk0_clk),                     //       clk.clk
		.reset               (cpu_s1_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_002_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_002_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_002_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_002_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_002_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_002_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src2_ready),              //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src2_valid),              //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src2_channel),            //          .channel
		.sink0_data          (cmd_xbar_demux_001_src2_data),               //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src2_startofpacket),      //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src2_endofpacket)         //          .endofpacket
	);

	soc_system_mm_interconnect_4_cmd_xbar_mux_002 cmd_xbar_mux_003 (
		.clk                 (system_pll_outclk0_clk),                     //       clk.clk
		.reset               (cpu_s1_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_003_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_003_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_003_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_003_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_003_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_003_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src3_ready),              //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src3_valid),              //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src3_channel),            //          .channel
		.sink0_data          (cmd_xbar_demux_001_src3_data),               //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src3_startofpacket),      //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src3_endofpacket)         //          .endofpacket
	);

	soc_system_mm_interconnect_4_cmd_xbar_mux_002 cmd_xbar_mux_004 (
		.clk                 (system_pll_outclk0_clk),                     //       clk.clk
		.reset               (cpu_s1_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_004_src_ready),                 //       src.ready
		.src_valid           (cmd_xbar_mux_004_src_valid),                 //          .valid
		.src_data            (cmd_xbar_mux_004_src_data),                  //          .data
		.src_channel         (cmd_xbar_mux_004_src_channel),               //          .channel
		.src_startofpacket   (cmd_xbar_mux_004_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_004_src_endofpacket),           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_001_src4_ready),              //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_001_src4_valid),              //          .valid
		.sink0_channel       (cmd_xbar_demux_001_src4_channel),            //          .channel
		.sink0_data          (cmd_xbar_demux_001_src4_data),               //          .data
		.sink0_startofpacket (cmd_xbar_demux_001_src4_startofpacket),      //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_001_src4_endofpacket)         //          .endofpacket
	);

	soc_system_mm_interconnect_4_rsp_xbar_demux rsp_xbar_demux (
		.clk                (system_pll_outclk0_clk),                     //       clk.clk
		.reset              (cpu_s1_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_src_ready),                        //      sink.ready
		.sink_channel       (id_router_src_channel),                      //          .channel
		.sink_data          (id_router_src_data),                         //          .data
		.sink_startofpacket (id_router_src_startofpacket),                //          .startofpacket
		.sink_endofpacket   (id_router_src_endofpacket),                  //          .endofpacket
		.sink_valid         (id_router_src_valid),                        //          .valid
		.src0_ready         (rsp_xbar_demux_src0_ready),                  //      src0.ready
		.src0_valid         (rsp_xbar_demux_src0_valid),                  //          .valid
		.src0_data          (rsp_xbar_demux_src0_data),                   //          .data
		.src0_channel       (rsp_xbar_demux_src0_channel),                //          .channel
		.src0_startofpacket (rsp_xbar_demux_src0_startofpacket),          //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_src0_endofpacket),            //          .endofpacket
		.src1_ready         (rsp_xbar_demux_src1_ready),                  //      src1.ready
		.src1_valid         (rsp_xbar_demux_src1_valid),                  //          .valid
		.src1_data          (rsp_xbar_demux_src1_data),                   //          .data
		.src1_channel       (rsp_xbar_demux_src1_channel),                //          .channel
		.src1_startofpacket (rsp_xbar_demux_src1_startofpacket),          //          .startofpacket
		.src1_endofpacket   (rsp_xbar_demux_src1_endofpacket)             //          .endofpacket
	);

	soc_system_mm_interconnect_4_rsp_xbar_demux rsp_xbar_demux_001 (
		.clk                (system_pll_outclk0_clk),                     //       clk.clk
		.reset              (cpu_s1_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_001_src_ready),                    //      sink.ready
		.sink_channel       (id_router_001_src_channel),                  //          .channel
		.sink_data          (id_router_001_src_data),                     //          .data
		.sink_startofpacket (id_router_001_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_001_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_001_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_001_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_001_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_001_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_001_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_001_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_001_src0_endofpacket),        //          .endofpacket
		.src1_ready         (rsp_xbar_demux_001_src1_ready),              //      src1.ready
		.src1_valid         (rsp_xbar_demux_001_src1_valid),              //          .valid
		.src1_data          (rsp_xbar_demux_001_src1_data),               //          .data
		.src1_channel       (rsp_xbar_demux_001_src1_channel),            //          .channel
		.src1_startofpacket (rsp_xbar_demux_001_src1_startofpacket),      //          .startofpacket
		.src1_endofpacket   (rsp_xbar_demux_001_src1_endofpacket)         //          .endofpacket
	);

	soc_system_mm_interconnect_4_rsp_xbar_demux_002 rsp_xbar_demux_002 (
		.clk                (system_pll_outclk0_clk),                     //       clk.clk
		.reset              (cpu_s1_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_002_src_ready),                    //      sink.ready
		.sink_channel       (id_router_002_src_channel),                  //          .channel
		.sink_data          (id_router_002_src_data),                     //          .data
		.sink_startofpacket (id_router_002_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_002_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_002_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_002_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_002_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_002_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_002_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_002_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_002_src0_endofpacket)         //          .endofpacket
	);

	soc_system_mm_interconnect_4_rsp_xbar_demux_002 rsp_xbar_demux_003 (
		.clk                (system_pll_outclk0_clk),                     //       clk.clk
		.reset              (cpu_s1_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_003_src_ready),                    //      sink.ready
		.sink_channel       (id_router_003_src_channel),                  //          .channel
		.sink_data          (id_router_003_src_data),                     //          .data
		.sink_startofpacket (id_router_003_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_003_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_003_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_003_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_003_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_003_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_003_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_003_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_003_src0_endofpacket)         //          .endofpacket
	);

	soc_system_mm_interconnect_4_rsp_xbar_demux_002 rsp_xbar_demux_004 (
		.clk                (system_pll_outclk0_clk),                     //       clk.clk
		.reset              (cpu_s1_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_004_src_ready),                    //      sink.ready
		.sink_channel       (id_router_004_src_channel),                  //          .channel
		.sink_data          (id_router_004_src_data),                     //          .data
		.sink_startofpacket (id_router_004_src_startofpacket),            //          .startofpacket
		.sink_endofpacket   (id_router_004_src_endofpacket),              //          .endofpacket
		.sink_valid         (id_router_004_src_valid),                    //          .valid
		.src0_ready         (rsp_xbar_demux_004_src0_ready),              //      src0.ready
		.src0_valid         (rsp_xbar_demux_004_src0_valid),              //          .valid
		.src0_data          (rsp_xbar_demux_004_src0_data),               //          .data
		.src0_channel       (rsp_xbar_demux_004_src0_channel),            //          .channel
		.src0_startofpacket (rsp_xbar_demux_004_src0_startofpacket),      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_004_src0_endofpacket)         //          .endofpacket
	);

	soc_system_mm_interconnect_4_rsp_xbar_mux rsp_xbar_mux (
		.clk                 (system_pll_outclk0_clk),                     //       clk.clk
		.reset               (cpu_s1_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_xbar_mux_src_ready),                     //       src.ready
		.src_valid           (rsp_xbar_mux_src_valid),                     //          .valid
		.src_data            (rsp_xbar_mux_src_data),                      //          .data
		.src_channel         (rsp_xbar_mux_src_channel),                   //          .channel
		.src_startofpacket   (rsp_xbar_mux_src_startofpacket),             //          .startofpacket
		.src_endofpacket     (rsp_xbar_mux_src_endofpacket),               //          .endofpacket
		.sink0_ready         (rsp_xbar_demux_src0_ready),                  //     sink0.ready
		.sink0_valid         (rsp_xbar_demux_src0_valid),                  //          .valid
		.sink0_channel       (rsp_xbar_demux_src0_channel),                //          .channel
		.sink0_data          (rsp_xbar_demux_src0_data),                   //          .data
		.sink0_startofpacket (rsp_xbar_demux_src0_startofpacket),          //          .startofpacket
		.sink0_endofpacket   (rsp_xbar_demux_src0_endofpacket),            //          .endofpacket
		.sink1_ready         (rsp_xbar_demux_001_src0_ready),              //     sink1.ready
		.sink1_valid         (rsp_xbar_demux_001_src0_valid),              //          .valid
		.sink1_channel       (rsp_xbar_demux_001_src0_channel),            //          .channel
		.sink1_data          (rsp_xbar_demux_001_src0_data),               //          .data
		.sink1_startofpacket (rsp_xbar_demux_001_src0_startofpacket),      //          .startofpacket
		.sink1_endofpacket   (rsp_xbar_demux_001_src0_endofpacket)         //          .endofpacket
	);

	soc_system_mm_interconnect_4_rsp_xbar_mux_001 rsp_xbar_mux_001 (
		.clk                 (system_pll_outclk0_clk),                     //       clk.clk
		.reset               (cpu_s1_reset_n_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_xbar_mux_001_src_ready),                 //       src.ready
		.src_valid           (rsp_xbar_mux_001_src_valid),                 //          .valid
		.src_data            (rsp_xbar_mux_001_src_data),                  //          .data
		.src_channel         (rsp_xbar_mux_001_src_channel),               //          .channel
		.src_startofpacket   (rsp_xbar_mux_001_src_startofpacket),         //          .startofpacket
		.src_endofpacket     (rsp_xbar_mux_001_src_endofpacket),           //          .endofpacket
		.sink0_ready         (rsp_xbar_demux_src1_ready),                  //     sink0.ready
		.sink0_valid         (rsp_xbar_demux_src1_valid),                  //          .valid
		.sink0_channel       (rsp_xbar_demux_src1_channel),                //          .channel
		.sink0_data          (rsp_xbar_demux_src1_data),                   //          .data
		.sink0_startofpacket (rsp_xbar_demux_src1_startofpacket),          //          .startofpacket
		.sink0_endofpacket   (rsp_xbar_demux_src1_endofpacket),            //          .endofpacket
		.sink1_ready         (rsp_xbar_demux_001_src1_ready),              //     sink1.ready
		.sink1_valid         (rsp_xbar_demux_001_src1_valid),              //          .valid
		.sink1_channel       (rsp_xbar_demux_001_src1_channel),            //          .channel
		.sink1_data          (rsp_xbar_demux_001_src1_data),               //          .data
		.sink1_startofpacket (rsp_xbar_demux_001_src1_startofpacket),      //          .startofpacket
		.sink1_endofpacket   (rsp_xbar_demux_001_src1_endofpacket),        //          .endofpacket
		.sink2_ready         (rsp_xbar_demux_002_src0_ready),              //     sink2.ready
		.sink2_valid         (rsp_xbar_demux_002_src0_valid),              //          .valid
		.sink2_channel       (rsp_xbar_demux_002_src0_channel),            //          .channel
		.sink2_data          (rsp_xbar_demux_002_src0_data),               //          .data
		.sink2_startofpacket (rsp_xbar_demux_002_src0_startofpacket),      //          .startofpacket
		.sink2_endofpacket   (rsp_xbar_demux_002_src0_endofpacket),        //          .endofpacket
		.sink3_ready         (rsp_xbar_demux_003_src0_ready),              //     sink3.ready
		.sink3_valid         (rsp_xbar_demux_003_src0_valid),              //          .valid
		.sink3_channel       (rsp_xbar_demux_003_src0_channel),            //          .channel
		.sink3_data          (rsp_xbar_demux_003_src0_data),               //          .data
		.sink3_startofpacket (rsp_xbar_demux_003_src0_startofpacket),      //          .startofpacket
		.sink3_endofpacket   (rsp_xbar_demux_003_src0_endofpacket),        //          .endofpacket
		.sink4_ready         (rsp_xbar_demux_004_src0_ready),              //     sink4.ready
		.sink4_valid         (rsp_xbar_demux_004_src0_valid),              //          .valid
		.sink4_channel       (rsp_xbar_demux_004_src0_channel),            //          .channel
		.sink4_data          (rsp_xbar_demux_004_src0_data),               //          .data
		.sink4_startofpacket (rsp_xbar_demux_004_src0_startofpacket),      //          .startofpacket
		.sink4_endofpacket   (rsp_xbar_demux_004_src0_endofpacket)         //          .endofpacket
	);

endmodule
