// soc_system_mm_interconnect_5.v

// This file was auto-generated from altera_merlin_interconnect_wrapper_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 13.1 162 at 2014.12.19.15:55:07

`timescale 1 ps / 1 ps
module soc_system_mm_interconnect_5 (
		input  wire        pwm_pll_outclk0_clk,                                             //                                           pwm_pll_outclk0.clk
		input  wire        system_pll_outclk1_clk,                                          //                                        system_pll_outclk1.clk
		input  wire        pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset,            //            pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset.reset
		input  wire        s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset, // s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset.reset
		input  wire [9:0]  s0_io_clockCrossing_bridge_m0_address,                           //                             s0_io_clockCrossing_bridge_m0.address
		output wire        s0_io_clockCrossing_bridge_m0_waitrequest,                       //                                                          .waitrequest
		input  wire [0:0]  s0_io_clockCrossing_bridge_m0_burstcount,                        //                                                          .burstcount
		input  wire [3:0]  s0_io_clockCrossing_bridge_m0_byteenable,                        //                                                          .byteenable
		input  wire        s0_io_clockCrossing_bridge_m0_read,                              //                                                          .read
		output wire [31:0] s0_io_clockCrossing_bridge_m0_readdata,                          //                                                          .readdata
		output wire        s0_io_clockCrossing_bridge_m0_readdatavalid,                     //                                                          .readdatavalid
		input  wire        s0_io_clockCrossing_bridge_m0_write,                             //                                                          .write
		input  wire [31:0] s0_io_clockCrossing_bridge_m0_writedata,                         //                                                          .writedata
		input  wire        s0_io_clockCrossing_bridge_m0_debugaccess,                       //                                                          .debugaccess
		output wire [2:0]  i2c_cpu_s0_mm_slave_address,                                     //                                       i2c_cpu_s0_mm_slave.address
		output wire        i2c_cpu_s0_mm_slave_write,                                       //                                                          .write
		input  wire [7:0]  i2c_cpu_s0_mm_slave_readdata,                                    //                                                          .readdata
		output wire [7:0]  i2c_cpu_s0_mm_slave_writedata,                                   //                                                          .writedata
		input  wire        i2c_cpu_s0_mm_slave_waitrequest,                                 //                                                          .waitrequest
		output wire        i2c_cpu_s0_mm_slave_chipselect,                                  //                                                          .chipselect
		output wire [0:0]  jtag_uart_cpu_s0_avalon_jtag_slave_address,                      //                        jtag_uart_cpu_s0_avalon_jtag_slave.address
		output wire        jtag_uart_cpu_s0_avalon_jtag_slave_write,                        //                                                          .write
		output wire        jtag_uart_cpu_s0_avalon_jtag_slave_read,                         //                                                          .read
		input  wire [31:0] jtag_uart_cpu_s0_avalon_jtag_slave_readdata,                     //                                                          .readdata
		output wire [31:0] jtag_uart_cpu_s0_avalon_jtag_slave_writedata,                    //                                                          .writedata
		input  wire        jtag_uart_cpu_s0_avalon_jtag_slave_waitrequest,                  //                                                          .waitrequest
		output wire        jtag_uart_cpu_s0_avalon_jtag_slave_chipselect,                   //                                                          .chipselect
		output wire [1:0]  pio_aliveTest_cpu_s0_s1_address,                                 //                                   pio_aliveTest_cpu_s0_s1.address
		output wire        pio_aliveTest_cpu_s0_s1_write,                                   //                                                          .write
		input  wire [31:0] pio_aliveTest_cpu_s0_s1_readdata,                                //                                                          .readdata
		output wire [31:0] pio_aliveTest_cpu_s0_s1_writedata,                               //                                                          .writedata
		output wire        pio_aliveTest_cpu_s0_s1_chipselect,                              //                                                          .chipselect
		output wire        pwm_cpu_s0_1_s0_write,                                           //                                           pwm_cpu_s0_1_s0.write
		output wire [31:0] pwm_cpu_s0_1_s0_writedata,                                       //                                                          .writedata
		output wire        pwm_cpu_s0_2_s0_write,                                           //                                           pwm_cpu_s0_2_s0.write
		output wire [31:0] pwm_cpu_s0_2_s0_writedata,                                       //                                                          .writedata
		output wire        pwm_cpu_s0_3_s0_write,                                           //                                           pwm_cpu_s0_3_s0.write
		output wire [31:0] pwm_cpu_s0_3_s0_writedata,                                       //                                                          .writedata
		output wire        pwm_cpu_s0_4_s0_write,                                           //                                           pwm_cpu_s0_4_s0.write
		output wire [31:0] pwm_cpu_s0_4_s0_writedata,                                       //                                                          .writedata
		output wire        pwm_cpu_s0_5_s0_write,                                           //                                           pwm_cpu_s0_5_s0.write
		output wire [31:0] pwm_cpu_s0_5_s0_writedata,                                       //                                                          .writedata
		output wire        pwm_cpu_s0_6_s0_write,                                           //                                           pwm_cpu_s0_6_s0.write
		output wire [31:0] pwm_cpu_s0_6_s0_writedata,                                       //                                                          .writedata
		output wire        pwm_cpu_s0_7_s0_write,                                           //                                           pwm_cpu_s0_7_s0.write
		output wire [31:0] pwm_cpu_s0_7_s0_writedata,                                       //                                                          .writedata
		output wire        pwm_cpu_s0_8_s0_write,                                           //                                           pwm_cpu_s0_8_s0.write
		output wire [31:0] pwm_cpu_s0_8_s0_writedata,                                       //                                                          .writedata
		output wire [2:0]  timer_cpu_s0_s1_address,                                         //                                           timer_cpu_s0_s1.address
		output wire        timer_cpu_s0_s1_write,                                           //                                                          .write
		input  wire [15:0] timer_cpu_s0_s1_readdata,                                        //                                                          .readdata
		output wire [15:0] timer_cpu_s0_s1_writedata,                                       //                                                          .writedata
		output wire        timer_cpu_s0_s1_chipselect                                       //                                                          .chipselect
	);

	wire         s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_waitrequest;                          // s0_io_clockCrossing_bridge_m0_translator_avalon_universal_master_0_agent:av_waitrequest -> s0_io_clockCrossing_bridge_m0_translator:uav_waitrequest
	wire   [2:0] s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_burstcount;                           // s0_io_clockCrossing_bridge_m0_translator:uav_burstcount -> s0_io_clockCrossing_bridge_m0_translator_avalon_universal_master_0_agent:av_burstcount
	wire  [31:0] s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_writedata;                            // s0_io_clockCrossing_bridge_m0_translator:uav_writedata -> s0_io_clockCrossing_bridge_m0_translator_avalon_universal_master_0_agent:av_writedata
	wire   [9:0] s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_address;                              // s0_io_clockCrossing_bridge_m0_translator:uav_address -> s0_io_clockCrossing_bridge_m0_translator_avalon_universal_master_0_agent:av_address
	wire         s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_lock;                                 // s0_io_clockCrossing_bridge_m0_translator:uav_lock -> s0_io_clockCrossing_bridge_m0_translator_avalon_universal_master_0_agent:av_lock
	wire         s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_write;                                // s0_io_clockCrossing_bridge_m0_translator:uav_write -> s0_io_clockCrossing_bridge_m0_translator_avalon_universal_master_0_agent:av_write
	wire         s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_read;                                 // s0_io_clockCrossing_bridge_m0_translator:uav_read -> s0_io_clockCrossing_bridge_m0_translator_avalon_universal_master_0_agent:av_read
	wire  [31:0] s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_readdata;                             // s0_io_clockCrossing_bridge_m0_translator_avalon_universal_master_0_agent:av_readdata -> s0_io_clockCrossing_bridge_m0_translator:uav_readdata
	wire         s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_debugaccess;                          // s0_io_clockCrossing_bridge_m0_translator:uav_debugaccess -> s0_io_clockCrossing_bridge_m0_translator_avalon_universal_master_0_agent:av_debugaccess
	wire   [3:0] s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_byteenable;                           // s0_io_clockCrossing_bridge_m0_translator:uav_byteenable -> s0_io_clockCrossing_bridge_m0_translator_avalon_universal_master_0_agent:av_byteenable
	wire         s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_readdatavalid;                        // s0_io_clockCrossing_bridge_m0_translator_avalon_universal_master_0_agent:av_readdatavalid -> s0_io_clockCrossing_bridge_m0_translator:uav_readdatavalid
	wire         timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                // timer_cpu_s0_s1_translator:uav_waitrequest -> timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                 // timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> timer_cpu_s0_s1_translator:uav_burstcount
	wire  [31:0] timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                  // timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> timer_cpu_s0_s1_translator:uav_writedata
	wire   [9:0] timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_address;                                    // timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:m0_address -> timer_cpu_s0_s1_translator:uav_address
	wire         timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_write;                                      // timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:m0_write -> timer_cpu_s0_s1_translator:uav_write
	wire         timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                       // timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:m0_lock -> timer_cpu_s0_s1_translator:uav_lock
	wire         timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_read;                                       // timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:m0_read -> timer_cpu_s0_s1_translator:uav_read
	wire  [31:0] timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                   // timer_cpu_s0_s1_translator:uav_readdata -> timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                              // timer_cpu_s0_s1_translator:uav_readdatavalid -> timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                // timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> timer_cpu_s0_s1_translator:uav_debugaccess
	wire   [3:0] timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                 // timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> timer_cpu_s0_s1_translator:uav_byteenable
	wire         timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                         // timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                               // timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                       // timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [86:0] timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                // timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                               // timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                      // timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                            // timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                    // timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [86:0] timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                             // timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                            // timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                          // timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                           // timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                          // timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_src_endofpacket;                                                                            // cmd_xbar_mux:src_endofpacket -> timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_src_valid;                                                                                  // cmd_xbar_mux:src_valid -> timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_src_startofpacket;                                                                          // cmd_xbar_mux:src_startofpacket -> timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [85:0] cmd_xbar_mux_src_data;                                                                                   // cmd_xbar_mux:src_data -> timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [11:0] cmd_xbar_mux_src_channel;                                                                                // cmd_xbar_mux:src_channel -> timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_src_ready;                                                                                  // timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux:src_ready
	wire         jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest;             // jtag_uart_cpu_s0_avalon_jtag_slave_translator:uav_waitrequest -> jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_burstcount;              // jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_burstcount -> jtag_uart_cpu_s0_avalon_jtag_slave_translator:uav_burstcount
	wire  [31:0] jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_writedata;               // jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_writedata -> jtag_uart_cpu_s0_avalon_jtag_slave_translator:uav_writedata
	wire   [9:0] jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_address;                 // jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_address -> jtag_uart_cpu_s0_avalon_jtag_slave_translator:uav_address
	wire         jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_write;                   // jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_write -> jtag_uart_cpu_s0_avalon_jtag_slave_translator:uav_write
	wire         jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_lock;                    // jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_lock -> jtag_uart_cpu_s0_avalon_jtag_slave_translator:uav_lock
	wire         jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_read;                    // jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_read -> jtag_uart_cpu_s0_avalon_jtag_slave_translator:uav_read
	wire  [31:0] jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdata;                // jtag_uart_cpu_s0_avalon_jtag_slave_translator:uav_readdata -> jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid;           // jtag_uart_cpu_s0_avalon_jtag_slave_translator:uav_readdatavalid -> jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess;             // jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_debugaccess -> jtag_uart_cpu_s0_avalon_jtag_slave_translator:uav_debugaccess
	wire   [3:0] jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_byteenable;              // jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_byteenable -> jtag_uart_cpu_s0_avalon_jtag_slave_translator:uav_byteenable
	wire         jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;      // jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_valid;            // jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_valid -> jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;    // jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [86:0] jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_data;             // jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_data -> jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_ready;            // jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;   // jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;         // jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket; // jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [86:0] jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;          // jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;         // jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_ready -> jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;       // jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;        // jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;       // jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_001_src_endofpacket;                                                                        // cmd_xbar_mux_001:src_endofpacket -> jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_001_src_valid;                                                                              // cmd_xbar_mux_001:src_valid -> jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_001_src_startofpacket;                                                                      // cmd_xbar_mux_001:src_startofpacket -> jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [85:0] cmd_xbar_mux_001_src_data;                                                                               // cmd_xbar_mux_001:src_data -> jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_data
	wire  [11:0] cmd_xbar_mux_001_src_channel;                                                                            // cmd_xbar_mux_001:src_channel -> jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_001_src_ready;                                                                              // jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_001:src_ready
	wire         pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                        // pio_aliveTest_cpu_s0_s1_translator:uav_waitrequest -> pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                         // pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> pio_aliveTest_cpu_s0_s1_translator:uav_burstcount
	wire  [31:0] pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                          // pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> pio_aliveTest_cpu_s0_s1_translator:uav_writedata
	wire   [9:0] pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_address;                            // pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:m0_address -> pio_aliveTest_cpu_s0_s1_translator:uav_address
	wire         pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_write;                              // pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:m0_write -> pio_aliveTest_cpu_s0_s1_translator:uav_write
	wire         pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_lock;                               // pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:m0_lock -> pio_aliveTest_cpu_s0_s1_translator:uav_lock
	wire         pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_read;                               // pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:m0_read -> pio_aliveTest_cpu_s0_s1_translator:uav_read
	wire  [31:0] pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                           // pio_aliveTest_cpu_s0_s1_translator:uav_readdata -> pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                      // pio_aliveTest_cpu_s0_s1_translator:uav_readdatavalid -> pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                        // pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> pio_aliveTest_cpu_s0_s1_translator:uav_debugaccess
	wire   [3:0] pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                         // pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> pio_aliveTest_cpu_s0_s1_translator:uav_byteenable
	wire         pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                 // pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                       // pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;               // pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [86:0] pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                        // pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                       // pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;              // pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                    // pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;            // pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [86:0] pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                     // pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                    // pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                  // pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                   // pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                  // pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_002_src_endofpacket;                                                                        // cmd_xbar_mux_002:src_endofpacket -> pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_002_src_valid;                                                                              // cmd_xbar_mux_002:src_valid -> pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_002_src_startofpacket;                                                                      // cmd_xbar_mux_002:src_startofpacket -> pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [85:0] cmd_xbar_mux_002_src_data;                                                                               // cmd_xbar_mux_002:src_data -> pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [11:0] cmd_xbar_mux_002_src_channel;                                                                            // cmd_xbar_mux_002:src_channel -> pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_002_src_ready;                                                                              // pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_002:src_ready
	wire         i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest;                            // i2c_cpu_s0_mm_slave_translator:uav_waitrequest -> i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_burstcount;                             // i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:m0_burstcount -> i2c_cpu_s0_mm_slave_translator:uav_burstcount
	wire  [31:0] i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_writedata;                              // i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:m0_writedata -> i2c_cpu_s0_mm_slave_translator:uav_writedata
	wire   [9:0] i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_address;                                // i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:m0_address -> i2c_cpu_s0_mm_slave_translator:uav_address
	wire         i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_write;                                  // i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:m0_write -> i2c_cpu_s0_mm_slave_translator:uav_write
	wire         i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_lock;                                   // i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:m0_lock -> i2c_cpu_s0_mm_slave_translator:uav_lock
	wire         i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_read;                                   // i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:m0_read -> i2c_cpu_s0_mm_slave_translator:uav_read
	wire  [31:0] i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_readdata;                               // i2c_cpu_s0_mm_slave_translator:uav_readdata -> i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                          // i2c_cpu_s0_mm_slave_translator:uav_readdatavalid -> i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess;                            // i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:m0_debugaccess -> i2c_cpu_s0_mm_slave_translator:uav_debugaccess
	wire   [3:0] i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_byteenable;                             // i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:m0_byteenable -> i2c_cpu_s0_mm_slave_translator:uav_byteenable
	wire         i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                     // i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rf_source_valid;                           // i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:rf_source_valid -> i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                   // i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [86:0] i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rf_source_data;                            // i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:rf_source_data -> i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rf_source_ready;                           // i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                  // i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                        // i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                // i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [86:0] i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                         // i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                        // i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:rf_sink_ready -> i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                      // i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                       // i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                      // i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_003_src_endofpacket;                                                                        // cmd_xbar_mux_003:src_endofpacket -> i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_003_src_valid;                                                                              // cmd_xbar_mux_003:src_valid -> i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_003_src_startofpacket;                                                                      // cmd_xbar_mux_003:src_startofpacket -> i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [85:0] cmd_xbar_mux_003_src_data;                                                                               // cmd_xbar_mux_003:src_data -> i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:cp_data
	wire  [11:0] cmd_xbar_mux_003_src_channel;                                                                            // cmd_xbar_mux_003:src_channel -> i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_003_src_ready;                                                                              // i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_003:src_ready
	wire         pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                // pwm_cpu_s0_1_s0_translator:uav_waitrequest -> pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_burstcount;                                 // pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:m0_burstcount -> pwm_cpu_s0_1_s0_translator:uav_burstcount
	wire  [31:0] pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_writedata;                                  // pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:m0_writedata -> pwm_cpu_s0_1_s0_translator:uav_writedata
	wire   [9:0] pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_address;                                    // pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:m0_address -> pwm_cpu_s0_1_s0_translator:uav_address
	wire         pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_write;                                      // pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:m0_write -> pwm_cpu_s0_1_s0_translator:uav_write
	wire         pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_lock;                                       // pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:m0_lock -> pwm_cpu_s0_1_s0_translator:uav_lock
	wire         pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_read;                                       // pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:m0_read -> pwm_cpu_s0_1_s0_translator:uav_read
	wire  [31:0] pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_readdata;                                   // pwm_cpu_s0_1_s0_translator:uav_readdata -> pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                              // pwm_cpu_s0_1_s0_translator:uav_readdatavalid -> pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                // pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:m0_debugaccess -> pwm_cpu_s0_1_s0_translator:uav_debugaccess
	wire   [3:0] pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_byteenable;                                 // pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:m0_byteenable -> pwm_cpu_s0_1_s0_translator:uav_byteenable
	wire         pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                         // pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rf_source_valid;                               // pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:rf_source_valid -> pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                       // pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [86:0] pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rf_source_data;                                // pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:rf_source_data -> pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rf_source_ready;                               // pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                      // pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                            // pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                    // pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [86:0] pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                             // pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                            // pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:rf_sink_ready -> pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                          // pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:in_valid
	wire  [33:0] pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                           // pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:in_data
	wire         pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                          // pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:in_ready -> pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid;                          // pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:out_valid -> pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data;                           // pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:out_data -> pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready;                          // pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:out_ready
	wire         cmd_xbar_mux_004_src_endofpacket;                                                                        // cmd_xbar_mux_004:src_endofpacket -> pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_004_src_valid;                                                                              // cmd_xbar_mux_004:src_valid -> pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_004_src_startofpacket;                                                                      // cmd_xbar_mux_004:src_startofpacket -> pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [85:0] cmd_xbar_mux_004_src_data;                                                                               // cmd_xbar_mux_004:src_data -> pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:cp_data
	wire  [11:0] cmd_xbar_mux_004_src_channel;                                                                            // cmd_xbar_mux_004:src_channel -> pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_004_src_ready;                                                                              // pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_004:src_ready
	wire         pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                // pwm_cpu_s0_2_s0_translator:uav_waitrequest -> pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_burstcount;                                 // pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:m0_burstcount -> pwm_cpu_s0_2_s0_translator:uav_burstcount
	wire  [31:0] pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_writedata;                                  // pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:m0_writedata -> pwm_cpu_s0_2_s0_translator:uav_writedata
	wire   [9:0] pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_address;                                    // pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:m0_address -> pwm_cpu_s0_2_s0_translator:uav_address
	wire         pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_write;                                      // pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:m0_write -> pwm_cpu_s0_2_s0_translator:uav_write
	wire         pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_lock;                                       // pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:m0_lock -> pwm_cpu_s0_2_s0_translator:uav_lock
	wire         pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_read;                                       // pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:m0_read -> pwm_cpu_s0_2_s0_translator:uav_read
	wire  [31:0] pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_readdata;                                   // pwm_cpu_s0_2_s0_translator:uav_readdata -> pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                              // pwm_cpu_s0_2_s0_translator:uav_readdatavalid -> pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                // pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:m0_debugaccess -> pwm_cpu_s0_2_s0_translator:uav_debugaccess
	wire   [3:0] pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_byteenable;                                 // pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:m0_byteenable -> pwm_cpu_s0_2_s0_translator:uav_byteenable
	wire         pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                         // pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rf_source_valid;                               // pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:rf_source_valid -> pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                       // pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [86:0] pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rf_source_data;                                // pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:rf_source_data -> pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rf_source_ready;                               // pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                      // pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                            // pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                    // pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [86:0] pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                             // pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                            // pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:rf_sink_ready -> pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                          // pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:in_valid
	wire  [33:0] pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                           // pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:in_data
	wire         pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                          // pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:in_ready -> pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid;                          // pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:out_valid -> pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data;                           // pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:out_data -> pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready;                          // pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:out_ready
	wire         cmd_xbar_mux_005_src_endofpacket;                                                                        // cmd_xbar_mux_005:src_endofpacket -> pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_005_src_valid;                                                                              // cmd_xbar_mux_005:src_valid -> pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_005_src_startofpacket;                                                                      // cmd_xbar_mux_005:src_startofpacket -> pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [85:0] cmd_xbar_mux_005_src_data;                                                                               // cmd_xbar_mux_005:src_data -> pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:cp_data
	wire  [11:0] cmd_xbar_mux_005_src_channel;                                                                            // cmd_xbar_mux_005:src_channel -> pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_005_src_ready;                                                                              // pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_005:src_ready
	wire         pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                // pwm_cpu_s0_3_s0_translator:uav_waitrequest -> pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_burstcount;                                 // pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:m0_burstcount -> pwm_cpu_s0_3_s0_translator:uav_burstcount
	wire  [31:0] pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_writedata;                                  // pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:m0_writedata -> pwm_cpu_s0_3_s0_translator:uav_writedata
	wire   [9:0] pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_address;                                    // pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:m0_address -> pwm_cpu_s0_3_s0_translator:uav_address
	wire         pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_write;                                      // pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:m0_write -> pwm_cpu_s0_3_s0_translator:uav_write
	wire         pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_lock;                                       // pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:m0_lock -> pwm_cpu_s0_3_s0_translator:uav_lock
	wire         pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_read;                                       // pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:m0_read -> pwm_cpu_s0_3_s0_translator:uav_read
	wire  [31:0] pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_readdata;                                   // pwm_cpu_s0_3_s0_translator:uav_readdata -> pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                              // pwm_cpu_s0_3_s0_translator:uav_readdatavalid -> pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                // pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:m0_debugaccess -> pwm_cpu_s0_3_s0_translator:uav_debugaccess
	wire   [3:0] pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_byteenable;                                 // pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:m0_byteenable -> pwm_cpu_s0_3_s0_translator:uav_byteenable
	wire         pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                         // pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rf_source_valid;                               // pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:rf_source_valid -> pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                       // pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [86:0] pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rf_source_data;                                // pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:rf_source_data -> pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rf_source_ready;                               // pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                      // pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                            // pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                    // pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [86:0] pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                             // pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                            // pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:rf_sink_ready -> pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                          // pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:in_valid
	wire  [33:0] pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                           // pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:in_data
	wire         pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                          // pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:in_ready -> pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid;                          // pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:out_valid -> pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data;                           // pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:out_data -> pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready;                          // pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:out_ready
	wire         cmd_xbar_mux_006_src_endofpacket;                                                                        // cmd_xbar_mux_006:src_endofpacket -> pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_006_src_valid;                                                                              // cmd_xbar_mux_006:src_valid -> pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_006_src_startofpacket;                                                                      // cmd_xbar_mux_006:src_startofpacket -> pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [85:0] cmd_xbar_mux_006_src_data;                                                                               // cmd_xbar_mux_006:src_data -> pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:cp_data
	wire  [11:0] cmd_xbar_mux_006_src_channel;                                                                            // cmd_xbar_mux_006:src_channel -> pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_006_src_ready;                                                                              // pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_006:src_ready
	wire         pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                // pwm_cpu_s0_4_s0_translator:uav_waitrequest -> pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_burstcount;                                 // pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:m0_burstcount -> pwm_cpu_s0_4_s0_translator:uav_burstcount
	wire  [31:0] pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_writedata;                                  // pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:m0_writedata -> pwm_cpu_s0_4_s0_translator:uav_writedata
	wire   [9:0] pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_address;                                    // pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:m0_address -> pwm_cpu_s0_4_s0_translator:uav_address
	wire         pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_write;                                      // pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:m0_write -> pwm_cpu_s0_4_s0_translator:uav_write
	wire         pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_lock;                                       // pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:m0_lock -> pwm_cpu_s0_4_s0_translator:uav_lock
	wire         pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_read;                                       // pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:m0_read -> pwm_cpu_s0_4_s0_translator:uav_read
	wire  [31:0] pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_readdata;                                   // pwm_cpu_s0_4_s0_translator:uav_readdata -> pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                              // pwm_cpu_s0_4_s0_translator:uav_readdatavalid -> pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                // pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:m0_debugaccess -> pwm_cpu_s0_4_s0_translator:uav_debugaccess
	wire   [3:0] pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_byteenable;                                 // pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:m0_byteenable -> pwm_cpu_s0_4_s0_translator:uav_byteenable
	wire         pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                         // pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rf_source_valid;                               // pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:rf_source_valid -> pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                       // pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [86:0] pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rf_source_data;                                // pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:rf_source_data -> pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rf_source_ready;                               // pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                      // pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                            // pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                    // pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [86:0] pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                             // pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                            // pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:rf_sink_ready -> pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                          // pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:in_valid
	wire  [33:0] pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                           // pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:in_data
	wire         pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                          // pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:in_ready -> pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid;                          // pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:out_valid -> pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data;                           // pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:out_data -> pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready;                          // pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:out_ready
	wire         cmd_xbar_mux_007_src_endofpacket;                                                                        // cmd_xbar_mux_007:src_endofpacket -> pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_007_src_valid;                                                                              // cmd_xbar_mux_007:src_valid -> pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_007_src_startofpacket;                                                                      // cmd_xbar_mux_007:src_startofpacket -> pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [85:0] cmd_xbar_mux_007_src_data;                                                                               // cmd_xbar_mux_007:src_data -> pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:cp_data
	wire  [11:0] cmd_xbar_mux_007_src_channel;                                                                            // cmd_xbar_mux_007:src_channel -> pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_007_src_ready;                                                                              // pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_007:src_ready
	wire         pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                // pwm_cpu_s0_5_s0_translator:uav_waitrequest -> pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_burstcount;                                 // pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:m0_burstcount -> pwm_cpu_s0_5_s0_translator:uav_burstcount
	wire  [31:0] pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_writedata;                                  // pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:m0_writedata -> pwm_cpu_s0_5_s0_translator:uav_writedata
	wire   [9:0] pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_address;                                    // pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:m0_address -> pwm_cpu_s0_5_s0_translator:uav_address
	wire         pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_write;                                      // pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:m0_write -> pwm_cpu_s0_5_s0_translator:uav_write
	wire         pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_lock;                                       // pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:m0_lock -> pwm_cpu_s0_5_s0_translator:uav_lock
	wire         pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_read;                                       // pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:m0_read -> pwm_cpu_s0_5_s0_translator:uav_read
	wire  [31:0] pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_readdata;                                   // pwm_cpu_s0_5_s0_translator:uav_readdata -> pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                              // pwm_cpu_s0_5_s0_translator:uav_readdatavalid -> pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                // pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:m0_debugaccess -> pwm_cpu_s0_5_s0_translator:uav_debugaccess
	wire   [3:0] pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_byteenable;                                 // pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:m0_byteenable -> pwm_cpu_s0_5_s0_translator:uav_byteenable
	wire         pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                         // pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rf_source_valid;                               // pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:rf_source_valid -> pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                       // pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [86:0] pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rf_source_data;                                // pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:rf_source_data -> pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rf_source_ready;                               // pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                      // pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                            // pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                    // pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [86:0] pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                             // pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                            // pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:rf_sink_ready -> pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                          // pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:in_valid
	wire  [33:0] pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                           // pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:in_data
	wire         pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                          // pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:in_ready -> pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid;                          // pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:out_valid -> pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data;                           // pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:out_data -> pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready;                          // pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:out_ready
	wire         cmd_xbar_mux_008_src_endofpacket;                                                                        // cmd_xbar_mux_008:src_endofpacket -> pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_008_src_valid;                                                                              // cmd_xbar_mux_008:src_valid -> pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_008_src_startofpacket;                                                                      // cmd_xbar_mux_008:src_startofpacket -> pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [85:0] cmd_xbar_mux_008_src_data;                                                                               // cmd_xbar_mux_008:src_data -> pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:cp_data
	wire  [11:0] cmd_xbar_mux_008_src_channel;                                                                            // cmd_xbar_mux_008:src_channel -> pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_008_src_ready;                                                                              // pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_008:src_ready
	wire         pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                // pwm_cpu_s0_6_s0_translator:uav_waitrequest -> pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_burstcount;                                 // pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:m0_burstcount -> pwm_cpu_s0_6_s0_translator:uav_burstcount
	wire  [31:0] pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_writedata;                                  // pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:m0_writedata -> pwm_cpu_s0_6_s0_translator:uav_writedata
	wire   [9:0] pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_address;                                    // pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:m0_address -> pwm_cpu_s0_6_s0_translator:uav_address
	wire         pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_write;                                      // pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:m0_write -> pwm_cpu_s0_6_s0_translator:uav_write
	wire         pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_lock;                                       // pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:m0_lock -> pwm_cpu_s0_6_s0_translator:uav_lock
	wire         pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_read;                                       // pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:m0_read -> pwm_cpu_s0_6_s0_translator:uav_read
	wire  [31:0] pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_readdata;                                   // pwm_cpu_s0_6_s0_translator:uav_readdata -> pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                              // pwm_cpu_s0_6_s0_translator:uav_readdatavalid -> pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                // pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:m0_debugaccess -> pwm_cpu_s0_6_s0_translator:uav_debugaccess
	wire   [3:0] pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_byteenable;                                 // pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:m0_byteenable -> pwm_cpu_s0_6_s0_translator:uav_byteenable
	wire         pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                         // pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rf_source_valid;                               // pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:rf_source_valid -> pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                       // pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [86:0] pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rf_source_data;                                // pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:rf_source_data -> pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rf_source_ready;                               // pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                      // pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                            // pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                    // pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [86:0] pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                             // pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                            // pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:rf_sink_ready -> pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                          // pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:in_valid
	wire  [33:0] pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                           // pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:in_data
	wire         pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                          // pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:in_ready -> pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid;                          // pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:out_valid -> pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data;                           // pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:out_data -> pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready;                          // pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:out_ready
	wire         cmd_xbar_mux_009_src_endofpacket;                                                                        // cmd_xbar_mux_009:src_endofpacket -> pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_009_src_valid;                                                                              // cmd_xbar_mux_009:src_valid -> pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_009_src_startofpacket;                                                                      // cmd_xbar_mux_009:src_startofpacket -> pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [85:0] cmd_xbar_mux_009_src_data;                                                                               // cmd_xbar_mux_009:src_data -> pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:cp_data
	wire  [11:0] cmd_xbar_mux_009_src_channel;                                                                            // cmd_xbar_mux_009:src_channel -> pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_009_src_ready;                                                                              // pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_009:src_ready
	wire         pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                // pwm_cpu_s0_7_s0_translator:uav_waitrequest -> pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_burstcount;                                 // pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:m0_burstcount -> pwm_cpu_s0_7_s0_translator:uav_burstcount
	wire  [31:0] pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_writedata;                                  // pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:m0_writedata -> pwm_cpu_s0_7_s0_translator:uav_writedata
	wire   [9:0] pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_address;                                    // pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:m0_address -> pwm_cpu_s0_7_s0_translator:uav_address
	wire         pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_write;                                      // pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:m0_write -> pwm_cpu_s0_7_s0_translator:uav_write
	wire         pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_lock;                                       // pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:m0_lock -> pwm_cpu_s0_7_s0_translator:uav_lock
	wire         pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_read;                                       // pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:m0_read -> pwm_cpu_s0_7_s0_translator:uav_read
	wire  [31:0] pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_readdata;                                   // pwm_cpu_s0_7_s0_translator:uav_readdata -> pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                              // pwm_cpu_s0_7_s0_translator:uav_readdatavalid -> pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                // pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:m0_debugaccess -> pwm_cpu_s0_7_s0_translator:uav_debugaccess
	wire   [3:0] pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_byteenable;                                 // pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:m0_byteenable -> pwm_cpu_s0_7_s0_translator:uav_byteenable
	wire         pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                         // pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rf_source_valid;                               // pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:rf_source_valid -> pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                       // pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [86:0] pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rf_source_data;                                // pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:rf_source_data -> pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rf_source_ready;                               // pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                      // pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                            // pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                    // pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [86:0] pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                             // pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                            // pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:rf_sink_ready -> pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                          // pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:in_valid
	wire  [33:0] pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                           // pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:in_data
	wire         pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                          // pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:in_ready -> pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid;                          // pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:out_valid -> pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data;                           // pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:out_data -> pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready;                          // pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:out_ready
	wire         cmd_xbar_mux_010_src_endofpacket;                                                                        // cmd_xbar_mux_010:src_endofpacket -> pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_010_src_valid;                                                                              // cmd_xbar_mux_010:src_valid -> pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_010_src_startofpacket;                                                                      // cmd_xbar_mux_010:src_startofpacket -> pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [85:0] cmd_xbar_mux_010_src_data;                                                                               // cmd_xbar_mux_010:src_data -> pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:cp_data
	wire  [11:0] cmd_xbar_mux_010_src_channel;                                                                            // cmd_xbar_mux_010:src_channel -> pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_010_src_ready;                                                                              // pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_010:src_ready
	wire         pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                // pwm_cpu_s0_8_s0_translator:uav_waitrequest -> pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_burstcount;                                 // pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:m0_burstcount -> pwm_cpu_s0_8_s0_translator:uav_burstcount
	wire  [31:0] pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_writedata;                                  // pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:m0_writedata -> pwm_cpu_s0_8_s0_translator:uav_writedata
	wire   [9:0] pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_address;                                    // pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:m0_address -> pwm_cpu_s0_8_s0_translator:uav_address
	wire         pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_write;                                      // pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:m0_write -> pwm_cpu_s0_8_s0_translator:uav_write
	wire         pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_lock;                                       // pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:m0_lock -> pwm_cpu_s0_8_s0_translator:uav_lock
	wire         pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_read;                                       // pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:m0_read -> pwm_cpu_s0_8_s0_translator:uav_read
	wire  [31:0] pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_readdata;                                   // pwm_cpu_s0_8_s0_translator:uav_readdata -> pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                              // pwm_cpu_s0_8_s0_translator:uav_readdatavalid -> pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                // pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:m0_debugaccess -> pwm_cpu_s0_8_s0_translator:uav_debugaccess
	wire   [3:0] pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_byteenable;                                 // pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:m0_byteenable -> pwm_cpu_s0_8_s0_translator:uav_byteenable
	wire         pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                         // pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rf_source_valid;                               // pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:rf_source_valid -> pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                       // pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [86:0] pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rf_source_data;                                // pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:rf_source_data -> pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rf_source_ready;                               // pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                      // pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                            // pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                    // pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [86:0] pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                             // pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                            // pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:rf_sink_ready -> pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                          // pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:in_valid
	wire  [33:0] pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                           // pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:in_data
	wire         pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                          // pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:in_ready -> pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid;                          // pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:out_valid -> pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data;                           // pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:out_data -> pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready;                          // pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rdata_fifo:out_ready
	wire         cmd_xbar_mux_011_src_endofpacket;                                                                        // cmd_xbar_mux_011:src_endofpacket -> pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_011_src_valid;                                                                              // cmd_xbar_mux_011:src_valid -> pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_011_src_startofpacket;                                                                      // cmd_xbar_mux_011:src_startofpacket -> pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [85:0] cmd_xbar_mux_011_src_data;                                                                               // cmd_xbar_mux_011:src_data -> pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:cp_data
	wire  [11:0] cmd_xbar_mux_011_src_channel;                                                                            // cmd_xbar_mux_011:src_channel -> pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_011_src_ready;                                                                              // pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_011:src_ready
	wire         s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_agent_cp_endofpacket;                 // s0_io_clockCrossing_bridge_m0_translator_avalon_universal_master_0_agent:cp_endofpacket -> addr_router:sink_endofpacket
	wire         s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_agent_cp_valid;                       // s0_io_clockCrossing_bridge_m0_translator_avalon_universal_master_0_agent:cp_valid -> addr_router:sink_valid
	wire         s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_agent_cp_startofpacket;               // s0_io_clockCrossing_bridge_m0_translator_avalon_universal_master_0_agent:cp_startofpacket -> addr_router:sink_startofpacket
	wire  [85:0] s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_agent_cp_data;                        // s0_io_clockCrossing_bridge_m0_translator_avalon_universal_master_0_agent:cp_data -> addr_router:sink_data
	wire         s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_agent_cp_ready;                       // addr_router:sink_ready -> s0_io_clockCrossing_bridge_m0_translator_avalon_universal_master_0_agent:cp_ready
	wire         timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                // timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router:sink_endofpacket
	wire         timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                      // timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router:sink_valid
	wire         timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                              // timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router:sink_startofpacket
	wire  [85:0] timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_data;                                       // timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router:sink_data
	wire         timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                      // id_router:sink_ready -> timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_src_endofpacket;                                                                               // id_router:src_endofpacket -> rsp_xbar_demux:sink_endofpacket
	wire         id_router_src_valid;                                                                                     // id_router:src_valid -> rsp_xbar_demux:sink_valid
	wire         id_router_src_startofpacket;                                                                             // id_router:src_startofpacket -> rsp_xbar_demux:sink_startofpacket
	wire  [85:0] id_router_src_data;                                                                                      // id_router:src_data -> rsp_xbar_demux:sink_data
	wire  [11:0] id_router_src_channel;                                                                                   // id_router:src_channel -> rsp_xbar_demux:sink_channel
	wire         id_router_src_ready;                                                                                     // rsp_xbar_demux:sink_ready -> id_router:src_ready
	wire         jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket;             // jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_001:sink_endofpacket
	wire         jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_valid;                   // jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_001:sink_valid
	wire         jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket;           // jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_001:sink_startofpacket
	wire  [85:0] jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_data;                    // jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_data -> id_router_001:sink_data
	wire         jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_ready;                   // id_router_001:sink_ready -> jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_001_src_endofpacket;                                                                           // id_router_001:src_endofpacket -> rsp_xbar_demux_001:sink_endofpacket
	wire         id_router_001_src_valid;                                                                                 // id_router_001:src_valid -> rsp_xbar_demux_001:sink_valid
	wire         id_router_001_src_startofpacket;                                                                         // id_router_001:src_startofpacket -> rsp_xbar_demux_001:sink_startofpacket
	wire  [85:0] id_router_001_src_data;                                                                                  // id_router_001:src_data -> rsp_xbar_demux_001:sink_data
	wire  [11:0] id_router_001_src_channel;                                                                               // id_router_001:src_channel -> rsp_xbar_demux_001:sink_channel
	wire         id_router_001_src_ready;                                                                                 // rsp_xbar_demux_001:sink_ready -> id_router_001:src_ready
	wire         pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                        // pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_002:sink_endofpacket
	wire         pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_valid;                              // pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_002:sink_valid
	wire         pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                      // pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_002:sink_startofpacket
	wire  [85:0] pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_data;                               // pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_002:sink_data
	wire         pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_ready;                              // id_router_002:sink_ready -> pio_aliveTest_cpu_s0_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_002_src_endofpacket;                                                                           // id_router_002:src_endofpacket -> rsp_xbar_demux_002:sink_endofpacket
	wire         id_router_002_src_valid;                                                                                 // id_router_002:src_valid -> rsp_xbar_demux_002:sink_valid
	wire         id_router_002_src_startofpacket;                                                                         // id_router_002:src_startofpacket -> rsp_xbar_demux_002:sink_startofpacket
	wire  [85:0] id_router_002_src_data;                                                                                  // id_router_002:src_data -> rsp_xbar_demux_002:sink_data
	wire  [11:0] id_router_002_src_channel;                                                                               // id_router_002:src_channel -> rsp_xbar_demux_002:sink_channel
	wire         id_router_002_src_ready;                                                                                 // rsp_xbar_demux_002:sink_ready -> id_router_002:src_ready
	wire         i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket;                            // i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_003:sink_endofpacket
	wire         i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rp_valid;                                  // i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_003:sink_valid
	wire         i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket;                          // i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_003:sink_startofpacket
	wire  [85:0] i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rp_data;                                   // i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:rp_data -> id_router_003:sink_data
	wire         i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rp_ready;                                  // id_router_003:sink_ready -> i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_003_src_endofpacket;                                                                           // id_router_003:src_endofpacket -> rsp_xbar_demux_003:sink_endofpacket
	wire         id_router_003_src_valid;                                                                                 // id_router_003:src_valid -> rsp_xbar_demux_003:sink_valid
	wire         id_router_003_src_startofpacket;                                                                         // id_router_003:src_startofpacket -> rsp_xbar_demux_003:sink_startofpacket
	wire  [85:0] id_router_003_src_data;                                                                                  // id_router_003:src_data -> rsp_xbar_demux_003:sink_data
	wire  [11:0] id_router_003_src_channel;                                                                               // id_router_003:src_channel -> rsp_xbar_demux_003:sink_channel
	wire         id_router_003_src_ready;                                                                                 // rsp_xbar_demux_003:sink_ready -> id_router_003:src_ready
	wire         pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                // pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_004:sink_endofpacket
	wire         pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rp_valid;                                      // pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_004:sink_valid
	wire         pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket;                              // pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_004:sink_startofpacket
	wire  [85:0] pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rp_data;                                       // pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:rp_data -> id_router_004:sink_data
	wire         pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rp_ready;                                      // id_router_004:sink_ready -> pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_004_src_endofpacket;                                                                           // id_router_004:src_endofpacket -> rsp_xbar_demux_004:sink_endofpacket
	wire         id_router_004_src_valid;                                                                                 // id_router_004:src_valid -> rsp_xbar_demux_004:sink_valid
	wire         id_router_004_src_startofpacket;                                                                         // id_router_004:src_startofpacket -> rsp_xbar_demux_004:sink_startofpacket
	wire  [85:0] id_router_004_src_data;                                                                                  // id_router_004:src_data -> rsp_xbar_demux_004:sink_data
	wire  [11:0] id_router_004_src_channel;                                                                               // id_router_004:src_channel -> rsp_xbar_demux_004:sink_channel
	wire         id_router_004_src_ready;                                                                                 // rsp_xbar_demux_004:sink_ready -> id_router_004:src_ready
	wire         pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                // pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_005:sink_endofpacket
	wire         pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rp_valid;                                      // pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_005:sink_valid
	wire         pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket;                              // pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_005:sink_startofpacket
	wire  [85:0] pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rp_data;                                       // pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:rp_data -> id_router_005:sink_data
	wire         pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rp_ready;                                      // id_router_005:sink_ready -> pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_005_src_endofpacket;                                                                           // id_router_005:src_endofpacket -> rsp_xbar_demux_005:sink_endofpacket
	wire         id_router_005_src_valid;                                                                                 // id_router_005:src_valid -> rsp_xbar_demux_005:sink_valid
	wire         id_router_005_src_startofpacket;                                                                         // id_router_005:src_startofpacket -> rsp_xbar_demux_005:sink_startofpacket
	wire  [85:0] id_router_005_src_data;                                                                                  // id_router_005:src_data -> rsp_xbar_demux_005:sink_data
	wire  [11:0] id_router_005_src_channel;                                                                               // id_router_005:src_channel -> rsp_xbar_demux_005:sink_channel
	wire         id_router_005_src_ready;                                                                                 // rsp_xbar_demux_005:sink_ready -> id_router_005:src_ready
	wire         pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                // pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_006:sink_endofpacket
	wire         pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rp_valid;                                      // pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_006:sink_valid
	wire         pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket;                              // pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_006:sink_startofpacket
	wire  [85:0] pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rp_data;                                       // pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:rp_data -> id_router_006:sink_data
	wire         pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rp_ready;                                      // id_router_006:sink_ready -> pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_006_src_endofpacket;                                                                           // id_router_006:src_endofpacket -> rsp_xbar_demux_006:sink_endofpacket
	wire         id_router_006_src_valid;                                                                                 // id_router_006:src_valid -> rsp_xbar_demux_006:sink_valid
	wire         id_router_006_src_startofpacket;                                                                         // id_router_006:src_startofpacket -> rsp_xbar_demux_006:sink_startofpacket
	wire  [85:0] id_router_006_src_data;                                                                                  // id_router_006:src_data -> rsp_xbar_demux_006:sink_data
	wire  [11:0] id_router_006_src_channel;                                                                               // id_router_006:src_channel -> rsp_xbar_demux_006:sink_channel
	wire         id_router_006_src_ready;                                                                                 // rsp_xbar_demux_006:sink_ready -> id_router_006:src_ready
	wire         pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                // pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_007:sink_endofpacket
	wire         pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rp_valid;                                      // pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_007:sink_valid
	wire         pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket;                              // pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_007:sink_startofpacket
	wire  [85:0] pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rp_data;                                       // pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:rp_data -> id_router_007:sink_data
	wire         pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rp_ready;                                      // id_router_007:sink_ready -> pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_007_src_endofpacket;                                                                           // id_router_007:src_endofpacket -> rsp_xbar_demux_007:sink_endofpacket
	wire         id_router_007_src_valid;                                                                                 // id_router_007:src_valid -> rsp_xbar_demux_007:sink_valid
	wire         id_router_007_src_startofpacket;                                                                         // id_router_007:src_startofpacket -> rsp_xbar_demux_007:sink_startofpacket
	wire  [85:0] id_router_007_src_data;                                                                                  // id_router_007:src_data -> rsp_xbar_demux_007:sink_data
	wire  [11:0] id_router_007_src_channel;                                                                               // id_router_007:src_channel -> rsp_xbar_demux_007:sink_channel
	wire         id_router_007_src_ready;                                                                                 // rsp_xbar_demux_007:sink_ready -> id_router_007:src_ready
	wire         pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                // pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_008:sink_endofpacket
	wire         pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rp_valid;                                      // pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_008:sink_valid
	wire         pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket;                              // pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_008:sink_startofpacket
	wire  [85:0] pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rp_data;                                       // pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:rp_data -> id_router_008:sink_data
	wire         pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rp_ready;                                      // id_router_008:sink_ready -> pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_008_src_endofpacket;                                                                           // id_router_008:src_endofpacket -> rsp_xbar_demux_008:sink_endofpacket
	wire         id_router_008_src_valid;                                                                                 // id_router_008:src_valid -> rsp_xbar_demux_008:sink_valid
	wire         id_router_008_src_startofpacket;                                                                         // id_router_008:src_startofpacket -> rsp_xbar_demux_008:sink_startofpacket
	wire  [85:0] id_router_008_src_data;                                                                                  // id_router_008:src_data -> rsp_xbar_demux_008:sink_data
	wire  [11:0] id_router_008_src_channel;                                                                               // id_router_008:src_channel -> rsp_xbar_demux_008:sink_channel
	wire         id_router_008_src_ready;                                                                                 // rsp_xbar_demux_008:sink_ready -> id_router_008:src_ready
	wire         pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                // pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_009:sink_endofpacket
	wire         pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rp_valid;                                      // pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_009:sink_valid
	wire         pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket;                              // pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_009:sink_startofpacket
	wire  [85:0] pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rp_data;                                       // pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:rp_data -> id_router_009:sink_data
	wire         pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rp_ready;                                      // id_router_009:sink_ready -> pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_009_src_endofpacket;                                                                           // id_router_009:src_endofpacket -> rsp_xbar_demux_009:sink_endofpacket
	wire         id_router_009_src_valid;                                                                                 // id_router_009:src_valid -> rsp_xbar_demux_009:sink_valid
	wire         id_router_009_src_startofpacket;                                                                         // id_router_009:src_startofpacket -> rsp_xbar_demux_009:sink_startofpacket
	wire  [85:0] id_router_009_src_data;                                                                                  // id_router_009:src_data -> rsp_xbar_demux_009:sink_data
	wire  [11:0] id_router_009_src_channel;                                                                               // id_router_009:src_channel -> rsp_xbar_demux_009:sink_channel
	wire         id_router_009_src_ready;                                                                                 // rsp_xbar_demux_009:sink_ready -> id_router_009:src_ready
	wire         pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                // pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_010:sink_endofpacket
	wire         pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rp_valid;                                      // pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_010:sink_valid
	wire         pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket;                              // pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_010:sink_startofpacket
	wire  [85:0] pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rp_data;                                       // pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:rp_data -> id_router_010:sink_data
	wire         pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rp_ready;                                      // id_router_010:sink_ready -> pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_010_src_endofpacket;                                                                           // id_router_010:src_endofpacket -> rsp_xbar_demux_010:sink_endofpacket
	wire         id_router_010_src_valid;                                                                                 // id_router_010:src_valid -> rsp_xbar_demux_010:sink_valid
	wire         id_router_010_src_startofpacket;                                                                         // id_router_010:src_startofpacket -> rsp_xbar_demux_010:sink_startofpacket
	wire  [85:0] id_router_010_src_data;                                                                                  // id_router_010:src_data -> rsp_xbar_demux_010:sink_data
	wire  [11:0] id_router_010_src_channel;                                                                               // id_router_010:src_channel -> rsp_xbar_demux_010:sink_channel
	wire         id_router_010_src_ready;                                                                                 // rsp_xbar_demux_010:sink_ready -> id_router_010:src_ready
	wire         pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                // pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_011:sink_endofpacket
	wire         pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rp_valid;                                      // pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_011:sink_valid
	wire         pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket;                              // pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_011:sink_startofpacket
	wire  [85:0] pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rp_data;                                       // pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:rp_data -> id_router_011:sink_data
	wire         pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rp_ready;                                      // id_router_011:sink_ready -> pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_011_src_endofpacket;                                                                           // id_router_011:src_endofpacket -> rsp_xbar_demux_011:sink_endofpacket
	wire         id_router_011_src_valid;                                                                                 // id_router_011:src_valid -> rsp_xbar_demux_011:sink_valid
	wire         id_router_011_src_startofpacket;                                                                         // id_router_011:src_startofpacket -> rsp_xbar_demux_011:sink_startofpacket
	wire  [85:0] id_router_011_src_data;                                                                                  // id_router_011:src_data -> rsp_xbar_demux_011:sink_data
	wire  [11:0] id_router_011_src_channel;                                                                               // id_router_011:src_channel -> rsp_xbar_demux_011:sink_channel
	wire         id_router_011_src_ready;                                                                                 // rsp_xbar_demux_011:sink_ready -> id_router_011:src_ready
	wire         addr_router_src_endofpacket;                                                                             // addr_router:src_endofpacket -> limiter:cmd_sink_endofpacket
	wire         addr_router_src_valid;                                                                                   // addr_router:src_valid -> limiter:cmd_sink_valid
	wire         addr_router_src_startofpacket;                                                                           // addr_router:src_startofpacket -> limiter:cmd_sink_startofpacket
	wire  [85:0] addr_router_src_data;                                                                                    // addr_router:src_data -> limiter:cmd_sink_data
	wire  [11:0] addr_router_src_channel;                                                                                 // addr_router:src_channel -> limiter:cmd_sink_channel
	wire         addr_router_src_ready;                                                                                   // limiter:cmd_sink_ready -> addr_router:src_ready
	wire         limiter_cmd_src_endofpacket;                                                                             // limiter:cmd_src_endofpacket -> cmd_xbar_demux:sink_endofpacket
	wire         limiter_cmd_src_startofpacket;                                                                           // limiter:cmd_src_startofpacket -> cmd_xbar_demux:sink_startofpacket
	wire  [85:0] limiter_cmd_src_data;                                                                                    // limiter:cmd_src_data -> cmd_xbar_demux:sink_data
	wire  [11:0] limiter_cmd_src_channel;                                                                                 // limiter:cmd_src_channel -> cmd_xbar_demux:sink_channel
	wire         limiter_cmd_src_ready;                                                                                   // cmd_xbar_demux:sink_ready -> limiter:cmd_src_ready
	wire         rsp_xbar_mux_src_endofpacket;                                                                            // rsp_xbar_mux:src_endofpacket -> limiter:rsp_sink_endofpacket
	wire         rsp_xbar_mux_src_valid;                                                                                  // rsp_xbar_mux:src_valid -> limiter:rsp_sink_valid
	wire         rsp_xbar_mux_src_startofpacket;                                                                          // rsp_xbar_mux:src_startofpacket -> limiter:rsp_sink_startofpacket
	wire  [85:0] rsp_xbar_mux_src_data;                                                                                   // rsp_xbar_mux:src_data -> limiter:rsp_sink_data
	wire  [11:0] rsp_xbar_mux_src_channel;                                                                                // rsp_xbar_mux:src_channel -> limiter:rsp_sink_channel
	wire         rsp_xbar_mux_src_ready;                                                                                  // limiter:rsp_sink_ready -> rsp_xbar_mux:src_ready
	wire         limiter_rsp_src_endofpacket;                                                                             // limiter:rsp_src_endofpacket -> s0_io_clockCrossing_bridge_m0_translator_avalon_universal_master_0_agent:rp_endofpacket
	wire         limiter_rsp_src_valid;                                                                                   // limiter:rsp_src_valid -> s0_io_clockCrossing_bridge_m0_translator_avalon_universal_master_0_agent:rp_valid
	wire         limiter_rsp_src_startofpacket;                                                                           // limiter:rsp_src_startofpacket -> s0_io_clockCrossing_bridge_m0_translator_avalon_universal_master_0_agent:rp_startofpacket
	wire  [85:0] limiter_rsp_src_data;                                                                                    // limiter:rsp_src_data -> s0_io_clockCrossing_bridge_m0_translator_avalon_universal_master_0_agent:rp_data
	wire  [11:0] limiter_rsp_src_channel;                                                                                 // limiter:rsp_src_channel -> s0_io_clockCrossing_bridge_m0_translator_avalon_universal_master_0_agent:rp_channel
	wire         limiter_rsp_src_ready;                                                                                   // s0_io_clockCrossing_bridge_m0_translator_avalon_universal_master_0_agent:rp_ready -> limiter:rsp_src_ready
	wire         cmd_xbar_demux_src0_endofpacket;                                                                         // cmd_xbar_demux:src0_endofpacket -> cmd_xbar_mux:sink0_endofpacket
	wire         cmd_xbar_demux_src0_valid;                                                                               // cmd_xbar_demux:src0_valid -> cmd_xbar_mux:sink0_valid
	wire         cmd_xbar_demux_src0_startofpacket;                                                                       // cmd_xbar_demux:src0_startofpacket -> cmd_xbar_mux:sink0_startofpacket
	wire  [85:0] cmd_xbar_demux_src0_data;                                                                                // cmd_xbar_demux:src0_data -> cmd_xbar_mux:sink0_data
	wire  [11:0] cmd_xbar_demux_src0_channel;                                                                             // cmd_xbar_demux:src0_channel -> cmd_xbar_mux:sink0_channel
	wire         cmd_xbar_demux_src0_ready;                                                                               // cmd_xbar_mux:sink0_ready -> cmd_xbar_demux:src0_ready
	wire         cmd_xbar_demux_src1_endofpacket;                                                                         // cmd_xbar_demux:src1_endofpacket -> cmd_xbar_mux_001:sink0_endofpacket
	wire         cmd_xbar_demux_src1_valid;                                                                               // cmd_xbar_demux:src1_valid -> cmd_xbar_mux_001:sink0_valid
	wire         cmd_xbar_demux_src1_startofpacket;                                                                       // cmd_xbar_demux:src1_startofpacket -> cmd_xbar_mux_001:sink0_startofpacket
	wire  [85:0] cmd_xbar_demux_src1_data;                                                                                // cmd_xbar_demux:src1_data -> cmd_xbar_mux_001:sink0_data
	wire  [11:0] cmd_xbar_demux_src1_channel;                                                                             // cmd_xbar_demux:src1_channel -> cmd_xbar_mux_001:sink0_channel
	wire         cmd_xbar_demux_src1_ready;                                                                               // cmd_xbar_mux_001:sink0_ready -> cmd_xbar_demux:src1_ready
	wire         cmd_xbar_demux_src2_endofpacket;                                                                         // cmd_xbar_demux:src2_endofpacket -> cmd_xbar_mux_002:sink0_endofpacket
	wire         cmd_xbar_demux_src2_valid;                                                                               // cmd_xbar_demux:src2_valid -> cmd_xbar_mux_002:sink0_valid
	wire         cmd_xbar_demux_src2_startofpacket;                                                                       // cmd_xbar_demux:src2_startofpacket -> cmd_xbar_mux_002:sink0_startofpacket
	wire  [85:0] cmd_xbar_demux_src2_data;                                                                                // cmd_xbar_demux:src2_data -> cmd_xbar_mux_002:sink0_data
	wire  [11:0] cmd_xbar_demux_src2_channel;                                                                             // cmd_xbar_demux:src2_channel -> cmd_xbar_mux_002:sink0_channel
	wire         cmd_xbar_demux_src2_ready;                                                                               // cmd_xbar_mux_002:sink0_ready -> cmd_xbar_demux:src2_ready
	wire         cmd_xbar_demux_src3_endofpacket;                                                                         // cmd_xbar_demux:src3_endofpacket -> cmd_xbar_mux_003:sink0_endofpacket
	wire         cmd_xbar_demux_src3_valid;                                                                               // cmd_xbar_demux:src3_valid -> cmd_xbar_mux_003:sink0_valid
	wire         cmd_xbar_demux_src3_startofpacket;                                                                       // cmd_xbar_demux:src3_startofpacket -> cmd_xbar_mux_003:sink0_startofpacket
	wire  [85:0] cmd_xbar_demux_src3_data;                                                                                // cmd_xbar_demux:src3_data -> cmd_xbar_mux_003:sink0_data
	wire  [11:0] cmd_xbar_demux_src3_channel;                                                                             // cmd_xbar_demux:src3_channel -> cmd_xbar_mux_003:sink0_channel
	wire         cmd_xbar_demux_src3_ready;                                                                               // cmd_xbar_mux_003:sink0_ready -> cmd_xbar_demux:src3_ready
	wire         rsp_xbar_demux_src0_endofpacket;                                                                         // rsp_xbar_demux:src0_endofpacket -> rsp_xbar_mux:sink0_endofpacket
	wire         rsp_xbar_demux_src0_valid;                                                                               // rsp_xbar_demux:src0_valid -> rsp_xbar_mux:sink0_valid
	wire         rsp_xbar_demux_src0_startofpacket;                                                                       // rsp_xbar_demux:src0_startofpacket -> rsp_xbar_mux:sink0_startofpacket
	wire  [85:0] rsp_xbar_demux_src0_data;                                                                                // rsp_xbar_demux:src0_data -> rsp_xbar_mux:sink0_data
	wire  [11:0] rsp_xbar_demux_src0_channel;                                                                             // rsp_xbar_demux:src0_channel -> rsp_xbar_mux:sink0_channel
	wire         rsp_xbar_demux_src0_ready;                                                                               // rsp_xbar_mux:sink0_ready -> rsp_xbar_demux:src0_ready
	wire         rsp_xbar_demux_001_src0_endofpacket;                                                                     // rsp_xbar_demux_001:src0_endofpacket -> rsp_xbar_mux:sink1_endofpacket
	wire         rsp_xbar_demux_001_src0_valid;                                                                           // rsp_xbar_demux_001:src0_valid -> rsp_xbar_mux:sink1_valid
	wire         rsp_xbar_demux_001_src0_startofpacket;                                                                   // rsp_xbar_demux_001:src0_startofpacket -> rsp_xbar_mux:sink1_startofpacket
	wire  [85:0] rsp_xbar_demux_001_src0_data;                                                                            // rsp_xbar_demux_001:src0_data -> rsp_xbar_mux:sink1_data
	wire  [11:0] rsp_xbar_demux_001_src0_channel;                                                                         // rsp_xbar_demux_001:src0_channel -> rsp_xbar_mux:sink1_channel
	wire         rsp_xbar_demux_001_src0_ready;                                                                           // rsp_xbar_mux:sink1_ready -> rsp_xbar_demux_001:src0_ready
	wire         rsp_xbar_demux_002_src0_endofpacket;                                                                     // rsp_xbar_demux_002:src0_endofpacket -> rsp_xbar_mux:sink2_endofpacket
	wire         rsp_xbar_demux_002_src0_valid;                                                                           // rsp_xbar_demux_002:src0_valid -> rsp_xbar_mux:sink2_valid
	wire         rsp_xbar_demux_002_src0_startofpacket;                                                                   // rsp_xbar_demux_002:src0_startofpacket -> rsp_xbar_mux:sink2_startofpacket
	wire  [85:0] rsp_xbar_demux_002_src0_data;                                                                            // rsp_xbar_demux_002:src0_data -> rsp_xbar_mux:sink2_data
	wire  [11:0] rsp_xbar_demux_002_src0_channel;                                                                         // rsp_xbar_demux_002:src0_channel -> rsp_xbar_mux:sink2_channel
	wire         rsp_xbar_demux_002_src0_ready;                                                                           // rsp_xbar_mux:sink2_ready -> rsp_xbar_demux_002:src0_ready
	wire         rsp_xbar_demux_003_src0_endofpacket;                                                                     // rsp_xbar_demux_003:src0_endofpacket -> rsp_xbar_mux:sink3_endofpacket
	wire         rsp_xbar_demux_003_src0_valid;                                                                           // rsp_xbar_demux_003:src0_valid -> rsp_xbar_mux:sink3_valid
	wire         rsp_xbar_demux_003_src0_startofpacket;                                                                   // rsp_xbar_demux_003:src0_startofpacket -> rsp_xbar_mux:sink3_startofpacket
	wire  [85:0] rsp_xbar_demux_003_src0_data;                                                                            // rsp_xbar_demux_003:src0_data -> rsp_xbar_mux:sink3_data
	wire  [11:0] rsp_xbar_demux_003_src0_channel;                                                                         // rsp_xbar_demux_003:src0_channel -> rsp_xbar_mux:sink3_channel
	wire         rsp_xbar_demux_003_src0_ready;                                                                           // rsp_xbar_mux:sink3_ready -> rsp_xbar_demux_003:src0_ready
	wire         cmd_xbar_demux_src4_endofpacket;                                                                         // cmd_xbar_demux:src4_endofpacket -> crosser:in_endofpacket
	wire         cmd_xbar_demux_src4_valid;                                                                               // cmd_xbar_demux:src4_valid -> crosser:in_valid
	wire         cmd_xbar_demux_src4_startofpacket;                                                                       // cmd_xbar_demux:src4_startofpacket -> crosser:in_startofpacket
	wire  [85:0] cmd_xbar_demux_src4_data;                                                                                // cmd_xbar_demux:src4_data -> crosser:in_data
	wire  [11:0] cmd_xbar_demux_src4_channel;                                                                             // cmd_xbar_demux:src4_channel -> crosser:in_channel
	wire         cmd_xbar_demux_src4_ready;                                                                               // crosser:in_ready -> cmd_xbar_demux:src4_ready
	wire         crosser_out_endofpacket;                                                                                 // crosser:out_endofpacket -> cmd_xbar_mux_004:sink0_endofpacket
	wire         crosser_out_valid;                                                                                       // crosser:out_valid -> cmd_xbar_mux_004:sink0_valid
	wire         crosser_out_startofpacket;                                                                               // crosser:out_startofpacket -> cmd_xbar_mux_004:sink0_startofpacket
	wire  [85:0] crosser_out_data;                                                                                        // crosser:out_data -> cmd_xbar_mux_004:sink0_data
	wire  [11:0] crosser_out_channel;                                                                                     // crosser:out_channel -> cmd_xbar_mux_004:sink0_channel
	wire         crosser_out_ready;                                                                                       // cmd_xbar_mux_004:sink0_ready -> crosser:out_ready
	wire         cmd_xbar_demux_src5_endofpacket;                                                                         // cmd_xbar_demux:src5_endofpacket -> crosser_001:in_endofpacket
	wire         cmd_xbar_demux_src5_valid;                                                                               // cmd_xbar_demux:src5_valid -> crosser_001:in_valid
	wire         cmd_xbar_demux_src5_startofpacket;                                                                       // cmd_xbar_demux:src5_startofpacket -> crosser_001:in_startofpacket
	wire  [85:0] cmd_xbar_demux_src5_data;                                                                                // cmd_xbar_demux:src5_data -> crosser_001:in_data
	wire  [11:0] cmd_xbar_demux_src5_channel;                                                                             // cmd_xbar_demux:src5_channel -> crosser_001:in_channel
	wire         cmd_xbar_demux_src5_ready;                                                                               // crosser_001:in_ready -> cmd_xbar_demux:src5_ready
	wire         crosser_001_out_endofpacket;                                                                             // crosser_001:out_endofpacket -> cmd_xbar_mux_005:sink0_endofpacket
	wire         crosser_001_out_valid;                                                                                   // crosser_001:out_valid -> cmd_xbar_mux_005:sink0_valid
	wire         crosser_001_out_startofpacket;                                                                           // crosser_001:out_startofpacket -> cmd_xbar_mux_005:sink0_startofpacket
	wire  [85:0] crosser_001_out_data;                                                                                    // crosser_001:out_data -> cmd_xbar_mux_005:sink0_data
	wire  [11:0] crosser_001_out_channel;                                                                                 // crosser_001:out_channel -> cmd_xbar_mux_005:sink0_channel
	wire         crosser_001_out_ready;                                                                                   // cmd_xbar_mux_005:sink0_ready -> crosser_001:out_ready
	wire         cmd_xbar_demux_src6_endofpacket;                                                                         // cmd_xbar_demux:src6_endofpacket -> crosser_002:in_endofpacket
	wire         cmd_xbar_demux_src6_valid;                                                                               // cmd_xbar_demux:src6_valid -> crosser_002:in_valid
	wire         cmd_xbar_demux_src6_startofpacket;                                                                       // cmd_xbar_demux:src6_startofpacket -> crosser_002:in_startofpacket
	wire  [85:0] cmd_xbar_demux_src6_data;                                                                                // cmd_xbar_demux:src6_data -> crosser_002:in_data
	wire  [11:0] cmd_xbar_demux_src6_channel;                                                                             // cmd_xbar_demux:src6_channel -> crosser_002:in_channel
	wire         cmd_xbar_demux_src6_ready;                                                                               // crosser_002:in_ready -> cmd_xbar_demux:src6_ready
	wire         crosser_002_out_endofpacket;                                                                             // crosser_002:out_endofpacket -> cmd_xbar_mux_006:sink0_endofpacket
	wire         crosser_002_out_valid;                                                                                   // crosser_002:out_valid -> cmd_xbar_mux_006:sink0_valid
	wire         crosser_002_out_startofpacket;                                                                           // crosser_002:out_startofpacket -> cmd_xbar_mux_006:sink0_startofpacket
	wire  [85:0] crosser_002_out_data;                                                                                    // crosser_002:out_data -> cmd_xbar_mux_006:sink0_data
	wire  [11:0] crosser_002_out_channel;                                                                                 // crosser_002:out_channel -> cmd_xbar_mux_006:sink0_channel
	wire         crosser_002_out_ready;                                                                                   // cmd_xbar_mux_006:sink0_ready -> crosser_002:out_ready
	wire         cmd_xbar_demux_src7_endofpacket;                                                                         // cmd_xbar_demux:src7_endofpacket -> crosser_003:in_endofpacket
	wire         cmd_xbar_demux_src7_valid;                                                                               // cmd_xbar_demux:src7_valid -> crosser_003:in_valid
	wire         cmd_xbar_demux_src7_startofpacket;                                                                       // cmd_xbar_demux:src7_startofpacket -> crosser_003:in_startofpacket
	wire  [85:0] cmd_xbar_demux_src7_data;                                                                                // cmd_xbar_demux:src7_data -> crosser_003:in_data
	wire  [11:0] cmd_xbar_demux_src7_channel;                                                                             // cmd_xbar_demux:src7_channel -> crosser_003:in_channel
	wire         cmd_xbar_demux_src7_ready;                                                                               // crosser_003:in_ready -> cmd_xbar_demux:src7_ready
	wire         crosser_003_out_endofpacket;                                                                             // crosser_003:out_endofpacket -> cmd_xbar_mux_007:sink0_endofpacket
	wire         crosser_003_out_valid;                                                                                   // crosser_003:out_valid -> cmd_xbar_mux_007:sink0_valid
	wire         crosser_003_out_startofpacket;                                                                           // crosser_003:out_startofpacket -> cmd_xbar_mux_007:sink0_startofpacket
	wire  [85:0] crosser_003_out_data;                                                                                    // crosser_003:out_data -> cmd_xbar_mux_007:sink0_data
	wire  [11:0] crosser_003_out_channel;                                                                                 // crosser_003:out_channel -> cmd_xbar_mux_007:sink0_channel
	wire         crosser_003_out_ready;                                                                                   // cmd_xbar_mux_007:sink0_ready -> crosser_003:out_ready
	wire         cmd_xbar_demux_src8_endofpacket;                                                                         // cmd_xbar_demux:src8_endofpacket -> crosser_004:in_endofpacket
	wire         cmd_xbar_demux_src8_valid;                                                                               // cmd_xbar_demux:src8_valid -> crosser_004:in_valid
	wire         cmd_xbar_demux_src8_startofpacket;                                                                       // cmd_xbar_demux:src8_startofpacket -> crosser_004:in_startofpacket
	wire  [85:0] cmd_xbar_demux_src8_data;                                                                                // cmd_xbar_demux:src8_data -> crosser_004:in_data
	wire  [11:0] cmd_xbar_demux_src8_channel;                                                                             // cmd_xbar_demux:src8_channel -> crosser_004:in_channel
	wire         cmd_xbar_demux_src8_ready;                                                                               // crosser_004:in_ready -> cmd_xbar_demux:src8_ready
	wire         crosser_004_out_endofpacket;                                                                             // crosser_004:out_endofpacket -> cmd_xbar_mux_008:sink0_endofpacket
	wire         crosser_004_out_valid;                                                                                   // crosser_004:out_valid -> cmd_xbar_mux_008:sink0_valid
	wire         crosser_004_out_startofpacket;                                                                           // crosser_004:out_startofpacket -> cmd_xbar_mux_008:sink0_startofpacket
	wire  [85:0] crosser_004_out_data;                                                                                    // crosser_004:out_data -> cmd_xbar_mux_008:sink0_data
	wire  [11:0] crosser_004_out_channel;                                                                                 // crosser_004:out_channel -> cmd_xbar_mux_008:sink0_channel
	wire         crosser_004_out_ready;                                                                                   // cmd_xbar_mux_008:sink0_ready -> crosser_004:out_ready
	wire         cmd_xbar_demux_src9_endofpacket;                                                                         // cmd_xbar_demux:src9_endofpacket -> crosser_005:in_endofpacket
	wire         cmd_xbar_demux_src9_valid;                                                                               // cmd_xbar_demux:src9_valid -> crosser_005:in_valid
	wire         cmd_xbar_demux_src9_startofpacket;                                                                       // cmd_xbar_demux:src9_startofpacket -> crosser_005:in_startofpacket
	wire  [85:0] cmd_xbar_demux_src9_data;                                                                                // cmd_xbar_demux:src9_data -> crosser_005:in_data
	wire  [11:0] cmd_xbar_demux_src9_channel;                                                                             // cmd_xbar_demux:src9_channel -> crosser_005:in_channel
	wire         cmd_xbar_demux_src9_ready;                                                                               // crosser_005:in_ready -> cmd_xbar_demux:src9_ready
	wire         crosser_005_out_endofpacket;                                                                             // crosser_005:out_endofpacket -> cmd_xbar_mux_009:sink0_endofpacket
	wire         crosser_005_out_valid;                                                                                   // crosser_005:out_valid -> cmd_xbar_mux_009:sink0_valid
	wire         crosser_005_out_startofpacket;                                                                           // crosser_005:out_startofpacket -> cmd_xbar_mux_009:sink0_startofpacket
	wire  [85:0] crosser_005_out_data;                                                                                    // crosser_005:out_data -> cmd_xbar_mux_009:sink0_data
	wire  [11:0] crosser_005_out_channel;                                                                                 // crosser_005:out_channel -> cmd_xbar_mux_009:sink0_channel
	wire         crosser_005_out_ready;                                                                                   // cmd_xbar_mux_009:sink0_ready -> crosser_005:out_ready
	wire         cmd_xbar_demux_src10_endofpacket;                                                                        // cmd_xbar_demux:src10_endofpacket -> crosser_006:in_endofpacket
	wire         cmd_xbar_demux_src10_valid;                                                                              // cmd_xbar_demux:src10_valid -> crosser_006:in_valid
	wire         cmd_xbar_demux_src10_startofpacket;                                                                      // cmd_xbar_demux:src10_startofpacket -> crosser_006:in_startofpacket
	wire  [85:0] cmd_xbar_demux_src10_data;                                                                               // cmd_xbar_demux:src10_data -> crosser_006:in_data
	wire  [11:0] cmd_xbar_demux_src10_channel;                                                                            // cmd_xbar_demux:src10_channel -> crosser_006:in_channel
	wire         cmd_xbar_demux_src10_ready;                                                                              // crosser_006:in_ready -> cmd_xbar_demux:src10_ready
	wire         crosser_006_out_endofpacket;                                                                             // crosser_006:out_endofpacket -> cmd_xbar_mux_010:sink0_endofpacket
	wire         crosser_006_out_valid;                                                                                   // crosser_006:out_valid -> cmd_xbar_mux_010:sink0_valid
	wire         crosser_006_out_startofpacket;                                                                           // crosser_006:out_startofpacket -> cmd_xbar_mux_010:sink0_startofpacket
	wire  [85:0] crosser_006_out_data;                                                                                    // crosser_006:out_data -> cmd_xbar_mux_010:sink0_data
	wire  [11:0] crosser_006_out_channel;                                                                                 // crosser_006:out_channel -> cmd_xbar_mux_010:sink0_channel
	wire         crosser_006_out_ready;                                                                                   // cmd_xbar_mux_010:sink0_ready -> crosser_006:out_ready
	wire         cmd_xbar_demux_src11_endofpacket;                                                                        // cmd_xbar_demux:src11_endofpacket -> crosser_007:in_endofpacket
	wire         cmd_xbar_demux_src11_valid;                                                                              // cmd_xbar_demux:src11_valid -> crosser_007:in_valid
	wire         cmd_xbar_demux_src11_startofpacket;                                                                      // cmd_xbar_demux:src11_startofpacket -> crosser_007:in_startofpacket
	wire  [85:0] cmd_xbar_demux_src11_data;                                                                               // cmd_xbar_demux:src11_data -> crosser_007:in_data
	wire  [11:0] cmd_xbar_demux_src11_channel;                                                                            // cmd_xbar_demux:src11_channel -> crosser_007:in_channel
	wire         cmd_xbar_demux_src11_ready;                                                                              // crosser_007:in_ready -> cmd_xbar_demux:src11_ready
	wire         crosser_007_out_endofpacket;                                                                             // crosser_007:out_endofpacket -> cmd_xbar_mux_011:sink0_endofpacket
	wire         crosser_007_out_valid;                                                                                   // crosser_007:out_valid -> cmd_xbar_mux_011:sink0_valid
	wire         crosser_007_out_startofpacket;                                                                           // crosser_007:out_startofpacket -> cmd_xbar_mux_011:sink0_startofpacket
	wire  [85:0] crosser_007_out_data;                                                                                    // crosser_007:out_data -> cmd_xbar_mux_011:sink0_data
	wire  [11:0] crosser_007_out_channel;                                                                                 // crosser_007:out_channel -> cmd_xbar_mux_011:sink0_channel
	wire         crosser_007_out_ready;                                                                                   // cmd_xbar_mux_011:sink0_ready -> crosser_007:out_ready
	wire         rsp_xbar_demux_004_src0_endofpacket;                                                                     // rsp_xbar_demux_004:src0_endofpacket -> crosser_008:in_endofpacket
	wire         rsp_xbar_demux_004_src0_valid;                                                                           // rsp_xbar_demux_004:src0_valid -> crosser_008:in_valid
	wire         rsp_xbar_demux_004_src0_startofpacket;                                                                   // rsp_xbar_demux_004:src0_startofpacket -> crosser_008:in_startofpacket
	wire  [85:0] rsp_xbar_demux_004_src0_data;                                                                            // rsp_xbar_demux_004:src0_data -> crosser_008:in_data
	wire  [11:0] rsp_xbar_demux_004_src0_channel;                                                                         // rsp_xbar_demux_004:src0_channel -> crosser_008:in_channel
	wire         rsp_xbar_demux_004_src0_ready;                                                                           // crosser_008:in_ready -> rsp_xbar_demux_004:src0_ready
	wire         crosser_008_out_endofpacket;                                                                             // crosser_008:out_endofpacket -> rsp_xbar_mux:sink4_endofpacket
	wire         crosser_008_out_valid;                                                                                   // crosser_008:out_valid -> rsp_xbar_mux:sink4_valid
	wire         crosser_008_out_startofpacket;                                                                           // crosser_008:out_startofpacket -> rsp_xbar_mux:sink4_startofpacket
	wire  [85:0] crosser_008_out_data;                                                                                    // crosser_008:out_data -> rsp_xbar_mux:sink4_data
	wire  [11:0] crosser_008_out_channel;                                                                                 // crosser_008:out_channel -> rsp_xbar_mux:sink4_channel
	wire         crosser_008_out_ready;                                                                                   // rsp_xbar_mux:sink4_ready -> crosser_008:out_ready
	wire         rsp_xbar_demux_005_src0_endofpacket;                                                                     // rsp_xbar_demux_005:src0_endofpacket -> crosser_009:in_endofpacket
	wire         rsp_xbar_demux_005_src0_valid;                                                                           // rsp_xbar_demux_005:src0_valid -> crosser_009:in_valid
	wire         rsp_xbar_demux_005_src0_startofpacket;                                                                   // rsp_xbar_demux_005:src0_startofpacket -> crosser_009:in_startofpacket
	wire  [85:0] rsp_xbar_demux_005_src0_data;                                                                            // rsp_xbar_demux_005:src0_data -> crosser_009:in_data
	wire  [11:0] rsp_xbar_demux_005_src0_channel;                                                                         // rsp_xbar_demux_005:src0_channel -> crosser_009:in_channel
	wire         rsp_xbar_demux_005_src0_ready;                                                                           // crosser_009:in_ready -> rsp_xbar_demux_005:src0_ready
	wire         crosser_009_out_endofpacket;                                                                             // crosser_009:out_endofpacket -> rsp_xbar_mux:sink5_endofpacket
	wire         crosser_009_out_valid;                                                                                   // crosser_009:out_valid -> rsp_xbar_mux:sink5_valid
	wire         crosser_009_out_startofpacket;                                                                           // crosser_009:out_startofpacket -> rsp_xbar_mux:sink5_startofpacket
	wire  [85:0] crosser_009_out_data;                                                                                    // crosser_009:out_data -> rsp_xbar_mux:sink5_data
	wire  [11:0] crosser_009_out_channel;                                                                                 // crosser_009:out_channel -> rsp_xbar_mux:sink5_channel
	wire         crosser_009_out_ready;                                                                                   // rsp_xbar_mux:sink5_ready -> crosser_009:out_ready
	wire         rsp_xbar_demux_006_src0_endofpacket;                                                                     // rsp_xbar_demux_006:src0_endofpacket -> crosser_010:in_endofpacket
	wire         rsp_xbar_demux_006_src0_valid;                                                                           // rsp_xbar_demux_006:src0_valid -> crosser_010:in_valid
	wire         rsp_xbar_demux_006_src0_startofpacket;                                                                   // rsp_xbar_demux_006:src0_startofpacket -> crosser_010:in_startofpacket
	wire  [85:0] rsp_xbar_demux_006_src0_data;                                                                            // rsp_xbar_demux_006:src0_data -> crosser_010:in_data
	wire  [11:0] rsp_xbar_demux_006_src0_channel;                                                                         // rsp_xbar_demux_006:src0_channel -> crosser_010:in_channel
	wire         rsp_xbar_demux_006_src0_ready;                                                                           // crosser_010:in_ready -> rsp_xbar_demux_006:src0_ready
	wire         crosser_010_out_endofpacket;                                                                             // crosser_010:out_endofpacket -> rsp_xbar_mux:sink6_endofpacket
	wire         crosser_010_out_valid;                                                                                   // crosser_010:out_valid -> rsp_xbar_mux:sink6_valid
	wire         crosser_010_out_startofpacket;                                                                           // crosser_010:out_startofpacket -> rsp_xbar_mux:sink6_startofpacket
	wire  [85:0] crosser_010_out_data;                                                                                    // crosser_010:out_data -> rsp_xbar_mux:sink6_data
	wire  [11:0] crosser_010_out_channel;                                                                                 // crosser_010:out_channel -> rsp_xbar_mux:sink6_channel
	wire         crosser_010_out_ready;                                                                                   // rsp_xbar_mux:sink6_ready -> crosser_010:out_ready
	wire         rsp_xbar_demux_007_src0_endofpacket;                                                                     // rsp_xbar_demux_007:src0_endofpacket -> crosser_011:in_endofpacket
	wire         rsp_xbar_demux_007_src0_valid;                                                                           // rsp_xbar_demux_007:src0_valid -> crosser_011:in_valid
	wire         rsp_xbar_demux_007_src0_startofpacket;                                                                   // rsp_xbar_demux_007:src0_startofpacket -> crosser_011:in_startofpacket
	wire  [85:0] rsp_xbar_demux_007_src0_data;                                                                            // rsp_xbar_demux_007:src0_data -> crosser_011:in_data
	wire  [11:0] rsp_xbar_demux_007_src0_channel;                                                                         // rsp_xbar_demux_007:src0_channel -> crosser_011:in_channel
	wire         rsp_xbar_demux_007_src0_ready;                                                                           // crosser_011:in_ready -> rsp_xbar_demux_007:src0_ready
	wire         crosser_011_out_endofpacket;                                                                             // crosser_011:out_endofpacket -> rsp_xbar_mux:sink7_endofpacket
	wire         crosser_011_out_valid;                                                                                   // crosser_011:out_valid -> rsp_xbar_mux:sink7_valid
	wire         crosser_011_out_startofpacket;                                                                           // crosser_011:out_startofpacket -> rsp_xbar_mux:sink7_startofpacket
	wire  [85:0] crosser_011_out_data;                                                                                    // crosser_011:out_data -> rsp_xbar_mux:sink7_data
	wire  [11:0] crosser_011_out_channel;                                                                                 // crosser_011:out_channel -> rsp_xbar_mux:sink7_channel
	wire         crosser_011_out_ready;                                                                                   // rsp_xbar_mux:sink7_ready -> crosser_011:out_ready
	wire         rsp_xbar_demux_008_src0_endofpacket;                                                                     // rsp_xbar_demux_008:src0_endofpacket -> crosser_012:in_endofpacket
	wire         rsp_xbar_demux_008_src0_valid;                                                                           // rsp_xbar_demux_008:src0_valid -> crosser_012:in_valid
	wire         rsp_xbar_demux_008_src0_startofpacket;                                                                   // rsp_xbar_demux_008:src0_startofpacket -> crosser_012:in_startofpacket
	wire  [85:0] rsp_xbar_demux_008_src0_data;                                                                            // rsp_xbar_demux_008:src0_data -> crosser_012:in_data
	wire  [11:0] rsp_xbar_demux_008_src0_channel;                                                                         // rsp_xbar_demux_008:src0_channel -> crosser_012:in_channel
	wire         rsp_xbar_demux_008_src0_ready;                                                                           // crosser_012:in_ready -> rsp_xbar_demux_008:src0_ready
	wire         crosser_012_out_endofpacket;                                                                             // crosser_012:out_endofpacket -> rsp_xbar_mux:sink8_endofpacket
	wire         crosser_012_out_valid;                                                                                   // crosser_012:out_valid -> rsp_xbar_mux:sink8_valid
	wire         crosser_012_out_startofpacket;                                                                           // crosser_012:out_startofpacket -> rsp_xbar_mux:sink8_startofpacket
	wire  [85:0] crosser_012_out_data;                                                                                    // crosser_012:out_data -> rsp_xbar_mux:sink8_data
	wire  [11:0] crosser_012_out_channel;                                                                                 // crosser_012:out_channel -> rsp_xbar_mux:sink8_channel
	wire         crosser_012_out_ready;                                                                                   // rsp_xbar_mux:sink8_ready -> crosser_012:out_ready
	wire         rsp_xbar_demux_009_src0_endofpacket;                                                                     // rsp_xbar_demux_009:src0_endofpacket -> crosser_013:in_endofpacket
	wire         rsp_xbar_demux_009_src0_valid;                                                                           // rsp_xbar_demux_009:src0_valid -> crosser_013:in_valid
	wire         rsp_xbar_demux_009_src0_startofpacket;                                                                   // rsp_xbar_demux_009:src0_startofpacket -> crosser_013:in_startofpacket
	wire  [85:0] rsp_xbar_demux_009_src0_data;                                                                            // rsp_xbar_demux_009:src0_data -> crosser_013:in_data
	wire  [11:0] rsp_xbar_demux_009_src0_channel;                                                                         // rsp_xbar_demux_009:src0_channel -> crosser_013:in_channel
	wire         rsp_xbar_demux_009_src0_ready;                                                                           // crosser_013:in_ready -> rsp_xbar_demux_009:src0_ready
	wire         crosser_013_out_endofpacket;                                                                             // crosser_013:out_endofpacket -> rsp_xbar_mux:sink9_endofpacket
	wire         crosser_013_out_valid;                                                                                   // crosser_013:out_valid -> rsp_xbar_mux:sink9_valid
	wire         crosser_013_out_startofpacket;                                                                           // crosser_013:out_startofpacket -> rsp_xbar_mux:sink9_startofpacket
	wire  [85:0] crosser_013_out_data;                                                                                    // crosser_013:out_data -> rsp_xbar_mux:sink9_data
	wire  [11:0] crosser_013_out_channel;                                                                                 // crosser_013:out_channel -> rsp_xbar_mux:sink9_channel
	wire         crosser_013_out_ready;                                                                                   // rsp_xbar_mux:sink9_ready -> crosser_013:out_ready
	wire         rsp_xbar_demux_010_src0_endofpacket;                                                                     // rsp_xbar_demux_010:src0_endofpacket -> crosser_014:in_endofpacket
	wire         rsp_xbar_demux_010_src0_valid;                                                                           // rsp_xbar_demux_010:src0_valid -> crosser_014:in_valid
	wire         rsp_xbar_demux_010_src0_startofpacket;                                                                   // rsp_xbar_demux_010:src0_startofpacket -> crosser_014:in_startofpacket
	wire  [85:0] rsp_xbar_demux_010_src0_data;                                                                            // rsp_xbar_demux_010:src0_data -> crosser_014:in_data
	wire  [11:0] rsp_xbar_demux_010_src0_channel;                                                                         // rsp_xbar_demux_010:src0_channel -> crosser_014:in_channel
	wire         rsp_xbar_demux_010_src0_ready;                                                                           // crosser_014:in_ready -> rsp_xbar_demux_010:src0_ready
	wire         crosser_014_out_endofpacket;                                                                             // crosser_014:out_endofpacket -> rsp_xbar_mux:sink10_endofpacket
	wire         crosser_014_out_valid;                                                                                   // crosser_014:out_valid -> rsp_xbar_mux:sink10_valid
	wire         crosser_014_out_startofpacket;                                                                           // crosser_014:out_startofpacket -> rsp_xbar_mux:sink10_startofpacket
	wire  [85:0] crosser_014_out_data;                                                                                    // crosser_014:out_data -> rsp_xbar_mux:sink10_data
	wire  [11:0] crosser_014_out_channel;                                                                                 // crosser_014:out_channel -> rsp_xbar_mux:sink10_channel
	wire         crosser_014_out_ready;                                                                                   // rsp_xbar_mux:sink10_ready -> crosser_014:out_ready
	wire         rsp_xbar_demux_011_src0_endofpacket;                                                                     // rsp_xbar_demux_011:src0_endofpacket -> crosser_015:in_endofpacket
	wire         rsp_xbar_demux_011_src0_valid;                                                                           // rsp_xbar_demux_011:src0_valid -> crosser_015:in_valid
	wire         rsp_xbar_demux_011_src0_startofpacket;                                                                   // rsp_xbar_demux_011:src0_startofpacket -> crosser_015:in_startofpacket
	wire  [85:0] rsp_xbar_demux_011_src0_data;                                                                            // rsp_xbar_demux_011:src0_data -> crosser_015:in_data
	wire  [11:0] rsp_xbar_demux_011_src0_channel;                                                                         // rsp_xbar_demux_011:src0_channel -> crosser_015:in_channel
	wire         rsp_xbar_demux_011_src0_ready;                                                                           // crosser_015:in_ready -> rsp_xbar_demux_011:src0_ready
	wire         crosser_015_out_endofpacket;                                                                             // crosser_015:out_endofpacket -> rsp_xbar_mux:sink11_endofpacket
	wire         crosser_015_out_valid;                                                                                   // crosser_015:out_valid -> rsp_xbar_mux:sink11_valid
	wire         crosser_015_out_startofpacket;                                                                           // crosser_015:out_startofpacket -> rsp_xbar_mux:sink11_startofpacket
	wire  [85:0] crosser_015_out_data;                                                                                    // crosser_015:out_data -> rsp_xbar_mux:sink11_data
	wire  [11:0] crosser_015_out_channel;                                                                                 // crosser_015:out_channel -> rsp_xbar_mux:sink11_channel
	wire         crosser_015_out_ready;                                                                                   // rsp_xbar_mux:sink11_ready -> crosser_015:out_ready
	wire  [11:0] limiter_cmd_valid_data;                                                                                  // limiter:cmd_src_valid -> cmd_xbar_demux:sink_valid

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (10),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (10),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (1),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (1),
		.USE_READDATAVALID           (1),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) s0_io_clockcrossing_bridge_m0_translator (
		.clk                      (system_pll_outclk1_clk),                                                           //                       clk.clk
		.reset                    (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset),                  //                     reset.reset
		.uav_address              (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount           (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read                 (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write                (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest          (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid        (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable           (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata             (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata            (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock                 (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess          (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address               (s0_io_clockCrossing_bridge_m0_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest           (s0_io_clockCrossing_bridge_m0_waitrequest),                                        //                          .waitrequest
		.av_burstcount            (s0_io_clockCrossing_bridge_m0_burstcount),                                         //                          .burstcount
		.av_byteenable            (s0_io_clockCrossing_bridge_m0_byteenable),                                         //                          .byteenable
		.av_read                  (s0_io_clockCrossing_bridge_m0_read),                                               //                          .read
		.av_readdata              (s0_io_clockCrossing_bridge_m0_readdata),                                           //                          .readdata
		.av_readdatavalid         (s0_io_clockCrossing_bridge_m0_readdatavalid),                                      //                          .readdatavalid
		.av_write                 (s0_io_clockCrossing_bridge_m0_write),                                              //                          .write
		.av_writedata             (s0_io_clockCrossing_bridge_m0_writedata),                                          //                          .writedata
		.av_debugaccess           (s0_io_clockCrossing_bridge_m0_debugaccess),                                        //                          .debugaccess
		.av_beginbursttransfer    (1'b0),                                                                             //               (terminated)
		.av_begintransfer         (1'b0),                                                                             //               (terminated)
		.av_chipselect            (1'b0),                                                                             //               (terminated)
		.av_lock                  (1'b0),                                                                             //               (terminated)
		.uav_clken                (),                                                                                 //               (terminated)
		.av_clken                 (1'b1),                                                                             //               (terminated)
		.uav_response             (2'b00),                                                                            //               (terminated)
		.av_response              (),                                                                                 //               (terminated)
		.uav_writeresponserequest (),                                                                                 //               (terminated)
		.uav_writeresponsevalid   (1'b0),                                                                             //               (terminated)
		.av_writeresponserequest  (1'b0),                                                                             //               (terminated)
		.av_writeresponsevalid    ()                                                                                  //               (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (10),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) timer_cpu_s0_s1_translator (
		.clk                      (system_pll_outclk1_clk),                                                     //                      clk.clk
		.reset                    (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset),            //                    reset.reset
		.uav_address              (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (timer_cpu_s0_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (timer_cpu_s0_s1_write),                                                      //                         .write
		.av_readdata              (timer_cpu_s0_s1_readdata),                                                   //                         .readdata
		.av_writedata             (timer_cpu_s0_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (timer_cpu_s0_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                           //              (terminated)
		.av_begintransfer         (),                                                                           //              (terminated)
		.av_beginbursttransfer    (),                                                                           //              (terminated)
		.av_burstcount            (),                                                                           //              (terminated)
		.av_byteenable            (),                                                                           //              (terminated)
		.av_readdatavalid         (1'b0),                                                                       //              (terminated)
		.av_waitrequest           (1'b0),                                                                       //              (terminated)
		.av_writebyteenable       (),                                                                           //              (terminated)
		.av_lock                  (),                                                                           //              (terminated)
		.av_clken                 (),                                                                           //              (terminated)
		.uav_clken                (1'b0),                                                                       //              (terminated)
		.av_debugaccess           (),                                                                           //              (terminated)
		.av_outputenable          (),                                                                           //              (terminated)
		.uav_response             (),                                                                           //              (terminated)
		.av_response              (2'b00),                                                                      //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                       //              (terminated)
		.uav_writeresponsevalid   (),                                                                           //              (terminated)
		.av_writeresponserequest  (),                                                                           //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (10),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) jtag_uart_cpu_s0_avalon_jtag_slave_translator (
		.clk                      (system_pll_outclk1_clk),                                                                        //                      clk.clk
		.reset                    (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset),                               //                    reset.reset
		.uav_address              (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (jtag_uart_cpu_s0_avalon_jtag_slave_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (jtag_uart_cpu_s0_avalon_jtag_slave_write),                                                      //                         .write
		.av_read                  (jtag_uart_cpu_s0_avalon_jtag_slave_read),                                                       //                         .read
		.av_readdata              (jtag_uart_cpu_s0_avalon_jtag_slave_readdata),                                                   //                         .readdata
		.av_writedata             (jtag_uart_cpu_s0_avalon_jtag_slave_writedata),                                                  //                         .writedata
		.av_waitrequest           (jtag_uart_cpu_s0_avalon_jtag_slave_waitrequest),                                                //                         .waitrequest
		.av_chipselect            (jtag_uart_cpu_s0_avalon_jtag_slave_chipselect),                                                 //                         .chipselect
		.av_begintransfer         (),                                                                                              //              (terminated)
		.av_beginbursttransfer    (),                                                                                              //              (terminated)
		.av_burstcount            (),                                                                                              //              (terminated)
		.av_byteenable            (),                                                                                              //              (terminated)
		.av_readdatavalid         (1'b0),                                                                                          //              (terminated)
		.av_writebyteenable       (),                                                                                              //              (terminated)
		.av_lock                  (),                                                                                              //              (terminated)
		.av_clken                 (),                                                                                              //              (terminated)
		.uav_clken                (1'b0),                                                                                          //              (terminated)
		.av_debugaccess           (),                                                                                              //              (terminated)
		.av_outputenable          (),                                                                                              //              (terminated)
		.uav_response             (),                                                                                              //              (terminated)
		.av_response              (2'b00),                                                                                         //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                                          //              (terminated)
		.uav_writeresponsevalid   (),                                                                                              //              (terminated)
		.av_writeresponserequest  (),                                                                                              //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                                           //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (10),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) pio_alivetest_cpu_s0_s1_translator (
		.clk                      (system_pll_outclk1_clk),                                                             //                      clk.clk
		.reset                    (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset),                    //                    reset.reset
		.uav_address              (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (pio_aliveTest_cpu_s0_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (pio_aliveTest_cpu_s0_s1_write),                                                      //                         .write
		.av_readdata              (pio_aliveTest_cpu_s0_s1_readdata),                                                   //                         .readdata
		.av_writedata             (pio_aliveTest_cpu_s0_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (pio_aliveTest_cpu_s0_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                                   //              (terminated)
		.av_begintransfer         (),                                                                                   //              (terminated)
		.av_beginbursttransfer    (),                                                                                   //              (terminated)
		.av_burstcount            (),                                                                                   //              (terminated)
		.av_byteenable            (),                                                                                   //              (terminated)
		.av_readdatavalid         (1'b0),                                                                               //              (terminated)
		.av_waitrequest           (1'b0),                                                                               //              (terminated)
		.av_writebyteenable       (),                                                                                   //              (terminated)
		.av_lock                  (),                                                                                   //              (terminated)
		.av_clken                 (),                                                                                   //              (terminated)
		.uav_clken                (1'b0),                                                                               //              (terminated)
		.av_debugaccess           (),                                                                                   //              (terminated)
		.av_outputenable          (),                                                                                   //              (terminated)
		.uav_response             (),                                                                                   //              (terminated)
		.av_response              (2'b00),                                                                              //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                               //              (terminated)
		.uav_writeresponsevalid   (),                                                                                   //              (terminated)
		.av_writeresponserequest  (),                                                                                   //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (8),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (10),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) i2c_cpu_s0_mm_slave_translator (
		.clk                      (system_pll_outclk1_clk),                                                         //                      clk.clk
		.reset                    (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset),                //                    reset.reset
		.uav_address              (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (i2c_cpu_s0_mm_slave_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (i2c_cpu_s0_mm_slave_write),                                                      //                         .write
		.av_readdata              (i2c_cpu_s0_mm_slave_readdata),                                                   //                         .readdata
		.av_writedata             (i2c_cpu_s0_mm_slave_writedata),                                                  //                         .writedata
		.av_waitrequest           (i2c_cpu_s0_mm_slave_waitrequest),                                                //                         .waitrequest
		.av_chipselect            (i2c_cpu_s0_mm_slave_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                               //              (terminated)
		.av_begintransfer         (),                                                                               //              (terminated)
		.av_beginbursttransfer    (),                                                                               //              (terminated)
		.av_burstcount            (),                                                                               //              (terminated)
		.av_byteenable            (),                                                                               //              (terminated)
		.av_readdatavalid         (1'b0),                                                                           //              (terminated)
		.av_writebyteenable       (),                                                                               //              (terminated)
		.av_lock                  (),                                                                               //              (terminated)
		.av_clken                 (),                                                                               //              (terminated)
		.uav_clken                (1'b0),                                                                           //              (terminated)
		.av_debugaccess           (),                                                                               //              (terminated)
		.av_outputenable          (),                                                                               //              (terminated)
		.uav_response             (),                                                                               //              (terminated)
		.av_response              (2'b00),                                                                          //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                           //              (terminated)
		.uav_writeresponsevalid   (),                                                                               //              (terminated)
		.av_writeresponserequest  (),                                                                               //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                            //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (10),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) pwm_cpu_s0_1_s0_translator (
		.clk                      (pwm_pll_outclk0_clk),                                                        //                      clk.clk
		.reset                    (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                       //                    reset.reset
		.uav_address              (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_write                 (pwm_cpu_s0_1_s0_write),                                                      //      avalon_anti_slave_0.write
		.av_writedata             (pwm_cpu_s0_1_s0_writedata),                                                  //                         .writedata
		.av_address               (),                                                                           //              (terminated)
		.av_read                  (),                                                                           //              (terminated)
		.av_readdata              (32'b11011110101011011101111010101101),                                       //              (terminated)
		.av_begintransfer         (),                                                                           //              (terminated)
		.av_beginbursttransfer    (),                                                                           //              (terminated)
		.av_burstcount            (),                                                                           //              (terminated)
		.av_byteenable            (),                                                                           //              (terminated)
		.av_readdatavalid         (1'b0),                                                                       //              (terminated)
		.av_waitrequest           (1'b0),                                                                       //              (terminated)
		.av_writebyteenable       (),                                                                           //              (terminated)
		.av_lock                  (),                                                                           //              (terminated)
		.av_chipselect            (),                                                                           //              (terminated)
		.av_clken                 (),                                                                           //              (terminated)
		.uav_clken                (1'b0),                                                                       //              (terminated)
		.av_debugaccess           (),                                                                           //              (terminated)
		.av_outputenable          (),                                                                           //              (terminated)
		.uav_response             (),                                                                           //              (terminated)
		.av_response              (2'b00),                                                                      //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                       //              (terminated)
		.uav_writeresponsevalid   (),                                                                           //              (terminated)
		.av_writeresponserequest  (),                                                                           //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (10),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) pwm_cpu_s0_2_s0_translator (
		.clk                      (pwm_pll_outclk0_clk),                                                        //                      clk.clk
		.reset                    (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                       //                    reset.reset
		.uav_address              (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_write                 (pwm_cpu_s0_2_s0_write),                                                      //      avalon_anti_slave_0.write
		.av_writedata             (pwm_cpu_s0_2_s0_writedata),                                                  //                         .writedata
		.av_address               (),                                                                           //              (terminated)
		.av_read                  (),                                                                           //              (terminated)
		.av_readdata              (32'b11011110101011011101111010101101),                                       //              (terminated)
		.av_begintransfer         (),                                                                           //              (terminated)
		.av_beginbursttransfer    (),                                                                           //              (terminated)
		.av_burstcount            (),                                                                           //              (terminated)
		.av_byteenable            (),                                                                           //              (terminated)
		.av_readdatavalid         (1'b0),                                                                       //              (terminated)
		.av_waitrequest           (1'b0),                                                                       //              (terminated)
		.av_writebyteenable       (),                                                                           //              (terminated)
		.av_lock                  (),                                                                           //              (terminated)
		.av_chipselect            (),                                                                           //              (terminated)
		.av_clken                 (),                                                                           //              (terminated)
		.uav_clken                (1'b0),                                                                       //              (terminated)
		.av_debugaccess           (),                                                                           //              (terminated)
		.av_outputenable          (),                                                                           //              (terminated)
		.uav_response             (),                                                                           //              (terminated)
		.av_response              (2'b00),                                                                      //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                       //              (terminated)
		.uav_writeresponsevalid   (),                                                                           //              (terminated)
		.av_writeresponserequest  (),                                                                           //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (10),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) pwm_cpu_s0_3_s0_translator (
		.clk                      (pwm_pll_outclk0_clk),                                                        //                      clk.clk
		.reset                    (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                       //                    reset.reset
		.uav_address              (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_write                 (pwm_cpu_s0_3_s0_write),                                                      //      avalon_anti_slave_0.write
		.av_writedata             (pwm_cpu_s0_3_s0_writedata),                                                  //                         .writedata
		.av_address               (),                                                                           //              (terminated)
		.av_read                  (),                                                                           //              (terminated)
		.av_readdata              (32'b11011110101011011101111010101101),                                       //              (terminated)
		.av_begintransfer         (),                                                                           //              (terminated)
		.av_beginbursttransfer    (),                                                                           //              (terminated)
		.av_burstcount            (),                                                                           //              (terminated)
		.av_byteenable            (),                                                                           //              (terminated)
		.av_readdatavalid         (1'b0),                                                                       //              (terminated)
		.av_waitrequest           (1'b0),                                                                       //              (terminated)
		.av_writebyteenable       (),                                                                           //              (terminated)
		.av_lock                  (),                                                                           //              (terminated)
		.av_chipselect            (),                                                                           //              (terminated)
		.av_clken                 (),                                                                           //              (terminated)
		.uav_clken                (1'b0),                                                                       //              (terminated)
		.av_debugaccess           (),                                                                           //              (terminated)
		.av_outputenable          (),                                                                           //              (terminated)
		.uav_response             (),                                                                           //              (terminated)
		.av_response              (2'b00),                                                                      //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                       //              (terminated)
		.uav_writeresponsevalid   (),                                                                           //              (terminated)
		.av_writeresponserequest  (),                                                                           //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (10),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) pwm_cpu_s0_4_s0_translator (
		.clk                      (pwm_pll_outclk0_clk),                                                        //                      clk.clk
		.reset                    (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                       //                    reset.reset
		.uav_address              (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_write                 (pwm_cpu_s0_4_s0_write),                                                      //      avalon_anti_slave_0.write
		.av_writedata             (pwm_cpu_s0_4_s0_writedata),                                                  //                         .writedata
		.av_address               (),                                                                           //              (terminated)
		.av_read                  (),                                                                           //              (terminated)
		.av_readdata              (32'b11011110101011011101111010101101),                                       //              (terminated)
		.av_begintransfer         (),                                                                           //              (terminated)
		.av_beginbursttransfer    (),                                                                           //              (terminated)
		.av_burstcount            (),                                                                           //              (terminated)
		.av_byteenable            (),                                                                           //              (terminated)
		.av_readdatavalid         (1'b0),                                                                       //              (terminated)
		.av_waitrequest           (1'b0),                                                                       //              (terminated)
		.av_writebyteenable       (),                                                                           //              (terminated)
		.av_lock                  (),                                                                           //              (terminated)
		.av_chipselect            (),                                                                           //              (terminated)
		.av_clken                 (),                                                                           //              (terminated)
		.uav_clken                (1'b0),                                                                       //              (terminated)
		.av_debugaccess           (),                                                                           //              (terminated)
		.av_outputenable          (),                                                                           //              (terminated)
		.uav_response             (),                                                                           //              (terminated)
		.av_response              (2'b00),                                                                      //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                       //              (terminated)
		.uav_writeresponsevalid   (),                                                                           //              (terminated)
		.av_writeresponserequest  (),                                                                           //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (10),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) pwm_cpu_s0_5_s0_translator (
		.clk                      (pwm_pll_outclk0_clk),                                                        //                      clk.clk
		.reset                    (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                       //                    reset.reset
		.uav_address              (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_write                 (pwm_cpu_s0_5_s0_write),                                                      //      avalon_anti_slave_0.write
		.av_writedata             (pwm_cpu_s0_5_s0_writedata),                                                  //                         .writedata
		.av_address               (),                                                                           //              (terminated)
		.av_read                  (),                                                                           //              (terminated)
		.av_readdata              (32'b11011110101011011101111010101101),                                       //              (terminated)
		.av_begintransfer         (),                                                                           //              (terminated)
		.av_beginbursttransfer    (),                                                                           //              (terminated)
		.av_burstcount            (),                                                                           //              (terminated)
		.av_byteenable            (),                                                                           //              (terminated)
		.av_readdatavalid         (1'b0),                                                                       //              (terminated)
		.av_waitrequest           (1'b0),                                                                       //              (terminated)
		.av_writebyteenable       (),                                                                           //              (terminated)
		.av_lock                  (),                                                                           //              (terminated)
		.av_chipselect            (),                                                                           //              (terminated)
		.av_clken                 (),                                                                           //              (terminated)
		.uav_clken                (1'b0),                                                                       //              (terminated)
		.av_debugaccess           (),                                                                           //              (terminated)
		.av_outputenable          (),                                                                           //              (terminated)
		.uav_response             (),                                                                           //              (terminated)
		.av_response              (2'b00),                                                                      //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                       //              (terminated)
		.uav_writeresponsevalid   (),                                                                           //              (terminated)
		.av_writeresponserequest  (),                                                                           //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (10),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) pwm_cpu_s0_6_s0_translator (
		.clk                      (pwm_pll_outclk0_clk),                                                        //                      clk.clk
		.reset                    (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                       //                    reset.reset
		.uav_address              (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_write                 (pwm_cpu_s0_6_s0_write),                                                      //      avalon_anti_slave_0.write
		.av_writedata             (pwm_cpu_s0_6_s0_writedata),                                                  //                         .writedata
		.av_address               (),                                                                           //              (terminated)
		.av_read                  (),                                                                           //              (terminated)
		.av_readdata              (32'b11011110101011011101111010101101),                                       //              (terminated)
		.av_begintransfer         (),                                                                           //              (terminated)
		.av_beginbursttransfer    (),                                                                           //              (terminated)
		.av_burstcount            (),                                                                           //              (terminated)
		.av_byteenable            (),                                                                           //              (terminated)
		.av_readdatavalid         (1'b0),                                                                       //              (terminated)
		.av_waitrequest           (1'b0),                                                                       //              (terminated)
		.av_writebyteenable       (),                                                                           //              (terminated)
		.av_lock                  (),                                                                           //              (terminated)
		.av_chipselect            (),                                                                           //              (terminated)
		.av_clken                 (),                                                                           //              (terminated)
		.uav_clken                (1'b0),                                                                       //              (terminated)
		.av_debugaccess           (),                                                                           //              (terminated)
		.av_outputenable          (),                                                                           //              (terminated)
		.uav_response             (),                                                                           //              (terminated)
		.av_response              (2'b00),                                                                      //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                       //              (terminated)
		.uav_writeresponsevalid   (),                                                                           //              (terminated)
		.av_writeresponserequest  (),                                                                           //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (10),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) pwm_cpu_s0_7_s0_translator (
		.clk                      (pwm_pll_outclk0_clk),                                                        //                      clk.clk
		.reset                    (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                       //                    reset.reset
		.uav_address              (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_write                 (pwm_cpu_s0_7_s0_write),                                                      //      avalon_anti_slave_0.write
		.av_writedata             (pwm_cpu_s0_7_s0_writedata),                                                  //                         .writedata
		.av_address               (),                                                                           //              (terminated)
		.av_read                  (),                                                                           //              (terminated)
		.av_readdata              (32'b11011110101011011101111010101101),                                       //              (terminated)
		.av_begintransfer         (),                                                                           //              (terminated)
		.av_beginbursttransfer    (),                                                                           //              (terminated)
		.av_burstcount            (),                                                                           //              (terminated)
		.av_byteenable            (),                                                                           //              (terminated)
		.av_readdatavalid         (1'b0),                                                                       //              (terminated)
		.av_waitrequest           (1'b0),                                                                       //              (terminated)
		.av_writebyteenable       (),                                                                           //              (terminated)
		.av_lock                  (),                                                                           //              (terminated)
		.av_chipselect            (),                                                                           //              (terminated)
		.av_clken                 (),                                                                           //              (terminated)
		.uav_clken                (1'b0),                                                                       //              (terminated)
		.av_debugaccess           (),                                                                           //              (terminated)
		.av_outputenable          (),                                                                           //              (terminated)
		.uav_response             (),                                                                           //              (terminated)
		.av_response              (2'b00),                                                                      //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                       //              (terminated)
		.uav_writeresponsevalid   (),                                                                           //              (terminated)
		.av_writeresponserequest  (),                                                                           //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                        //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (10),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) pwm_cpu_s0_8_s0_translator (
		.clk                      (pwm_pll_outclk0_clk),                                                        //                      clk.clk
		.reset                    (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                       //                    reset.reset
		.uav_address              (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_write                 (pwm_cpu_s0_8_s0_write),                                                      //      avalon_anti_slave_0.write
		.av_writedata             (pwm_cpu_s0_8_s0_writedata),                                                  //                         .writedata
		.av_address               (),                                                                           //              (terminated)
		.av_read                  (),                                                                           //              (terminated)
		.av_readdata              (32'b11011110101011011101111010101101),                                       //              (terminated)
		.av_begintransfer         (),                                                                           //              (terminated)
		.av_beginbursttransfer    (),                                                                           //              (terminated)
		.av_burstcount            (),                                                                           //              (terminated)
		.av_byteenable            (),                                                                           //              (terminated)
		.av_readdatavalid         (1'b0),                                                                       //              (terminated)
		.av_waitrequest           (1'b0),                                                                       //              (terminated)
		.av_writebyteenable       (),                                                                           //              (terminated)
		.av_lock                  (),                                                                           //              (terminated)
		.av_chipselect            (),                                                                           //              (terminated)
		.av_clken                 (),                                                                           //              (terminated)
		.uav_clken                (1'b0),                                                                       //              (terminated)
		.av_debugaccess           (),                                                                           //              (terminated)
		.av_outputenable          (),                                                                           //              (terminated)
		.uav_response             (),                                                                           //              (terminated)
		.av_response              (2'b00),                                                                      //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                       //              (terminated)
		.uav_writeresponsevalid   (),                                                                           //              (terminated)
		.av_writeresponserequest  (),                                                                           //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                        //              (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_PROTECTION_H          (76),
		.PKT_PROTECTION_L          (74),
		.PKT_BEGIN_BURST           (63),
		.PKT_BURSTWRAP_H           (55),
		.PKT_BURSTWRAP_L           (55),
		.PKT_BURST_SIZE_H          (58),
		.PKT_BURST_SIZE_L          (56),
		.PKT_BURST_TYPE_H          (60),
		.PKT_BURST_TYPE_L          (59),
		.PKT_BYTE_CNT_H            (54),
		.PKT_BYTE_CNT_L            (52),
		.PKT_ADDR_H                (45),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (46),
		.PKT_TRANS_POSTED          (47),
		.PKT_TRANS_WRITE           (48),
		.PKT_TRANS_READ            (49),
		.PKT_TRANS_LOCK            (50),
		.PKT_TRANS_EXCLUSIVE       (51),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (68),
		.PKT_SRC_ID_L              (65),
		.PKT_DEST_ID_H             (72),
		.PKT_DEST_ID_L             (69),
		.PKT_THREAD_ID_H           (73),
		.PKT_THREAD_ID_L           (73),
		.PKT_CACHE_H               (80),
		.PKT_CACHE_L               (77),
		.PKT_DATA_SIDEBAND_H       (62),
		.PKT_DATA_SIDEBAND_L       (62),
		.PKT_QOS_H                 (64),
		.PKT_QOS_L                 (64),
		.PKT_ADDR_SIDEBAND_H       (61),
		.PKT_ADDR_SIDEBAND_L       (61),
		.PKT_RESPONSE_STATUS_H     (82),
		.PKT_RESPONSE_STATUS_L     (81),
		.PKT_ORI_BURST_SIZE_L      (83),
		.PKT_ORI_BURST_SIZE_H      (85),
		.ST_DATA_W                 (86),
		.ST_CHANNEL_W              (12),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (0),
		.BURSTWRAP_VALUE           (1),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_agent (
		.clk                     (system_pll_outclk1_clk),                                                                    //       clk.clk
		.reset                   (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.av_address              (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_address),                //        av.address
		.av_write                (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_write),                  //          .write
		.av_read                 (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_read),                   //          .read
		.av_writedata            (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_writedata),              //          .writedata
		.av_readdata             (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_readdata),               //          .readdata
		.av_waitrequest          (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_waitrequest),            //          .waitrequest
		.av_readdatavalid        (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_readdatavalid),          //          .readdatavalid
		.av_byteenable           (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_byteenable),             //          .byteenable
		.av_burstcount           (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_burstcount),             //          .burstcount
		.av_debugaccess          (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_debugaccess),            //          .debugaccess
		.av_lock                 (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_lock),                   //          .lock
		.cp_valid                (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_agent_cp_valid),         //        cp.valid
		.cp_data                 (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.cp_startofpacket        (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.cp_endofpacket          (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.cp_ready                (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_agent_cp_ready),         //          .ready
		.rp_valid                (limiter_rsp_src_valid),                                                                     //        rp.valid
		.rp_data                 (limiter_rsp_src_data),                                                                      //          .data
		.rp_channel              (limiter_rsp_src_channel),                                                                   //          .channel
		.rp_startofpacket        (limiter_rsp_src_startofpacket),                                                             //          .startofpacket
		.rp_endofpacket          (limiter_rsp_src_endofpacket),                                                               //          .endofpacket
		.rp_ready                (limiter_rsp_src_ready),                                                                     //          .ready
		.av_response             (),                                                                                          // (terminated)
		.av_writeresponserequest (1'b0),                                                                                      // (terminated)
		.av_writeresponsevalid   ()                                                                                           // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (63),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (45),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (46),
		.PKT_TRANS_POSTED          (47),
		.PKT_TRANS_WRITE           (48),
		.PKT_TRANS_READ            (49),
		.PKT_TRANS_LOCK            (50),
		.PKT_SRC_ID_H              (68),
		.PKT_SRC_ID_L              (65),
		.PKT_DEST_ID_H             (72),
		.PKT_DEST_ID_L             (69),
		.PKT_BURSTWRAP_H           (55),
		.PKT_BURSTWRAP_L           (55),
		.PKT_BYTE_CNT_H            (54),
		.PKT_BYTE_CNT_L            (52),
		.PKT_PROTECTION_H          (76),
		.PKT_PROTECTION_L          (74),
		.PKT_RESPONSE_STATUS_H     (82),
		.PKT_RESPONSE_STATUS_L     (81),
		.PKT_BURST_SIZE_H          (58),
		.PKT_BURST_SIZE_L          (56),
		.PKT_ORI_BURST_SIZE_L      (83),
		.PKT_ORI_BURST_SIZE_H      (85),
		.ST_CHANNEL_W              (12),
		.ST_DATA_W                 (86),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (system_pll_outclk1_clk),                                                               //             clk.clk
		.reset                   (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset),                      //       clk_reset.reset
		.m0_address              (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_src_ready),                                                               //              cp.ready
		.cp_valid                (cmd_xbar_mux_src_valid),                                                               //                .valid
		.cp_data                 (cmd_xbar_mux_src_data),                                                                //                .data
		.cp_startofpacket        (cmd_xbar_mux_src_startofpacket),                                                       //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_src_endofpacket),                                                         //                .endofpacket
		.cp_channel              (cmd_xbar_mux_src_channel),                                                             //                .channel
		.rf_sink_ready           (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                //     (terminated)
		.m0_writeresponserequest (),                                                                                     //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                  //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (87),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (system_pll_outclk1_clk),                                                               //       clk.clk
		.reset             (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset),                      // clk_reset.reset
		.in_data           (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                // (terminated)
		.csr_read          (1'b0),                                                                                 // (terminated)
		.csr_write         (1'b0),                                                                                 // (terminated)
		.csr_readdata      (),                                                                                     // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                 // (terminated)
		.almost_full_data  (),                                                                                     // (terminated)
		.almost_empty_data (),                                                                                     // (terminated)
		.in_empty          (1'b0),                                                                                 // (terminated)
		.out_empty         (),                                                                                     // (terminated)
		.in_error          (1'b0),                                                                                 // (terminated)
		.out_error         (),                                                                                     // (terminated)
		.in_channel        (1'b0),                                                                                 // (terminated)
		.out_channel       ()                                                                                      // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (63),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (45),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (46),
		.PKT_TRANS_POSTED          (47),
		.PKT_TRANS_WRITE           (48),
		.PKT_TRANS_READ            (49),
		.PKT_TRANS_LOCK            (50),
		.PKT_SRC_ID_H              (68),
		.PKT_SRC_ID_L              (65),
		.PKT_DEST_ID_H             (72),
		.PKT_DEST_ID_L             (69),
		.PKT_BURSTWRAP_H           (55),
		.PKT_BURSTWRAP_L           (55),
		.PKT_BYTE_CNT_H            (54),
		.PKT_BYTE_CNT_L            (52),
		.PKT_PROTECTION_H          (76),
		.PKT_PROTECTION_L          (74),
		.PKT_RESPONSE_STATUS_H     (82),
		.PKT_RESPONSE_STATUS_L     (81),
		.PKT_BURST_SIZE_H          (58),
		.PKT_BURST_SIZE_L          (56),
		.PKT_ORI_BURST_SIZE_L      (83),
		.PKT_ORI_BURST_SIZE_H      (85),
		.ST_CHANNEL_W              (12),
		.ST_DATA_W                 (86),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent (
		.clk                     (system_pll_outclk1_clk),                                                                                  //             clk.clk
		.reset                   (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset),                                         //       clk_reset.reset
		.m0_address              (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_001_src_ready),                                                                              //              cp.ready
		.cp_valid                (cmd_xbar_mux_001_src_valid),                                                                              //                .valid
		.cp_data                 (cmd_xbar_mux_001_src_data),                                                                               //                .data
		.cp_startofpacket        (cmd_xbar_mux_001_src_startofpacket),                                                                      //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_001_src_endofpacket),                                                                        //                .endofpacket
		.cp_channel              (cmd_xbar_mux_001_src_channel),                                                                            //                .channel
		.rf_sink_ready           (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                                   //     (terminated)
		.m0_writeresponserequest (),                                                                                                        //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                                     //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (87),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (system_pll_outclk1_clk),                                                                                  //       clk.clk
		.reset             (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset),                                         // clk_reset.reset
		.in_data           (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                                   // (terminated)
		.csr_read          (1'b0),                                                                                                    // (terminated)
		.csr_write         (1'b0),                                                                                                    // (terminated)
		.csr_readdata      (),                                                                                                        // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                                    // (terminated)
		.almost_full_data  (),                                                                                                        // (terminated)
		.almost_empty_data (),                                                                                                        // (terminated)
		.in_empty          (1'b0),                                                                                                    // (terminated)
		.out_empty         (),                                                                                                        // (terminated)
		.in_error          (1'b0),                                                                                                    // (terminated)
		.out_error         (),                                                                                                        // (terminated)
		.in_channel        (1'b0),                                                                                                    // (terminated)
		.out_channel       ()                                                                                                         // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (63),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (45),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (46),
		.PKT_TRANS_POSTED          (47),
		.PKT_TRANS_WRITE           (48),
		.PKT_TRANS_READ            (49),
		.PKT_TRANS_LOCK            (50),
		.PKT_SRC_ID_H              (68),
		.PKT_SRC_ID_L              (65),
		.PKT_DEST_ID_H             (72),
		.PKT_DEST_ID_L             (69),
		.PKT_BURSTWRAP_H           (55),
		.PKT_BURSTWRAP_L           (55),
		.PKT_BYTE_CNT_H            (54),
		.PKT_BYTE_CNT_L            (52),
		.PKT_PROTECTION_H          (76),
		.PKT_PROTECTION_L          (74),
		.PKT_RESPONSE_STATUS_H     (82),
		.PKT_RESPONSE_STATUS_L     (81),
		.PKT_BURST_SIZE_H          (58),
		.PKT_BURST_SIZE_L          (56),
		.PKT_ORI_BURST_SIZE_L      (83),
		.PKT_ORI_BURST_SIZE_H      (85),
		.ST_CHANNEL_W              (12),
		.ST_DATA_W                 (86),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (system_pll_outclk1_clk),                                                                       //             clk.clk
		.reset                   (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset),                              //       clk_reset.reset
		.m0_address              (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_002_src_ready),                                                                   //              cp.ready
		.cp_valid                (cmd_xbar_mux_002_src_valid),                                                                   //                .valid
		.cp_data                 (cmd_xbar_mux_002_src_data),                                                                    //                .data
		.cp_startofpacket        (cmd_xbar_mux_002_src_startofpacket),                                                           //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_002_src_endofpacket),                                                             //                .endofpacket
		.cp_channel              (cmd_xbar_mux_002_src_channel),                                                                 //                .channel
		.rf_sink_ready           (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                        //     (terminated)
		.m0_writeresponserequest (),                                                                                             //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                          //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (87),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (system_pll_outclk1_clk),                                                                       //       clk.clk
		.reset             (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset),                              // clk_reset.reset
		.in_data           (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                        // (terminated)
		.csr_read          (1'b0),                                                                                         // (terminated)
		.csr_write         (1'b0),                                                                                         // (terminated)
		.csr_readdata      (),                                                                                             // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                         // (terminated)
		.almost_full_data  (),                                                                                             // (terminated)
		.almost_empty_data (),                                                                                             // (terminated)
		.in_empty          (1'b0),                                                                                         // (terminated)
		.out_empty         (),                                                                                             // (terminated)
		.in_error          (1'b0),                                                                                         // (terminated)
		.out_error         (),                                                                                             // (terminated)
		.in_channel        (1'b0),                                                                                         // (terminated)
		.out_channel       ()                                                                                              // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (63),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (45),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (46),
		.PKT_TRANS_POSTED          (47),
		.PKT_TRANS_WRITE           (48),
		.PKT_TRANS_READ            (49),
		.PKT_TRANS_LOCK            (50),
		.PKT_SRC_ID_H              (68),
		.PKT_SRC_ID_L              (65),
		.PKT_DEST_ID_H             (72),
		.PKT_DEST_ID_L             (69),
		.PKT_BURSTWRAP_H           (55),
		.PKT_BURSTWRAP_L           (55),
		.PKT_BYTE_CNT_H            (54),
		.PKT_BYTE_CNT_L            (52),
		.PKT_PROTECTION_H          (76),
		.PKT_PROTECTION_L          (74),
		.PKT_RESPONSE_STATUS_H     (82),
		.PKT_RESPONSE_STATUS_L     (81),
		.PKT_BURST_SIZE_H          (58),
		.PKT_BURST_SIZE_L          (56),
		.PKT_ORI_BURST_SIZE_L      (83),
		.PKT_ORI_BURST_SIZE_H      (85),
		.ST_CHANNEL_W              (12),
		.ST_DATA_W                 (86),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent (
		.clk                     (system_pll_outclk1_clk),                                                                   //             clk.clk
		.reset                   (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset),                          //       clk_reset.reset
		.m0_address              (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_003_src_ready),                                                               //              cp.ready
		.cp_valid                (cmd_xbar_mux_003_src_valid),                                                               //                .valid
		.cp_data                 (cmd_xbar_mux_003_src_data),                                                                //                .data
		.cp_startofpacket        (cmd_xbar_mux_003_src_startofpacket),                                                       //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_003_src_endofpacket),                                                         //                .endofpacket
		.cp_channel              (cmd_xbar_mux_003_src_channel),                                                             //                .channel
		.rf_sink_ready           (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                    //     (terminated)
		.m0_writeresponserequest (),                                                                                         //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                      //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (87),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (system_pll_outclk1_clk),                                                                   //       clk.clk
		.reset             (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset),                          // clk_reset.reset
		.in_data           (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                    // (terminated)
		.csr_read          (1'b0),                                                                                     // (terminated)
		.csr_write         (1'b0),                                                                                     // (terminated)
		.csr_readdata      (),                                                                                         // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                     // (terminated)
		.almost_full_data  (),                                                                                         // (terminated)
		.almost_empty_data (),                                                                                         // (terminated)
		.in_empty          (1'b0),                                                                                     // (terminated)
		.out_empty         (),                                                                                         // (terminated)
		.in_error          (1'b0),                                                                                     // (terminated)
		.out_error         (),                                                                                         // (terminated)
		.in_channel        (1'b0),                                                                                     // (terminated)
		.out_channel       ()                                                                                          // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (63),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (45),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (46),
		.PKT_TRANS_POSTED          (47),
		.PKT_TRANS_WRITE           (48),
		.PKT_TRANS_READ            (49),
		.PKT_TRANS_LOCK            (50),
		.PKT_SRC_ID_H              (68),
		.PKT_SRC_ID_L              (65),
		.PKT_DEST_ID_H             (72),
		.PKT_DEST_ID_L             (69),
		.PKT_BURSTWRAP_H           (55),
		.PKT_BURSTWRAP_L           (55),
		.PKT_BYTE_CNT_H            (54),
		.PKT_BYTE_CNT_L            (52),
		.PKT_PROTECTION_H          (76),
		.PKT_PROTECTION_L          (74),
		.PKT_RESPONSE_STATUS_H     (82),
		.PKT_RESPONSE_STATUS_L     (81),
		.PKT_BURST_SIZE_H          (58),
		.PKT_BURST_SIZE_L          (56),
		.PKT_ORI_BURST_SIZE_L      (83),
		.PKT_ORI_BURST_SIZE_H      (85),
		.ST_CHANNEL_W              (12),
		.ST_DATA_W                 (86),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent (
		.clk                     (pwm_pll_outclk0_clk),                                                                  //             clk.clk
		.reset                   (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                                 //       clk_reset.reset
		.m0_address              (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_004_src_ready),                                                           //              cp.ready
		.cp_valid                (cmd_xbar_mux_004_src_valid),                                                           //                .valid
		.cp_data                 (cmd_xbar_mux_004_src_data),                                                            //                .data
		.cp_startofpacket        (cmd_xbar_mux_004_src_startofpacket),                                                   //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_004_src_endofpacket),                                                     //                .endofpacket
		.cp_channel              (cmd_xbar_mux_004_src_channel),                                                         //                .channel
		.rf_sink_ready           (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid),       //                .valid
		.rdata_fifo_sink_data    (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data),        //                .data
		.rdata_fifo_src_ready    (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                //     (terminated)
		.m0_writeresponserequest (),                                                                                     //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                  //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (87),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pwm_pll_outclk0_clk),                                                                  //       clk.clk
		.reset             (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                                 // clk_reset.reset
		.in_data           (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                // (terminated)
		.csr_read          (1'b0),                                                                                 // (terminated)
		.csr_write         (1'b0),                                                                                 // (terminated)
		.csr_readdata      (),                                                                                     // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                 // (terminated)
		.almost_full_data  (),                                                                                     // (terminated)
		.almost_empty_data (),                                                                                     // (terminated)
		.in_empty          (1'b0),                                                                                 // (terminated)
		.out_empty         (),                                                                                     // (terminated)
		.in_error          (1'b0),                                                                                 // (terminated)
		.out_error         (),                                                                                     // (terminated)
		.in_channel        (1'b0),                                                                                 // (terminated)
		.out_channel       ()                                                                                      // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo (
		.clk               (pwm_pll_outclk0_clk),                                                            //       clk.clk
		.reset             (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.in_data           (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),  //        in.data
		.in_valid          (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid), //          .valid
		.in_ready          (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready), //          .ready
		.out_data          (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data),  //       out.data
		.out_valid         (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid), //          .valid
		.out_ready         (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready), //          .ready
		.csr_address       (2'b00),                                                                          // (terminated)
		.csr_read          (1'b0),                                                                           // (terminated)
		.csr_write         (1'b0),                                                                           // (terminated)
		.csr_readdata      (),                                                                               // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                           // (terminated)
		.almost_full_data  (),                                                                               // (terminated)
		.almost_empty_data (),                                                                               // (terminated)
		.in_startofpacket  (1'b0),                                                                           // (terminated)
		.in_endofpacket    (1'b0),                                                                           // (terminated)
		.out_startofpacket (),                                                                               // (terminated)
		.out_endofpacket   (),                                                                               // (terminated)
		.in_empty          (1'b0),                                                                           // (terminated)
		.out_empty         (),                                                                               // (terminated)
		.in_error          (1'b0),                                                                           // (terminated)
		.out_error         (),                                                                               // (terminated)
		.in_channel        (1'b0),                                                                           // (terminated)
		.out_channel       ()                                                                                // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (63),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (45),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (46),
		.PKT_TRANS_POSTED          (47),
		.PKT_TRANS_WRITE           (48),
		.PKT_TRANS_READ            (49),
		.PKT_TRANS_LOCK            (50),
		.PKT_SRC_ID_H              (68),
		.PKT_SRC_ID_L              (65),
		.PKT_DEST_ID_H             (72),
		.PKT_DEST_ID_L             (69),
		.PKT_BURSTWRAP_H           (55),
		.PKT_BURSTWRAP_L           (55),
		.PKT_BYTE_CNT_H            (54),
		.PKT_BYTE_CNT_L            (52),
		.PKT_PROTECTION_H          (76),
		.PKT_PROTECTION_L          (74),
		.PKT_RESPONSE_STATUS_H     (82),
		.PKT_RESPONSE_STATUS_L     (81),
		.PKT_BURST_SIZE_H          (58),
		.PKT_BURST_SIZE_L          (56),
		.PKT_ORI_BURST_SIZE_L      (83),
		.PKT_ORI_BURST_SIZE_H      (85),
		.ST_CHANNEL_W              (12),
		.ST_DATA_W                 (86),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent (
		.clk                     (pwm_pll_outclk0_clk),                                                                  //             clk.clk
		.reset                   (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                                 //       clk_reset.reset
		.m0_address              (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_005_src_ready),                                                           //              cp.ready
		.cp_valid                (cmd_xbar_mux_005_src_valid),                                                           //                .valid
		.cp_data                 (cmd_xbar_mux_005_src_data),                                                            //                .data
		.cp_startofpacket        (cmd_xbar_mux_005_src_startofpacket),                                                   //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_005_src_endofpacket),                                                     //                .endofpacket
		.cp_channel              (cmd_xbar_mux_005_src_channel),                                                         //                .channel
		.rf_sink_ready           (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid),       //                .valid
		.rdata_fifo_sink_data    (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data),        //                .data
		.rdata_fifo_src_ready    (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                //     (terminated)
		.m0_writeresponserequest (),                                                                                     //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                  //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (87),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pwm_pll_outclk0_clk),                                                                  //       clk.clk
		.reset             (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                                 // clk_reset.reset
		.in_data           (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                // (terminated)
		.csr_read          (1'b0),                                                                                 // (terminated)
		.csr_write         (1'b0),                                                                                 // (terminated)
		.csr_readdata      (),                                                                                     // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                 // (terminated)
		.almost_full_data  (),                                                                                     // (terminated)
		.almost_empty_data (),                                                                                     // (terminated)
		.in_empty          (1'b0),                                                                                 // (terminated)
		.out_empty         (),                                                                                     // (terminated)
		.in_error          (1'b0),                                                                                 // (terminated)
		.out_error         (),                                                                                     // (terminated)
		.in_channel        (1'b0),                                                                                 // (terminated)
		.out_channel       ()                                                                                      // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rdata_fifo (
		.clk               (pwm_pll_outclk0_clk),                                                            //       clk.clk
		.reset             (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.in_data           (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),  //        in.data
		.in_valid          (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid), //          .valid
		.in_ready          (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready), //          .ready
		.out_data          (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data),  //       out.data
		.out_valid         (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid), //          .valid
		.out_ready         (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready), //          .ready
		.csr_address       (2'b00),                                                                          // (terminated)
		.csr_read          (1'b0),                                                                           // (terminated)
		.csr_write         (1'b0),                                                                           // (terminated)
		.csr_readdata      (),                                                                               // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                           // (terminated)
		.almost_full_data  (),                                                                               // (terminated)
		.almost_empty_data (),                                                                               // (terminated)
		.in_startofpacket  (1'b0),                                                                           // (terminated)
		.in_endofpacket    (1'b0),                                                                           // (terminated)
		.out_startofpacket (),                                                                               // (terminated)
		.out_endofpacket   (),                                                                               // (terminated)
		.in_empty          (1'b0),                                                                           // (terminated)
		.out_empty         (),                                                                               // (terminated)
		.in_error          (1'b0),                                                                           // (terminated)
		.out_error         (),                                                                               // (terminated)
		.in_channel        (1'b0),                                                                           // (terminated)
		.out_channel       ()                                                                                // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (63),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (45),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (46),
		.PKT_TRANS_POSTED          (47),
		.PKT_TRANS_WRITE           (48),
		.PKT_TRANS_READ            (49),
		.PKT_TRANS_LOCK            (50),
		.PKT_SRC_ID_H              (68),
		.PKT_SRC_ID_L              (65),
		.PKT_DEST_ID_H             (72),
		.PKT_DEST_ID_L             (69),
		.PKT_BURSTWRAP_H           (55),
		.PKT_BURSTWRAP_L           (55),
		.PKT_BYTE_CNT_H            (54),
		.PKT_BYTE_CNT_L            (52),
		.PKT_PROTECTION_H          (76),
		.PKT_PROTECTION_L          (74),
		.PKT_RESPONSE_STATUS_H     (82),
		.PKT_RESPONSE_STATUS_L     (81),
		.PKT_BURST_SIZE_H          (58),
		.PKT_BURST_SIZE_L          (56),
		.PKT_ORI_BURST_SIZE_L      (83),
		.PKT_ORI_BURST_SIZE_H      (85),
		.ST_CHANNEL_W              (12),
		.ST_DATA_W                 (86),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent (
		.clk                     (pwm_pll_outclk0_clk),                                                                  //             clk.clk
		.reset                   (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                                 //       clk_reset.reset
		.m0_address              (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_006_src_ready),                                                           //              cp.ready
		.cp_valid                (cmd_xbar_mux_006_src_valid),                                                           //                .valid
		.cp_data                 (cmd_xbar_mux_006_src_data),                                                            //                .data
		.cp_startofpacket        (cmd_xbar_mux_006_src_startofpacket),                                                   //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_006_src_endofpacket),                                                     //                .endofpacket
		.cp_channel              (cmd_xbar_mux_006_src_channel),                                                         //                .channel
		.rf_sink_ready           (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid),       //                .valid
		.rdata_fifo_sink_data    (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data),        //                .data
		.rdata_fifo_src_ready    (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                //     (terminated)
		.m0_writeresponserequest (),                                                                                     //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                  //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (87),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pwm_pll_outclk0_clk),                                                                  //       clk.clk
		.reset             (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                                 // clk_reset.reset
		.in_data           (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                // (terminated)
		.csr_read          (1'b0),                                                                                 // (terminated)
		.csr_write         (1'b0),                                                                                 // (terminated)
		.csr_readdata      (),                                                                                     // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                 // (terminated)
		.almost_full_data  (),                                                                                     // (terminated)
		.almost_empty_data (),                                                                                     // (terminated)
		.in_empty          (1'b0),                                                                                 // (terminated)
		.out_empty         (),                                                                                     // (terminated)
		.in_error          (1'b0),                                                                                 // (terminated)
		.out_error         (),                                                                                     // (terminated)
		.in_channel        (1'b0),                                                                                 // (terminated)
		.out_channel       ()                                                                                      // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rdata_fifo (
		.clk               (pwm_pll_outclk0_clk),                                                            //       clk.clk
		.reset             (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.in_data           (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),  //        in.data
		.in_valid          (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid), //          .valid
		.in_ready          (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready), //          .ready
		.out_data          (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data),  //       out.data
		.out_valid         (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid), //          .valid
		.out_ready         (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready), //          .ready
		.csr_address       (2'b00),                                                                          // (terminated)
		.csr_read          (1'b0),                                                                           // (terminated)
		.csr_write         (1'b0),                                                                           // (terminated)
		.csr_readdata      (),                                                                               // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                           // (terminated)
		.almost_full_data  (),                                                                               // (terminated)
		.almost_empty_data (),                                                                               // (terminated)
		.in_startofpacket  (1'b0),                                                                           // (terminated)
		.in_endofpacket    (1'b0),                                                                           // (terminated)
		.out_startofpacket (),                                                                               // (terminated)
		.out_endofpacket   (),                                                                               // (terminated)
		.in_empty          (1'b0),                                                                           // (terminated)
		.out_empty         (),                                                                               // (terminated)
		.in_error          (1'b0),                                                                           // (terminated)
		.out_error         (),                                                                               // (terminated)
		.in_channel        (1'b0),                                                                           // (terminated)
		.out_channel       ()                                                                                // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (63),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (45),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (46),
		.PKT_TRANS_POSTED          (47),
		.PKT_TRANS_WRITE           (48),
		.PKT_TRANS_READ            (49),
		.PKT_TRANS_LOCK            (50),
		.PKT_SRC_ID_H              (68),
		.PKT_SRC_ID_L              (65),
		.PKT_DEST_ID_H             (72),
		.PKT_DEST_ID_L             (69),
		.PKT_BURSTWRAP_H           (55),
		.PKT_BURSTWRAP_L           (55),
		.PKT_BYTE_CNT_H            (54),
		.PKT_BYTE_CNT_L            (52),
		.PKT_PROTECTION_H          (76),
		.PKT_PROTECTION_L          (74),
		.PKT_RESPONSE_STATUS_H     (82),
		.PKT_RESPONSE_STATUS_L     (81),
		.PKT_BURST_SIZE_H          (58),
		.PKT_BURST_SIZE_L          (56),
		.PKT_ORI_BURST_SIZE_L      (83),
		.PKT_ORI_BURST_SIZE_H      (85),
		.ST_CHANNEL_W              (12),
		.ST_DATA_W                 (86),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent (
		.clk                     (pwm_pll_outclk0_clk),                                                                  //             clk.clk
		.reset                   (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                                 //       clk_reset.reset
		.m0_address              (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_007_src_ready),                                                           //              cp.ready
		.cp_valid                (cmd_xbar_mux_007_src_valid),                                                           //                .valid
		.cp_data                 (cmd_xbar_mux_007_src_data),                                                            //                .data
		.cp_startofpacket        (cmd_xbar_mux_007_src_startofpacket),                                                   //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_007_src_endofpacket),                                                     //                .endofpacket
		.cp_channel              (cmd_xbar_mux_007_src_channel),                                                         //                .channel
		.rf_sink_ready           (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid),       //                .valid
		.rdata_fifo_sink_data    (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data),        //                .data
		.rdata_fifo_src_ready    (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                //     (terminated)
		.m0_writeresponserequest (),                                                                                     //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                  //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (87),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pwm_pll_outclk0_clk),                                                                  //       clk.clk
		.reset             (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                                 // clk_reset.reset
		.in_data           (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                // (terminated)
		.csr_read          (1'b0),                                                                                 // (terminated)
		.csr_write         (1'b0),                                                                                 // (terminated)
		.csr_readdata      (),                                                                                     // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                 // (terminated)
		.almost_full_data  (),                                                                                     // (terminated)
		.almost_empty_data (),                                                                                     // (terminated)
		.in_empty          (1'b0),                                                                                 // (terminated)
		.out_empty         (),                                                                                     // (terminated)
		.in_error          (1'b0),                                                                                 // (terminated)
		.out_error         (),                                                                                     // (terminated)
		.in_channel        (1'b0),                                                                                 // (terminated)
		.out_channel       ()                                                                                      // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rdata_fifo (
		.clk               (pwm_pll_outclk0_clk),                                                            //       clk.clk
		.reset             (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.in_data           (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),  //        in.data
		.in_valid          (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid), //          .valid
		.in_ready          (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready), //          .ready
		.out_data          (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data),  //       out.data
		.out_valid         (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid), //          .valid
		.out_ready         (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready), //          .ready
		.csr_address       (2'b00),                                                                          // (terminated)
		.csr_read          (1'b0),                                                                           // (terminated)
		.csr_write         (1'b0),                                                                           // (terminated)
		.csr_readdata      (),                                                                               // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                           // (terminated)
		.almost_full_data  (),                                                                               // (terminated)
		.almost_empty_data (),                                                                               // (terminated)
		.in_startofpacket  (1'b0),                                                                           // (terminated)
		.in_endofpacket    (1'b0),                                                                           // (terminated)
		.out_startofpacket (),                                                                               // (terminated)
		.out_endofpacket   (),                                                                               // (terminated)
		.in_empty          (1'b0),                                                                           // (terminated)
		.out_empty         (),                                                                               // (terminated)
		.in_error          (1'b0),                                                                           // (terminated)
		.out_error         (),                                                                               // (terminated)
		.in_channel        (1'b0),                                                                           // (terminated)
		.out_channel       ()                                                                                // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (63),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (45),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (46),
		.PKT_TRANS_POSTED          (47),
		.PKT_TRANS_WRITE           (48),
		.PKT_TRANS_READ            (49),
		.PKT_TRANS_LOCK            (50),
		.PKT_SRC_ID_H              (68),
		.PKT_SRC_ID_L              (65),
		.PKT_DEST_ID_H             (72),
		.PKT_DEST_ID_L             (69),
		.PKT_BURSTWRAP_H           (55),
		.PKT_BURSTWRAP_L           (55),
		.PKT_BYTE_CNT_H            (54),
		.PKT_BYTE_CNT_L            (52),
		.PKT_PROTECTION_H          (76),
		.PKT_PROTECTION_L          (74),
		.PKT_RESPONSE_STATUS_H     (82),
		.PKT_RESPONSE_STATUS_L     (81),
		.PKT_BURST_SIZE_H          (58),
		.PKT_BURST_SIZE_L          (56),
		.PKT_ORI_BURST_SIZE_L      (83),
		.PKT_ORI_BURST_SIZE_H      (85),
		.ST_CHANNEL_W              (12),
		.ST_DATA_W                 (86),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent (
		.clk                     (pwm_pll_outclk0_clk),                                                                  //             clk.clk
		.reset                   (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                                 //       clk_reset.reset
		.m0_address              (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_008_src_ready),                                                           //              cp.ready
		.cp_valid                (cmd_xbar_mux_008_src_valid),                                                           //                .valid
		.cp_data                 (cmd_xbar_mux_008_src_data),                                                            //                .data
		.cp_startofpacket        (cmd_xbar_mux_008_src_startofpacket),                                                   //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_008_src_endofpacket),                                                     //                .endofpacket
		.cp_channel              (cmd_xbar_mux_008_src_channel),                                                         //                .channel
		.rf_sink_ready           (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid),       //                .valid
		.rdata_fifo_sink_data    (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data),        //                .data
		.rdata_fifo_src_ready    (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                //     (terminated)
		.m0_writeresponserequest (),                                                                                     //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                  //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (87),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pwm_pll_outclk0_clk),                                                                  //       clk.clk
		.reset             (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                                 // clk_reset.reset
		.in_data           (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                // (terminated)
		.csr_read          (1'b0),                                                                                 // (terminated)
		.csr_write         (1'b0),                                                                                 // (terminated)
		.csr_readdata      (),                                                                                     // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                 // (terminated)
		.almost_full_data  (),                                                                                     // (terminated)
		.almost_empty_data (),                                                                                     // (terminated)
		.in_empty          (1'b0),                                                                                 // (terminated)
		.out_empty         (),                                                                                     // (terminated)
		.in_error          (1'b0),                                                                                 // (terminated)
		.out_error         (),                                                                                     // (terminated)
		.in_channel        (1'b0),                                                                                 // (terminated)
		.out_channel       ()                                                                                      // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rdata_fifo (
		.clk               (pwm_pll_outclk0_clk),                                                            //       clk.clk
		.reset             (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.in_data           (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),  //        in.data
		.in_valid          (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid), //          .valid
		.in_ready          (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready), //          .ready
		.out_data          (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data),  //       out.data
		.out_valid         (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid), //          .valid
		.out_ready         (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready), //          .ready
		.csr_address       (2'b00),                                                                          // (terminated)
		.csr_read          (1'b0),                                                                           // (terminated)
		.csr_write         (1'b0),                                                                           // (terminated)
		.csr_readdata      (),                                                                               // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                           // (terminated)
		.almost_full_data  (),                                                                               // (terminated)
		.almost_empty_data (),                                                                               // (terminated)
		.in_startofpacket  (1'b0),                                                                           // (terminated)
		.in_endofpacket    (1'b0),                                                                           // (terminated)
		.out_startofpacket (),                                                                               // (terminated)
		.out_endofpacket   (),                                                                               // (terminated)
		.in_empty          (1'b0),                                                                           // (terminated)
		.out_empty         (),                                                                               // (terminated)
		.in_error          (1'b0),                                                                           // (terminated)
		.out_error         (),                                                                               // (terminated)
		.in_channel        (1'b0),                                                                           // (terminated)
		.out_channel       ()                                                                                // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (63),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (45),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (46),
		.PKT_TRANS_POSTED          (47),
		.PKT_TRANS_WRITE           (48),
		.PKT_TRANS_READ            (49),
		.PKT_TRANS_LOCK            (50),
		.PKT_SRC_ID_H              (68),
		.PKT_SRC_ID_L              (65),
		.PKT_DEST_ID_H             (72),
		.PKT_DEST_ID_L             (69),
		.PKT_BURSTWRAP_H           (55),
		.PKT_BURSTWRAP_L           (55),
		.PKT_BYTE_CNT_H            (54),
		.PKT_BYTE_CNT_L            (52),
		.PKT_PROTECTION_H          (76),
		.PKT_PROTECTION_L          (74),
		.PKT_RESPONSE_STATUS_H     (82),
		.PKT_RESPONSE_STATUS_L     (81),
		.PKT_BURST_SIZE_H          (58),
		.PKT_BURST_SIZE_L          (56),
		.PKT_ORI_BURST_SIZE_L      (83),
		.PKT_ORI_BURST_SIZE_H      (85),
		.ST_CHANNEL_W              (12),
		.ST_DATA_W                 (86),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent (
		.clk                     (pwm_pll_outclk0_clk),                                                                  //             clk.clk
		.reset                   (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                                 //       clk_reset.reset
		.m0_address              (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_009_src_ready),                                                           //              cp.ready
		.cp_valid                (cmd_xbar_mux_009_src_valid),                                                           //                .valid
		.cp_data                 (cmd_xbar_mux_009_src_data),                                                            //                .data
		.cp_startofpacket        (cmd_xbar_mux_009_src_startofpacket),                                                   //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_009_src_endofpacket),                                                     //                .endofpacket
		.cp_channel              (cmd_xbar_mux_009_src_channel),                                                         //                .channel
		.rf_sink_ready           (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid),       //                .valid
		.rdata_fifo_sink_data    (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data),        //                .data
		.rdata_fifo_src_ready    (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                //     (terminated)
		.m0_writeresponserequest (),                                                                                     //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                  //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (87),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pwm_pll_outclk0_clk),                                                                  //       clk.clk
		.reset             (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                                 // clk_reset.reset
		.in_data           (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                // (terminated)
		.csr_read          (1'b0),                                                                                 // (terminated)
		.csr_write         (1'b0),                                                                                 // (terminated)
		.csr_readdata      (),                                                                                     // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                 // (terminated)
		.almost_full_data  (),                                                                                     // (terminated)
		.almost_empty_data (),                                                                                     // (terminated)
		.in_empty          (1'b0),                                                                                 // (terminated)
		.out_empty         (),                                                                                     // (terminated)
		.in_error          (1'b0),                                                                                 // (terminated)
		.out_error         (),                                                                                     // (terminated)
		.in_channel        (1'b0),                                                                                 // (terminated)
		.out_channel       ()                                                                                      // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rdata_fifo (
		.clk               (pwm_pll_outclk0_clk),                                                            //       clk.clk
		.reset             (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.in_data           (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),  //        in.data
		.in_valid          (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid), //          .valid
		.in_ready          (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready), //          .ready
		.out_data          (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data),  //       out.data
		.out_valid         (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid), //          .valid
		.out_ready         (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready), //          .ready
		.csr_address       (2'b00),                                                                          // (terminated)
		.csr_read          (1'b0),                                                                           // (terminated)
		.csr_write         (1'b0),                                                                           // (terminated)
		.csr_readdata      (),                                                                               // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                           // (terminated)
		.almost_full_data  (),                                                                               // (terminated)
		.almost_empty_data (),                                                                               // (terminated)
		.in_startofpacket  (1'b0),                                                                           // (terminated)
		.in_endofpacket    (1'b0),                                                                           // (terminated)
		.out_startofpacket (),                                                                               // (terminated)
		.out_endofpacket   (),                                                                               // (terminated)
		.in_empty          (1'b0),                                                                           // (terminated)
		.out_empty         (),                                                                               // (terminated)
		.in_error          (1'b0),                                                                           // (terminated)
		.out_error         (),                                                                               // (terminated)
		.in_channel        (1'b0),                                                                           // (terminated)
		.out_channel       ()                                                                                // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (63),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (45),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (46),
		.PKT_TRANS_POSTED          (47),
		.PKT_TRANS_WRITE           (48),
		.PKT_TRANS_READ            (49),
		.PKT_TRANS_LOCK            (50),
		.PKT_SRC_ID_H              (68),
		.PKT_SRC_ID_L              (65),
		.PKT_DEST_ID_H             (72),
		.PKT_DEST_ID_L             (69),
		.PKT_BURSTWRAP_H           (55),
		.PKT_BURSTWRAP_L           (55),
		.PKT_BYTE_CNT_H            (54),
		.PKT_BYTE_CNT_L            (52),
		.PKT_PROTECTION_H          (76),
		.PKT_PROTECTION_L          (74),
		.PKT_RESPONSE_STATUS_H     (82),
		.PKT_RESPONSE_STATUS_L     (81),
		.PKT_BURST_SIZE_H          (58),
		.PKT_BURST_SIZE_L          (56),
		.PKT_ORI_BURST_SIZE_L      (83),
		.PKT_ORI_BURST_SIZE_H      (85),
		.ST_CHANNEL_W              (12),
		.ST_DATA_W                 (86),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent (
		.clk                     (pwm_pll_outclk0_clk),                                                                  //             clk.clk
		.reset                   (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                                 //       clk_reset.reset
		.m0_address              (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_010_src_ready),                                                           //              cp.ready
		.cp_valid                (cmd_xbar_mux_010_src_valid),                                                           //                .valid
		.cp_data                 (cmd_xbar_mux_010_src_data),                                                            //                .data
		.cp_startofpacket        (cmd_xbar_mux_010_src_startofpacket),                                                   //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_010_src_endofpacket),                                                     //                .endofpacket
		.cp_channel              (cmd_xbar_mux_010_src_channel),                                                         //                .channel
		.rf_sink_ready           (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid),       //                .valid
		.rdata_fifo_sink_data    (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data),        //                .data
		.rdata_fifo_src_ready    (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                //     (terminated)
		.m0_writeresponserequest (),                                                                                     //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                  //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (87),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pwm_pll_outclk0_clk),                                                                  //       clk.clk
		.reset             (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                                 // clk_reset.reset
		.in_data           (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                // (terminated)
		.csr_read          (1'b0),                                                                                 // (terminated)
		.csr_write         (1'b0),                                                                                 // (terminated)
		.csr_readdata      (),                                                                                     // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                 // (terminated)
		.almost_full_data  (),                                                                                     // (terminated)
		.almost_empty_data (),                                                                                     // (terminated)
		.in_empty          (1'b0),                                                                                 // (terminated)
		.out_empty         (),                                                                                     // (terminated)
		.in_error          (1'b0),                                                                                 // (terminated)
		.out_error         (),                                                                                     // (terminated)
		.in_channel        (1'b0),                                                                                 // (terminated)
		.out_channel       ()                                                                                      // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rdata_fifo (
		.clk               (pwm_pll_outclk0_clk),                                                            //       clk.clk
		.reset             (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.in_data           (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),  //        in.data
		.in_valid          (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid), //          .valid
		.in_ready          (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready), //          .ready
		.out_data          (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data),  //       out.data
		.out_valid         (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid), //          .valid
		.out_ready         (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready), //          .ready
		.csr_address       (2'b00),                                                                          // (terminated)
		.csr_read          (1'b0),                                                                           // (terminated)
		.csr_write         (1'b0),                                                                           // (terminated)
		.csr_readdata      (),                                                                               // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                           // (terminated)
		.almost_full_data  (),                                                                               // (terminated)
		.almost_empty_data (),                                                                               // (terminated)
		.in_startofpacket  (1'b0),                                                                           // (terminated)
		.in_endofpacket    (1'b0),                                                                           // (terminated)
		.out_startofpacket (),                                                                               // (terminated)
		.out_endofpacket   (),                                                                               // (terminated)
		.in_empty          (1'b0),                                                                           // (terminated)
		.out_empty         (),                                                                               // (terminated)
		.in_error          (1'b0),                                                                           // (terminated)
		.out_error         (),                                                                               // (terminated)
		.in_channel        (1'b0),                                                                           // (terminated)
		.out_channel       ()                                                                                // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (63),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (45),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (46),
		.PKT_TRANS_POSTED          (47),
		.PKT_TRANS_WRITE           (48),
		.PKT_TRANS_READ            (49),
		.PKT_TRANS_LOCK            (50),
		.PKT_SRC_ID_H              (68),
		.PKT_SRC_ID_L              (65),
		.PKT_DEST_ID_H             (72),
		.PKT_DEST_ID_L             (69),
		.PKT_BURSTWRAP_H           (55),
		.PKT_BURSTWRAP_L           (55),
		.PKT_BYTE_CNT_H            (54),
		.PKT_BYTE_CNT_L            (52),
		.PKT_PROTECTION_H          (76),
		.PKT_PROTECTION_L          (74),
		.PKT_RESPONSE_STATUS_H     (82),
		.PKT_RESPONSE_STATUS_L     (81),
		.PKT_BURST_SIZE_H          (58),
		.PKT_BURST_SIZE_L          (56),
		.PKT_ORI_BURST_SIZE_L      (83),
		.PKT_ORI_BURST_SIZE_H      (85),
		.ST_CHANNEL_W              (12),
		.ST_DATA_W                 (86),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent (
		.clk                     (pwm_pll_outclk0_clk),                                                                  //             clk.clk
		.reset                   (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                                 //       clk_reset.reset
		.m0_address              (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_011_src_ready),                                                           //              cp.ready
		.cp_valid                (cmd_xbar_mux_011_src_valid),                                                           //                .valid
		.cp_data                 (cmd_xbar_mux_011_src_data),                                                            //                .data
		.cp_startofpacket        (cmd_xbar_mux_011_src_startofpacket),                                                   //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_011_src_endofpacket),                                                     //                .endofpacket
		.cp_channel              (cmd_xbar_mux_011_src_channel),                                                         //                .channel
		.rf_sink_ready           (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid),       //                .valid
		.rdata_fifo_sink_data    (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data),        //                .data
		.rdata_fifo_src_ready    (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                //     (terminated)
		.m0_writeresponserequest (),                                                                                     //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                  //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (87),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pwm_pll_outclk0_clk),                                                                  //       clk.clk
		.reset             (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                                 // clk_reset.reset
		.in_data           (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                // (terminated)
		.csr_read          (1'b0),                                                                                 // (terminated)
		.csr_write         (1'b0),                                                                                 // (terminated)
		.csr_readdata      (),                                                                                     // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                 // (terminated)
		.almost_full_data  (),                                                                                     // (terminated)
		.almost_empty_data (),                                                                                     // (terminated)
		.in_empty          (1'b0),                                                                                 // (terminated)
		.out_empty         (),                                                                                     // (terminated)
		.in_error          (1'b0),                                                                                 // (terminated)
		.out_error         (),                                                                                     // (terminated)
		.in_channel        (1'b0),                                                                                 // (terminated)
		.out_channel       ()                                                                                      // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rdata_fifo (
		.clk               (pwm_pll_outclk0_clk),                                                            //       clk.clk
		.reset             (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.in_data           (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),  //        in.data
		.in_valid          (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid), //          .valid
		.in_ready          (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready), //          .ready
		.out_data          (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data),  //       out.data
		.out_valid         (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid), //          .valid
		.out_ready         (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready), //          .ready
		.csr_address       (2'b00),                                                                          // (terminated)
		.csr_read          (1'b0),                                                                           // (terminated)
		.csr_write         (1'b0),                                                                           // (terminated)
		.csr_readdata      (),                                                                               // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                           // (terminated)
		.almost_full_data  (),                                                                               // (terminated)
		.almost_empty_data (),                                                                               // (terminated)
		.in_startofpacket  (1'b0),                                                                           // (terminated)
		.in_endofpacket    (1'b0),                                                                           // (terminated)
		.out_startofpacket (),                                                                               // (terminated)
		.out_endofpacket   (),                                                                               // (terminated)
		.in_empty          (1'b0),                                                                           // (terminated)
		.out_empty         (),                                                                               // (terminated)
		.in_error          (1'b0),                                                                           // (terminated)
		.out_error         (),                                                                               // (terminated)
		.in_channel        (1'b0),                                                                           // (terminated)
		.out_channel       ()                                                                                // (terminated)
	);

	soc_system_mm_interconnect_5_addr_router addr_router (
		.sink_ready         (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_agent_cp_ready),         //      sink.ready
		.sink_valid         (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_agent_cp_valid),         //          .valid
		.sink_data          (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.sink_startofpacket (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (s0_io_clockcrossing_bridge_m0_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.clk                (system_pll_outclk1_clk),                                                                    //       clk.clk
		.reset              (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.src_ready          (addr_router_src_ready),                                                                     //       src.ready
		.src_valid          (addr_router_src_valid),                                                                     //          .valid
		.src_data           (addr_router_src_data),                                                                      //          .data
		.src_channel        (addr_router_src_channel),                                                                   //          .channel
		.src_startofpacket  (addr_router_src_startofpacket),                                                             //          .startofpacket
		.src_endofpacket    (addr_router_src_endofpacket)                                                                //          .endofpacket
	);

	soc_system_mm_interconnect_5_id_router id_router (
		.sink_ready         (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (timer_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (system_pll_outclk1_clk),                                                     //       clk.clk
		.reset              (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset),            // clk_reset.reset
		.src_ready          (id_router_src_ready),                                                        //       src.ready
		.src_valid          (id_router_src_valid),                                                        //          .valid
		.src_data           (id_router_src_data),                                                         //          .data
		.src_channel        (id_router_src_channel),                                                      //          .channel
		.src_startofpacket  (id_router_src_startofpacket),                                                //          .startofpacket
		.src_endofpacket    (id_router_src_endofpacket)                                                   //          .endofpacket
	);

	soc_system_mm_interconnect_5_id_router id_router_001 (
		.sink_ready         (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (jtag_uart_cpu_s0_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (system_pll_outclk1_clk),                                                                        //       clk.clk
		.reset              (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset),                               // clk_reset.reset
		.src_ready          (id_router_001_src_ready),                                                                       //       src.ready
		.src_valid          (id_router_001_src_valid),                                                                       //          .valid
		.src_data           (id_router_001_src_data),                                                                        //          .data
		.src_channel        (id_router_001_src_channel),                                                                     //          .channel
		.src_startofpacket  (id_router_001_src_startofpacket),                                                               //          .startofpacket
		.src_endofpacket    (id_router_001_src_endofpacket)                                                                  //          .endofpacket
	);

	soc_system_mm_interconnect_5_id_router id_router_002 (
		.sink_ready         (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (pio_alivetest_cpu_s0_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (system_pll_outclk1_clk),                                                             //       clk.clk
		.reset              (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset),                    // clk_reset.reset
		.src_ready          (id_router_002_src_ready),                                                            //       src.ready
		.src_valid          (id_router_002_src_valid),                                                            //          .valid
		.src_data           (id_router_002_src_data),                                                             //          .data
		.src_channel        (id_router_002_src_channel),                                                          //          .channel
		.src_startofpacket  (id_router_002_src_startofpacket),                                                    //          .startofpacket
		.src_endofpacket    (id_router_002_src_endofpacket)                                                       //          .endofpacket
	);

	soc_system_mm_interconnect_5_id_router id_router_003 (
		.sink_ready         (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (i2c_cpu_s0_mm_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (system_pll_outclk1_clk),                                                         //       clk.clk
		.reset              (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset),                // clk_reset.reset
		.src_ready          (id_router_003_src_ready),                                                        //       src.ready
		.src_valid          (id_router_003_src_valid),                                                        //          .valid
		.src_data           (id_router_003_src_data),                                                         //          .data
		.src_channel        (id_router_003_src_channel),                                                      //          .channel
		.src_startofpacket  (id_router_003_src_startofpacket),                                                //          .startofpacket
		.src_endofpacket    (id_router_003_src_endofpacket)                                                   //          .endofpacket
	);

	soc_system_mm_interconnect_5_id_router_004 id_router_004 (
		.sink_ready         (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (pwm_cpu_s0_1_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pwm_pll_outclk0_clk),                                                        //       clk.clk
		.reset              (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                       // clk_reset.reset
		.src_ready          (id_router_004_src_ready),                                                    //       src.ready
		.src_valid          (id_router_004_src_valid),                                                    //          .valid
		.src_data           (id_router_004_src_data),                                                     //          .data
		.src_channel        (id_router_004_src_channel),                                                  //          .channel
		.src_startofpacket  (id_router_004_src_startofpacket),                                            //          .startofpacket
		.src_endofpacket    (id_router_004_src_endofpacket)                                               //          .endofpacket
	);

	soc_system_mm_interconnect_5_id_router_004 id_router_005 (
		.sink_ready         (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (pwm_cpu_s0_2_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pwm_pll_outclk0_clk),                                                        //       clk.clk
		.reset              (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                       // clk_reset.reset
		.src_ready          (id_router_005_src_ready),                                                    //       src.ready
		.src_valid          (id_router_005_src_valid),                                                    //          .valid
		.src_data           (id_router_005_src_data),                                                     //          .data
		.src_channel        (id_router_005_src_channel),                                                  //          .channel
		.src_startofpacket  (id_router_005_src_startofpacket),                                            //          .startofpacket
		.src_endofpacket    (id_router_005_src_endofpacket)                                               //          .endofpacket
	);

	soc_system_mm_interconnect_5_id_router_004 id_router_006 (
		.sink_ready         (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (pwm_cpu_s0_3_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pwm_pll_outclk0_clk),                                                        //       clk.clk
		.reset              (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                       // clk_reset.reset
		.src_ready          (id_router_006_src_ready),                                                    //       src.ready
		.src_valid          (id_router_006_src_valid),                                                    //          .valid
		.src_data           (id_router_006_src_data),                                                     //          .data
		.src_channel        (id_router_006_src_channel),                                                  //          .channel
		.src_startofpacket  (id_router_006_src_startofpacket),                                            //          .startofpacket
		.src_endofpacket    (id_router_006_src_endofpacket)                                               //          .endofpacket
	);

	soc_system_mm_interconnect_5_id_router_004 id_router_007 (
		.sink_ready         (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (pwm_cpu_s0_4_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pwm_pll_outclk0_clk),                                                        //       clk.clk
		.reset              (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                       // clk_reset.reset
		.src_ready          (id_router_007_src_ready),                                                    //       src.ready
		.src_valid          (id_router_007_src_valid),                                                    //          .valid
		.src_data           (id_router_007_src_data),                                                     //          .data
		.src_channel        (id_router_007_src_channel),                                                  //          .channel
		.src_startofpacket  (id_router_007_src_startofpacket),                                            //          .startofpacket
		.src_endofpacket    (id_router_007_src_endofpacket)                                               //          .endofpacket
	);

	soc_system_mm_interconnect_5_id_router_004 id_router_008 (
		.sink_ready         (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (pwm_cpu_s0_5_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pwm_pll_outclk0_clk),                                                        //       clk.clk
		.reset              (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                       // clk_reset.reset
		.src_ready          (id_router_008_src_ready),                                                    //       src.ready
		.src_valid          (id_router_008_src_valid),                                                    //          .valid
		.src_data           (id_router_008_src_data),                                                     //          .data
		.src_channel        (id_router_008_src_channel),                                                  //          .channel
		.src_startofpacket  (id_router_008_src_startofpacket),                                            //          .startofpacket
		.src_endofpacket    (id_router_008_src_endofpacket)                                               //          .endofpacket
	);

	soc_system_mm_interconnect_5_id_router_004 id_router_009 (
		.sink_ready         (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (pwm_cpu_s0_6_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pwm_pll_outclk0_clk),                                                        //       clk.clk
		.reset              (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                       // clk_reset.reset
		.src_ready          (id_router_009_src_ready),                                                    //       src.ready
		.src_valid          (id_router_009_src_valid),                                                    //          .valid
		.src_data           (id_router_009_src_data),                                                     //          .data
		.src_channel        (id_router_009_src_channel),                                                  //          .channel
		.src_startofpacket  (id_router_009_src_startofpacket),                                            //          .startofpacket
		.src_endofpacket    (id_router_009_src_endofpacket)                                               //          .endofpacket
	);

	soc_system_mm_interconnect_5_id_router_004 id_router_010 (
		.sink_ready         (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (pwm_cpu_s0_7_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pwm_pll_outclk0_clk),                                                        //       clk.clk
		.reset              (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                       // clk_reset.reset
		.src_ready          (id_router_010_src_ready),                                                    //       src.ready
		.src_valid          (id_router_010_src_valid),                                                    //          .valid
		.src_data           (id_router_010_src_data),                                                     //          .data
		.src_channel        (id_router_010_src_channel),                                                  //          .channel
		.src_startofpacket  (id_router_010_src_startofpacket),                                            //          .startofpacket
		.src_endofpacket    (id_router_010_src_endofpacket)                                               //          .endofpacket
	);

	soc_system_mm_interconnect_5_id_router_004 id_router_011 (
		.sink_ready         (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (pwm_cpu_s0_8_s0_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pwm_pll_outclk0_clk),                                                        //       clk.clk
		.reset              (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),                       // clk_reset.reset
		.src_ready          (id_router_011_src_ready),                                                    //       src.ready
		.src_valid          (id_router_011_src_valid),                                                    //          .valid
		.src_data           (id_router_011_src_data),                                                     //          .data
		.src_channel        (id_router_011_src_channel),                                                  //          .channel
		.src_startofpacket  (id_router_011_src_startofpacket),                                            //          .startofpacket
		.src_endofpacket    (id_router_011_src_endofpacket)                                               //          .endofpacket
	);

	altera_merlin_traffic_limiter #(
		.PKT_DEST_ID_H             (72),
		.PKT_DEST_ID_L             (69),
		.PKT_SRC_ID_H              (68),
		.PKT_SRC_ID_L              (65),
		.PKT_TRANS_POSTED          (47),
		.PKT_TRANS_WRITE           (48),
		.MAX_OUTSTANDING_RESPONSES (5),
		.PIPELINED                 (0),
		.ST_DATA_W                 (86),
		.ST_CHANNEL_W              (12),
		.VALID_WIDTH               (12),
		.ENFORCE_ORDER             (1),
		.PREVENT_HAZARDS           (0),
		.PKT_BYTE_CNT_H            (54),
		.PKT_BYTE_CNT_L            (52),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.REORDER                   (0)
	) limiter (
		.clk                    (system_pll_outclk1_clk),                                          //       clk.clk
		.reset                  (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.cmd_sink_ready         (addr_router_src_ready),                                           //  cmd_sink.ready
		.cmd_sink_valid         (addr_router_src_valid),                                           //          .valid
		.cmd_sink_data          (addr_router_src_data),                                            //          .data
		.cmd_sink_channel       (addr_router_src_channel),                                         //          .channel
		.cmd_sink_startofpacket (addr_router_src_startofpacket),                                   //          .startofpacket
		.cmd_sink_endofpacket   (addr_router_src_endofpacket),                                     //          .endofpacket
		.cmd_src_ready          (limiter_cmd_src_ready),                                           //   cmd_src.ready
		.cmd_src_data           (limiter_cmd_src_data),                                            //          .data
		.cmd_src_channel        (limiter_cmd_src_channel),                                         //          .channel
		.cmd_src_startofpacket  (limiter_cmd_src_startofpacket),                                   //          .startofpacket
		.cmd_src_endofpacket    (limiter_cmd_src_endofpacket),                                     //          .endofpacket
		.rsp_sink_ready         (rsp_xbar_mux_src_ready),                                          //  rsp_sink.ready
		.rsp_sink_valid         (rsp_xbar_mux_src_valid),                                          //          .valid
		.rsp_sink_channel       (rsp_xbar_mux_src_channel),                                        //          .channel
		.rsp_sink_data          (rsp_xbar_mux_src_data),                                           //          .data
		.rsp_sink_startofpacket (rsp_xbar_mux_src_startofpacket),                                  //          .startofpacket
		.rsp_sink_endofpacket   (rsp_xbar_mux_src_endofpacket),                                    //          .endofpacket
		.rsp_src_ready          (limiter_rsp_src_ready),                                           //   rsp_src.ready
		.rsp_src_valid          (limiter_rsp_src_valid),                                           //          .valid
		.rsp_src_data           (limiter_rsp_src_data),                                            //          .data
		.rsp_src_channel        (limiter_rsp_src_channel),                                         //          .channel
		.rsp_src_startofpacket  (limiter_rsp_src_startofpacket),                                   //          .startofpacket
		.rsp_src_endofpacket    (limiter_rsp_src_endofpacket),                                     //          .endofpacket
		.cmd_src_valid          (limiter_cmd_valid_data)                                           // cmd_valid.data
	);

	soc_system_mm_interconnect_5_cmd_xbar_demux cmd_xbar_demux (
		.clk                 (system_pll_outclk1_clk),                                          //        clk.clk
		.reset               (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset), //  clk_reset.reset
		.sink_ready          (limiter_cmd_src_ready),                                           //       sink.ready
		.sink_channel        (limiter_cmd_src_channel),                                         //           .channel
		.sink_data           (limiter_cmd_src_data),                                            //           .data
		.sink_startofpacket  (limiter_cmd_src_startofpacket),                                   //           .startofpacket
		.sink_endofpacket    (limiter_cmd_src_endofpacket),                                     //           .endofpacket
		.sink_valid          (limiter_cmd_valid_data),                                          // sink_valid.data
		.src0_ready          (cmd_xbar_demux_src0_ready),                                       //       src0.ready
		.src0_valid          (cmd_xbar_demux_src0_valid),                                       //           .valid
		.src0_data           (cmd_xbar_demux_src0_data),                                        //           .data
		.src0_channel        (cmd_xbar_demux_src0_channel),                                     //           .channel
		.src0_startofpacket  (cmd_xbar_demux_src0_startofpacket),                               //           .startofpacket
		.src0_endofpacket    (cmd_xbar_demux_src0_endofpacket),                                 //           .endofpacket
		.src1_ready          (cmd_xbar_demux_src1_ready),                                       //       src1.ready
		.src1_valid          (cmd_xbar_demux_src1_valid),                                       //           .valid
		.src1_data           (cmd_xbar_demux_src1_data),                                        //           .data
		.src1_channel        (cmd_xbar_demux_src1_channel),                                     //           .channel
		.src1_startofpacket  (cmd_xbar_demux_src1_startofpacket),                               //           .startofpacket
		.src1_endofpacket    (cmd_xbar_demux_src1_endofpacket),                                 //           .endofpacket
		.src2_ready          (cmd_xbar_demux_src2_ready),                                       //       src2.ready
		.src2_valid          (cmd_xbar_demux_src2_valid),                                       //           .valid
		.src2_data           (cmd_xbar_demux_src2_data),                                        //           .data
		.src2_channel        (cmd_xbar_demux_src2_channel),                                     //           .channel
		.src2_startofpacket  (cmd_xbar_demux_src2_startofpacket),                               //           .startofpacket
		.src2_endofpacket    (cmd_xbar_demux_src2_endofpacket),                                 //           .endofpacket
		.src3_ready          (cmd_xbar_demux_src3_ready),                                       //       src3.ready
		.src3_valid          (cmd_xbar_demux_src3_valid),                                       //           .valid
		.src3_data           (cmd_xbar_demux_src3_data),                                        //           .data
		.src3_channel        (cmd_xbar_demux_src3_channel),                                     //           .channel
		.src3_startofpacket  (cmd_xbar_demux_src3_startofpacket),                               //           .startofpacket
		.src3_endofpacket    (cmd_xbar_demux_src3_endofpacket),                                 //           .endofpacket
		.src4_ready          (cmd_xbar_demux_src4_ready),                                       //       src4.ready
		.src4_valid          (cmd_xbar_demux_src4_valid),                                       //           .valid
		.src4_data           (cmd_xbar_demux_src4_data),                                        //           .data
		.src4_channel        (cmd_xbar_demux_src4_channel),                                     //           .channel
		.src4_startofpacket  (cmd_xbar_demux_src4_startofpacket),                               //           .startofpacket
		.src4_endofpacket    (cmd_xbar_demux_src4_endofpacket),                                 //           .endofpacket
		.src5_ready          (cmd_xbar_demux_src5_ready),                                       //       src5.ready
		.src5_valid          (cmd_xbar_demux_src5_valid),                                       //           .valid
		.src5_data           (cmd_xbar_demux_src5_data),                                        //           .data
		.src5_channel        (cmd_xbar_demux_src5_channel),                                     //           .channel
		.src5_startofpacket  (cmd_xbar_demux_src5_startofpacket),                               //           .startofpacket
		.src5_endofpacket    (cmd_xbar_demux_src5_endofpacket),                                 //           .endofpacket
		.src6_ready          (cmd_xbar_demux_src6_ready),                                       //       src6.ready
		.src6_valid          (cmd_xbar_demux_src6_valid),                                       //           .valid
		.src6_data           (cmd_xbar_demux_src6_data),                                        //           .data
		.src6_channel        (cmd_xbar_demux_src6_channel),                                     //           .channel
		.src6_startofpacket  (cmd_xbar_demux_src6_startofpacket),                               //           .startofpacket
		.src6_endofpacket    (cmd_xbar_demux_src6_endofpacket),                                 //           .endofpacket
		.src7_ready          (cmd_xbar_demux_src7_ready),                                       //       src7.ready
		.src7_valid          (cmd_xbar_demux_src7_valid),                                       //           .valid
		.src7_data           (cmd_xbar_demux_src7_data),                                        //           .data
		.src7_channel        (cmd_xbar_demux_src7_channel),                                     //           .channel
		.src7_startofpacket  (cmd_xbar_demux_src7_startofpacket),                               //           .startofpacket
		.src7_endofpacket    (cmd_xbar_demux_src7_endofpacket),                                 //           .endofpacket
		.src8_ready          (cmd_xbar_demux_src8_ready),                                       //       src8.ready
		.src8_valid          (cmd_xbar_demux_src8_valid),                                       //           .valid
		.src8_data           (cmd_xbar_demux_src8_data),                                        //           .data
		.src8_channel        (cmd_xbar_demux_src8_channel),                                     //           .channel
		.src8_startofpacket  (cmd_xbar_demux_src8_startofpacket),                               //           .startofpacket
		.src8_endofpacket    (cmd_xbar_demux_src8_endofpacket),                                 //           .endofpacket
		.src9_ready          (cmd_xbar_demux_src9_ready),                                       //       src9.ready
		.src9_valid          (cmd_xbar_demux_src9_valid),                                       //           .valid
		.src9_data           (cmd_xbar_demux_src9_data),                                        //           .data
		.src9_channel        (cmd_xbar_demux_src9_channel),                                     //           .channel
		.src9_startofpacket  (cmd_xbar_demux_src9_startofpacket),                               //           .startofpacket
		.src9_endofpacket    (cmd_xbar_demux_src9_endofpacket),                                 //           .endofpacket
		.src10_ready         (cmd_xbar_demux_src10_ready),                                      //      src10.ready
		.src10_valid         (cmd_xbar_demux_src10_valid),                                      //           .valid
		.src10_data          (cmd_xbar_demux_src10_data),                                       //           .data
		.src10_channel       (cmd_xbar_demux_src10_channel),                                    //           .channel
		.src10_startofpacket (cmd_xbar_demux_src10_startofpacket),                              //           .startofpacket
		.src10_endofpacket   (cmd_xbar_demux_src10_endofpacket),                                //           .endofpacket
		.src11_ready         (cmd_xbar_demux_src11_ready),                                      //      src11.ready
		.src11_valid         (cmd_xbar_demux_src11_valid),                                      //           .valid
		.src11_data          (cmd_xbar_demux_src11_data),                                       //           .data
		.src11_channel       (cmd_xbar_demux_src11_channel),                                    //           .channel
		.src11_startofpacket (cmd_xbar_demux_src11_startofpacket),                              //           .startofpacket
		.src11_endofpacket   (cmd_xbar_demux_src11_endofpacket)                                 //           .endofpacket
	);

	soc_system_mm_interconnect_5_cmd_xbar_mux cmd_xbar_mux (
		.clk                 (system_pll_outclk1_clk),                                          //       clk.clk
		.reset               (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_src_ready),                                          //       src.ready
		.src_valid           (cmd_xbar_mux_src_valid),                                          //          .valid
		.src_data            (cmd_xbar_mux_src_data),                                           //          .data
		.src_channel         (cmd_xbar_mux_src_channel),                                        //          .channel
		.src_startofpacket   (cmd_xbar_mux_src_startofpacket),                                  //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_src_endofpacket),                                    //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src0_ready),                                       //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src0_valid),                                       //          .valid
		.sink0_channel       (cmd_xbar_demux_src0_channel),                                     //          .channel
		.sink0_data          (cmd_xbar_demux_src0_data),                                        //          .data
		.sink0_startofpacket (cmd_xbar_demux_src0_startofpacket),                               //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src0_endofpacket)                                  //          .endofpacket
	);

	soc_system_mm_interconnect_5_cmd_xbar_mux cmd_xbar_mux_001 (
		.clk                 (system_pll_outclk1_clk),                                          //       clk.clk
		.reset               (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_001_src_ready),                                      //       src.ready
		.src_valid           (cmd_xbar_mux_001_src_valid),                                      //          .valid
		.src_data            (cmd_xbar_mux_001_src_data),                                       //          .data
		.src_channel         (cmd_xbar_mux_001_src_channel),                                    //          .channel
		.src_startofpacket   (cmd_xbar_mux_001_src_startofpacket),                              //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_001_src_endofpacket),                                //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src1_ready),                                       //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src1_valid),                                       //          .valid
		.sink0_channel       (cmd_xbar_demux_src1_channel),                                     //          .channel
		.sink0_data          (cmd_xbar_demux_src1_data),                                        //          .data
		.sink0_startofpacket (cmd_xbar_demux_src1_startofpacket),                               //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src1_endofpacket)                                  //          .endofpacket
	);

	soc_system_mm_interconnect_5_cmd_xbar_mux cmd_xbar_mux_002 (
		.clk                 (system_pll_outclk1_clk),                                          //       clk.clk
		.reset               (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_002_src_ready),                                      //       src.ready
		.src_valid           (cmd_xbar_mux_002_src_valid),                                      //          .valid
		.src_data            (cmd_xbar_mux_002_src_data),                                       //          .data
		.src_channel         (cmd_xbar_mux_002_src_channel),                                    //          .channel
		.src_startofpacket   (cmd_xbar_mux_002_src_startofpacket),                              //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_002_src_endofpacket),                                //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src2_ready),                                       //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src2_valid),                                       //          .valid
		.sink0_channel       (cmd_xbar_demux_src2_channel),                                     //          .channel
		.sink0_data          (cmd_xbar_demux_src2_data),                                        //          .data
		.sink0_startofpacket (cmd_xbar_demux_src2_startofpacket),                               //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src2_endofpacket)                                  //          .endofpacket
	);

	soc_system_mm_interconnect_5_cmd_xbar_mux cmd_xbar_mux_003 (
		.clk                 (system_pll_outclk1_clk),                                          //       clk.clk
		.reset               (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_003_src_ready),                                      //       src.ready
		.src_valid           (cmd_xbar_mux_003_src_valid),                                      //          .valid
		.src_data            (cmd_xbar_mux_003_src_data),                                       //          .data
		.src_channel         (cmd_xbar_mux_003_src_channel),                                    //          .channel
		.src_startofpacket   (cmd_xbar_mux_003_src_startofpacket),                              //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_003_src_endofpacket),                                //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src3_ready),                                       //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src3_valid),                                       //          .valid
		.sink0_channel       (cmd_xbar_demux_src3_channel),                                     //          .channel
		.sink0_data          (cmd_xbar_demux_src3_data),                                        //          .data
		.sink0_startofpacket (cmd_xbar_demux_src3_startofpacket),                               //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src3_endofpacket)                                  //          .endofpacket
	);

	soc_system_mm_interconnect_5_cmd_xbar_mux_004 cmd_xbar_mux_004 (
		.clk                 (pwm_pll_outclk0_clk),                                  //       clk.clk
		.reset               (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_004_src_ready),                           //       src.ready
		.src_valid           (cmd_xbar_mux_004_src_valid),                           //          .valid
		.src_data            (cmd_xbar_mux_004_src_data),                            //          .data
		.src_channel         (cmd_xbar_mux_004_src_channel),                         //          .channel
		.src_startofpacket   (cmd_xbar_mux_004_src_startofpacket),                   //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_004_src_endofpacket),                     //          .endofpacket
		.sink0_ready         (crosser_out_ready),                                    //     sink0.ready
		.sink0_valid         (crosser_out_valid),                                    //          .valid
		.sink0_channel       (crosser_out_channel),                                  //          .channel
		.sink0_data          (crosser_out_data),                                     //          .data
		.sink0_startofpacket (crosser_out_startofpacket),                            //          .startofpacket
		.sink0_endofpacket   (crosser_out_endofpacket)                               //          .endofpacket
	);

	soc_system_mm_interconnect_5_cmd_xbar_mux_004 cmd_xbar_mux_005 (
		.clk                 (pwm_pll_outclk0_clk),                                  //       clk.clk
		.reset               (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_005_src_ready),                           //       src.ready
		.src_valid           (cmd_xbar_mux_005_src_valid),                           //          .valid
		.src_data            (cmd_xbar_mux_005_src_data),                            //          .data
		.src_channel         (cmd_xbar_mux_005_src_channel),                         //          .channel
		.src_startofpacket   (cmd_xbar_mux_005_src_startofpacket),                   //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_005_src_endofpacket),                     //          .endofpacket
		.sink0_ready         (crosser_001_out_ready),                                //     sink0.ready
		.sink0_valid         (crosser_001_out_valid),                                //          .valid
		.sink0_channel       (crosser_001_out_channel),                              //          .channel
		.sink0_data          (crosser_001_out_data),                                 //          .data
		.sink0_startofpacket (crosser_001_out_startofpacket),                        //          .startofpacket
		.sink0_endofpacket   (crosser_001_out_endofpacket)                           //          .endofpacket
	);

	soc_system_mm_interconnect_5_cmd_xbar_mux_004 cmd_xbar_mux_006 (
		.clk                 (pwm_pll_outclk0_clk),                                  //       clk.clk
		.reset               (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_006_src_ready),                           //       src.ready
		.src_valid           (cmd_xbar_mux_006_src_valid),                           //          .valid
		.src_data            (cmd_xbar_mux_006_src_data),                            //          .data
		.src_channel         (cmd_xbar_mux_006_src_channel),                         //          .channel
		.src_startofpacket   (cmd_xbar_mux_006_src_startofpacket),                   //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_006_src_endofpacket),                     //          .endofpacket
		.sink0_ready         (crosser_002_out_ready),                                //     sink0.ready
		.sink0_valid         (crosser_002_out_valid),                                //          .valid
		.sink0_channel       (crosser_002_out_channel),                              //          .channel
		.sink0_data          (crosser_002_out_data),                                 //          .data
		.sink0_startofpacket (crosser_002_out_startofpacket),                        //          .startofpacket
		.sink0_endofpacket   (crosser_002_out_endofpacket)                           //          .endofpacket
	);

	soc_system_mm_interconnect_5_cmd_xbar_mux_004 cmd_xbar_mux_007 (
		.clk                 (pwm_pll_outclk0_clk),                                  //       clk.clk
		.reset               (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_007_src_ready),                           //       src.ready
		.src_valid           (cmd_xbar_mux_007_src_valid),                           //          .valid
		.src_data            (cmd_xbar_mux_007_src_data),                            //          .data
		.src_channel         (cmd_xbar_mux_007_src_channel),                         //          .channel
		.src_startofpacket   (cmd_xbar_mux_007_src_startofpacket),                   //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_007_src_endofpacket),                     //          .endofpacket
		.sink0_ready         (crosser_003_out_ready),                                //     sink0.ready
		.sink0_valid         (crosser_003_out_valid),                                //          .valid
		.sink0_channel       (crosser_003_out_channel),                              //          .channel
		.sink0_data          (crosser_003_out_data),                                 //          .data
		.sink0_startofpacket (crosser_003_out_startofpacket),                        //          .startofpacket
		.sink0_endofpacket   (crosser_003_out_endofpacket)                           //          .endofpacket
	);

	soc_system_mm_interconnect_5_cmd_xbar_mux_004 cmd_xbar_mux_008 (
		.clk                 (pwm_pll_outclk0_clk),                                  //       clk.clk
		.reset               (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_008_src_ready),                           //       src.ready
		.src_valid           (cmd_xbar_mux_008_src_valid),                           //          .valid
		.src_data            (cmd_xbar_mux_008_src_data),                            //          .data
		.src_channel         (cmd_xbar_mux_008_src_channel),                         //          .channel
		.src_startofpacket   (cmd_xbar_mux_008_src_startofpacket),                   //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_008_src_endofpacket),                     //          .endofpacket
		.sink0_ready         (crosser_004_out_ready),                                //     sink0.ready
		.sink0_valid         (crosser_004_out_valid),                                //          .valid
		.sink0_channel       (crosser_004_out_channel),                              //          .channel
		.sink0_data          (crosser_004_out_data),                                 //          .data
		.sink0_startofpacket (crosser_004_out_startofpacket),                        //          .startofpacket
		.sink0_endofpacket   (crosser_004_out_endofpacket)                           //          .endofpacket
	);

	soc_system_mm_interconnect_5_cmd_xbar_mux_004 cmd_xbar_mux_009 (
		.clk                 (pwm_pll_outclk0_clk),                                  //       clk.clk
		.reset               (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_009_src_ready),                           //       src.ready
		.src_valid           (cmd_xbar_mux_009_src_valid),                           //          .valid
		.src_data            (cmd_xbar_mux_009_src_data),                            //          .data
		.src_channel         (cmd_xbar_mux_009_src_channel),                         //          .channel
		.src_startofpacket   (cmd_xbar_mux_009_src_startofpacket),                   //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_009_src_endofpacket),                     //          .endofpacket
		.sink0_ready         (crosser_005_out_ready),                                //     sink0.ready
		.sink0_valid         (crosser_005_out_valid),                                //          .valid
		.sink0_channel       (crosser_005_out_channel),                              //          .channel
		.sink0_data          (crosser_005_out_data),                                 //          .data
		.sink0_startofpacket (crosser_005_out_startofpacket),                        //          .startofpacket
		.sink0_endofpacket   (crosser_005_out_endofpacket)                           //          .endofpacket
	);

	soc_system_mm_interconnect_5_cmd_xbar_mux_004 cmd_xbar_mux_010 (
		.clk                 (pwm_pll_outclk0_clk),                                  //       clk.clk
		.reset               (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_010_src_ready),                           //       src.ready
		.src_valid           (cmd_xbar_mux_010_src_valid),                           //          .valid
		.src_data            (cmd_xbar_mux_010_src_data),                            //          .data
		.src_channel         (cmd_xbar_mux_010_src_channel),                         //          .channel
		.src_startofpacket   (cmd_xbar_mux_010_src_startofpacket),                   //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_010_src_endofpacket),                     //          .endofpacket
		.sink0_ready         (crosser_006_out_ready),                                //     sink0.ready
		.sink0_valid         (crosser_006_out_valid),                                //          .valid
		.sink0_channel       (crosser_006_out_channel),                              //          .channel
		.sink0_data          (crosser_006_out_data),                                 //          .data
		.sink0_startofpacket (crosser_006_out_startofpacket),                        //          .startofpacket
		.sink0_endofpacket   (crosser_006_out_endofpacket)                           //          .endofpacket
	);

	soc_system_mm_interconnect_5_cmd_xbar_mux_004 cmd_xbar_mux_011 (
		.clk                 (pwm_pll_outclk0_clk),                                  //       clk.clk
		.reset               (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_011_src_ready),                           //       src.ready
		.src_valid           (cmd_xbar_mux_011_src_valid),                           //          .valid
		.src_data            (cmd_xbar_mux_011_src_data),                            //          .data
		.src_channel         (cmd_xbar_mux_011_src_channel),                         //          .channel
		.src_startofpacket   (cmd_xbar_mux_011_src_startofpacket),                   //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_011_src_endofpacket),                     //          .endofpacket
		.sink0_ready         (crosser_007_out_ready),                                //     sink0.ready
		.sink0_valid         (crosser_007_out_valid),                                //          .valid
		.sink0_channel       (crosser_007_out_channel),                              //          .channel
		.sink0_data          (crosser_007_out_data),                                 //          .data
		.sink0_startofpacket (crosser_007_out_startofpacket),                        //          .startofpacket
		.sink0_endofpacket   (crosser_007_out_endofpacket)                           //          .endofpacket
	);

	soc_system_mm_interconnect_5_rsp_xbar_demux rsp_xbar_demux (
		.clk                (system_pll_outclk1_clk),                                          //       clk.clk
		.reset              (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_src_ready),                                             //      sink.ready
		.sink_channel       (id_router_src_channel),                                           //          .channel
		.sink_data          (id_router_src_data),                                              //          .data
		.sink_startofpacket (id_router_src_startofpacket),                                     //          .startofpacket
		.sink_endofpacket   (id_router_src_endofpacket),                                       //          .endofpacket
		.sink_valid         (id_router_src_valid),                                             //          .valid
		.src0_ready         (rsp_xbar_demux_src0_ready),                                       //      src0.ready
		.src0_valid         (rsp_xbar_demux_src0_valid),                                       //          .valid
		.src0_data          (rsp_xbar_demux_src0_data),                                        //          .data
		.src0_channel       (rsp_xbar_demux_src0_channel),                                     //          .channel
		.src0_startofpacket (rsp_xbar_demux_src0_startofpacket),                               //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_src0_endofpacket)                                  //          .endofpacket
	);

	soc_system_mm_interconnect_5_rsp_xbar_demux rsp_xbar_demux_001 (
		.clk                (system_pll_outclk1_clk),                                          //       clk.clk
		.reset              (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_001_src_ready),                                         //      sink.ready
		.sink_channel       (id_router_001_src_channel),                                       //          .channel
		.sink_data          (id_router_001_src_data),                                          //          .data
		.sink_startofpacket (id_router_001_src_startofpacket),                                 //          .startofpacket
		.sink_endofpacket   (id_router_001_src_endofpacket),                                   //          .endofpacket
		.sink_valid         (id_router_001_src_valid),                                         //          .valid
		.src0_ready         (rsp_xbar_demux_001_src0_ready),                                   //      src0.ready
		.src0_valid         (rsp_xbar_demux_001_src0_valid),                                   //          .valid
		.src0_data          (rsp_xbar_demux_001_src0_data),                                    //          .data
		.src0_channel       (rsp_xbar_demux_001_src0_channel),                                 //          .channel
		.src0_startofpacket (rsp_xbar_demux_001_src0_startofpacket),                           //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_001_src0_endofpacket)                              //          .endofpacket
	);

	soc_system_mm_interconnect_5_rsp_xbar_demux rsp_xbar_demux_002 (
		.clk                (system_pll_outclk1_clk),                                          //       clk.clk
		.reset              (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_002_src_ready),                                         //      sink.ready
		.sink_channel       (id_router_002_src_channel),                                       //          .channel
		.sink_data          (id_router_002_src_data),                                          //          .data
		.sink_startofpacket (id_router_002_src_startofpacket),                                 //          .startofpacket
		.sink_endofpacket   (id_router_002_src_endofpacket),                                   //          .endofpacket
		.sink_valid         (id_router_002_src_valid),                                         //          .valid
		.src0_ready         (rsp_xbar_demux_002_src0_ready),                                   //      src0.ready
		.src0_valid         (rsp_xbar_demux_002_src0_valid),                                   //          .valid
		.src0_data          (rsp_xbar_demux_002_src0_data),                                    //          .data
		.src0_channel       (rsp_xbar_demux_002_src0_channel),                                 //          .channel
		.src0_startofpacket (rsp_xbar_demux_002_src0_startofpacket),                           //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_002_src0_endofpacket)                              //          .endofpacket
	);

	soc_system_mm_interconnect_5_rsp_xbar_demux rsp_xbar_demux_003 (
		.clk                (system_pll_outclk1_clk),                                          //       clk.clk
		.reset              (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_003_src_ready),                                         //      sink.ready
		.sink_channel       (id_router_003_src_channel),                                       //          .channel
		.sink_data          (id_router_003_src_data),                                          //          .data
		.sink_startofpacket (id_router_003_src_startofpacket),                                 //          .startofpacket
		.sink_endofpacket   (id_router_003_src_endofpacket),                                   //          .endofpacket
		.sink_valid         (id_router_003_src_valid),                                         //          .valid
		.src0_ready         (rsp_xbar_demux_003_src0_ready),                                   //      src0.ready
		.src0_valid         (rsp_xbar_demux_003_src0_valid),                                   //          .valid
		.src0_data          (rsp_xbar_demux_003_src0_data),                                    //          .data
		.src0_channel       (rsp_xbar_demux_003_src0_channel),                                 //          .channel
		.src0_startofpacket (rsp_xbar_demux_003_src0_startofpacket),                           //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_003_src0_endofpacket)                              //          .endofpacket
	);

	soc_system_mm_interconnect_5_rsp_xbar_demux_004 rsp_xbar_demux_004 (
		.clk                (pwm_pll_outclk0_clk),                                  //       clk.clk
		.reset              (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_004_src_ready),                              //      sink.ready
		.sink_channel       (id_router_004_src_channel),                            //          .channel
		.sink_data          (id_router_004_src_data),                               //          .data
		.sink_startofpacket (id_router_004_src_startofpacket),                      //          .startofpacket
		.sink_endofpacket   (id_router_004_src_endofpacket),                        //          .endofpacket
		.sink_valid         (id_router_004_src_valid),                              //          .valid
		.src0_ready         (rsp_xbar_demux_004_src0_ready),                        //      src0.ready
		.src0_valid         (rsp_xbar_demux_004_src0_valid),                        //          .valid
		.src0_data          (rsp_xbar_demux_004_src0_data),                         //          .data
		.src0_channel       (rsp_xbar_demux_004_src0_channel),                      //          .channel
		.src0_startofpacket (rsp_xbar_demux_004_src0_startofpacket),                //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_004_src0_endofpacket)                   //          .endofpacket
	);

	soc_system_mm_interconnect_5_rsp_xbar_demux_004 rsp_xbar_demux_005 (
		.clk                (pwm_pll_outclk0_clk),                                  //       clk.clk
		.reset              (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_005_src_ready),                              //      sink.ready
		.sink_channel       (id_router_005_src_channel),                            //          .channel
		.sink_data          (id_router_005_src_data),                               //          .data
		.sink_startofpacket (id_router_005_src_startofpacket),                      //          .startofpacket
		.sink_endofpacket   (id_router_005_src_endofpacket),                        //          .endofpacket
		.sink_valid         (id_router_005_src_valid),                              //          .valid
		.src0_ready         (rsp_xbar_demux_005_src0_ready),                        //      src0.ready
		.src0_valid         (rsp_xbar_demux_005_src0_valid),                        //          .valid
		.src0_data          (rsp_xbar_demux_005_src0_data),                         //          .data
		.src0_channel       (rsp_xbar_demux_005_src0_channel),                      //          .channel
		.src0_startofpacket (rsp_xbar_demux_005_src0_startofpacket),                //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_005_src0_endofpacket)                   //          .endofpacket
	);

	soc_system_mm_interconnect_5_rsp_xbar_demux_004 rsp_xbar_demux_006 (
		.clk                (pwm_pll_outclk0_clk),                                  //       clk.clk
		.reset              (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_006_src_ready),                              //      sink.ready
		.sink_channel       (id_router_006_src_channel),                            //          .channel
		.sink_data          (id_router_006_src_data),                               //          .data
		.sink_startofpacket (id_router_006_src_startofpacket),                      //          .startofpacket
		.sink_endofpacket   (id_router_006_src_endofpacket),                        //          .endofpacket
		.sink_valid         (id_router_006_src_valid),                              //          .valid
		.src0_ready         (rsp_xbar_demux_006_src0_ready),                        //      src0.ready
		.src0_valid         (rsp_xbar_demux_006_src0_valid),                        //          .valid
		.src0_data          (rsp_xbar_demux_006_src0_data),                         //          .data
		.src0_channel       (rsp_xbar_demux_006_src0_channel),                      //          .channel
		.src0_startofpacket (rsp_xbar_demux_006_src0_startofpacket),                //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_006_src0_endofpacket)                   //          .endofpacket
	);

	soc_system_mm_interconnect_5_rsp_xbar_demux_004 rsp_xbar_demux_007 (
		.clk                (pwm_pll_outclk0_clk),                                  //       clk.clk
		.reset              (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_007_src_ready),                              //      sink.ready
		.sink_channel       (id_router_007_src_channel),                            //          .channel
		.sink_data          (id_router_007_src_data),                               //          .data
		.sink_startofpacket (id_router_007_src_startofpacket),                      //          .startofpacket
		.sink_endofpacket   (id_router_007_src_endofpacket),                        //          .endofpacket
		.sink_valid         (id_router_007_src_valid),                              //          .valid
		.src0_ready         (rsp_xbar_demux_007_src0_ready),                        //      src0.ready
		.src0_valid         (rsp_xbar_demux_007_src0_valid),                        //          .valid
		.src0_data          (rsp_xbar_demux_007_src0_data),                         //          .data
		.src0_channel       (rsp_xbar_demux_007_src0_channel),                      //          .channel
		.src0_startofpacket (rsp_xbar_demux_007_src0_startofpacket),                //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_007_src0_endofpacket)                   //          .endofpacket
	);

	soc_system_mm_interconnect_5_rsp_xbar_demux_004 rsp_xbar_demux_008 (
		.clk                (pwm_pll_outclk0_clk),                                  //       clk.clk
		.reset              (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_008_src_ready),                              //      sink.ready
		.sink_channel       (id_router_008_src_channel),                            //          .channel
		.sink_data          (id_router_008_src_data),                               //          .data
		.sink_startofpacket (id_router_008_src_startofpacket),                      //          .startofpacket
		.sink_endofpacket   (id_router_008_src_endofpacket),                        //          .endofpacket
		.sink_valid         (id_router_008_src_valid),                              //          .valid
		.src0_ready         (rsp_xbar_demux_008_src0_ready),                        //      src0.ready
		.src0_valid         (rsp_xbar_demux_008_src0_valid),                        //          .valid
		.src0_data          (rsp_xbar_demux_008_src0_data),                         //          .data
		.src0_channel       (rsp_xbar_demux_008_src0_channel),                      //          .channel
		.src0_startofpacket (rsp_xbar_demux_008_src0_startofpacket),                //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_008_src0_endofpacket)                   //          .endofpacket
	);

	soc_system_mm_interconnect_5_rsp_xbar_demux_004 rsp_xbar_demux_009 (
		.clk                (pwm_pll_outclk0_clk),                                  //       clk.clk
		.reset              (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_009_src_ready),                              //      sink.ready
		.sink_channel       (id_router_009_src_channel),                            //          .channel
		.sink_data          (id_router_009_src_data),                               //          .data
		.sink_startofpacket (id_router_009_src_startofpacket),                      //          .startofpacket
		.sink_endofpacket   (id_router_009_src_endofpacket),                        //          .endofpacket
		.sink_valid         (id_router_009_src_valid),                              //          .valid
		.src0_ready         (rsp_xbar_demux_009_src0_ready),                        //      src0.ready
		.src0_valid         (rsp_xbar_demux_009_src0_valid),                        //          .valid
		.src0_data          (rsp_xbar_demux_009_src0_data),                         //          .data
		.src0_channel       (rsp_xbar_demux_009_src0_channel),                      //          .channel
		.src0_startofpacket (rsp_xbar_demux_009_src0_startofpacket),                //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_009_src0_endofpacket)                   //          .endofpacket
	);

	soc_system_mm_interconnect_5_rsp_xbar_demux_004 rsp_xbar_demux_010 (
		.clk                (pwm_pll_outclk0_clk),                                  //       clk.clk
		.reset              (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_010_src_ready),                              //      sink.ready
		.sink_channel       (id_router_010_src_channel),                            //          .channel
		.sink_data          (id_router_010_src_data),                               //          .data
		.sink_startofpacket (id_router_010_src_startofpacket),                      //          .startofpacket
		.sink_endofpacket   (id_router_010_src_endofpacket),                        //          .endofpacket
		.sink_valid         (id_router_010_src_valid),                              //          .valid
		.src0_ready         (rsp_xbar_demux_010_src0_ready),                        //      src0.ready
		.src0_valid         (rsp_xbar_demux_010_src0_valid),                        //          .valid
		.src0_data          (rsp_xbar_demux_010_src0_data),                         //          .data
		.src0_channel       (rsp_xbar_demux_010_src0_channel),                      //          .channel
		.src0_startofpacket (rsp_xbar_demux_010_src0_startofpacket),                //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_010_src0_endofpacket)                   //          .endofpacket
	);

	soc_system_mm_interconnect_5_rsp_xbar_demux_004 rsp_xbar_demux_011 (
		.clk                (pwm_pll_outclk0_clk),                                  //       clk.clk
		.reset              (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_011_src_ready),                              //      sink.ready
		.sink_channel       (id_router_011_src_channel),                            //          .channel
		.sink_data          (id_router_011_src_data),                               //          .data
		.sink_startofpacket (id_router_011_src_startofpacket),                      //          .startofpacket
		.sink_endofpacket   (id_router_011_src_endofpacket),                        //          .endofpacket
		.sink_valid         (id_router_011_src_valid),                              //          .valid
		.src0_ready         (rsp_xbar_demux_011_src0_ready),                        //      src0.ready
		.src0_valid         (rsp_xbar_demux_011_src0_valid),                        //          .valid
		.src0_data          (rsp_xbar_demux_011_src0_data),                         //          .data
		.src0_channel       (rsp_xbar_demux_011_src0_channel),                      //          .channel
		.src0_startofpacket (rsp_xbar_demux_011_src0_startofpacket),                //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_011_src0_endofpacket)                   //          .endofpacket
	);

	soc_system_mm_interconnect_5_rsp_xbar_mux rsp_xbar_mux (
		.clk                  (system_pll_outclk1_clk),                                          //       clk.clk
		.reset                (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready            (rsp_xbar_mux_src_ready),                                          //       src.ready
		.src_valid            (rsp_xbar_mux_src_valid),                                          //          .valid
		.src_data             (rsp_xbar_mux_src_data),                                           //          .data
		.src_channel          (rsp_xbar_mux_src_channel),                                        //          .channel
		.src_startofpacket    (rsp_xbar_mux_src_startofpacket),                                  //          .startofpacket
		.src_endofpacket      (rsp_xbar_mux_src_endofpacket),                                    //          .endofpacket
		.sink0_ready          (rsp_xbar_demux_src0_ready),                                       //     sink0.ready
		.sink0_valid          (rsp_xbar_demux_src0_valid),                                       //          .valid
		.sink0_channel        (rsp_xbar_demux_src0_channel),                                     //          .channel
		.sink0_data           (rsp_xbar_demux_src0_data),                                        //          .data
		.sink0_startofpacket  (rsp_xbar_demux_src0_startofpacket),                               //          .startofpacket
		.sink0_endofpacket    (rsp_xbar_demux_src0_endofpacket),                                 //          .endofpacket
		.sink1_ready          (rsp_xbar_demux_001_src0_ready),                                   //     sink1.ready
		.sink1_valid          (rsp_xbar_demux_001_src0_valid),                                   //          .valid
		.sink1_channel        (rsp_xbar_demux_001_src0_channel),                                 //          .channel
		.sink1_data           (rsp_xbar_demux_001_src0_data),                                    //          .data
		.sink1_startofpacket  (rsp_xbar_demux_001_src0_startofpacket),                           //          .startofpacket
		.sink1_endofpacket    (rsp_xbar_demux_001_src0_endofpacket),                             //          .endofpacket
		.sink2_ready          (rsp_xbar_demux_002_src0_ready),                                   //     sink2.ready
		.sink2_valid          (rsp_xbar_demux_002_src0_valid),                                   //          .valid
		.sink2_channel        (rsp_xbar_demux_002_src0_channel),                                 //          .channel
		.sink2_data           (rsp_xbar_demux_002_src0_data),                                    //          .data
		.sink2_startofpacket  (rsp_xbar_demux_002_src0_startofpacket),                           //          .startofpacket
		.sink2_endofpacket    (rsp_xbar_demux_002_src0_endofpacket),                             //          .endofpacket
		.sink3_ready          (rsp_xbar_demux_003_src0_ready),                                   //     sink3.ready
		.sink3_valid          (rsp_xbar_demux_003_src0_valid),                                   //          .valid
		.sink3_channel        (rsp_xbar_demux_003_src0_channel),                                 //          .channel
		.sink3_data           (rsp_xbar_demux_003_src0_data),                                    //          .data
		.sink3_startofpacket  (rsp_xbar_demux_003_src0_startofpacket),                           //          .startofpacket
		.sink3_endofpacket    (rsp_xbar_demux_003_src0_endofpacket),                             //          .endofpacket
		.sink4_ready          (crosser_008_out_ready),                                           //     sink4.ready
		.sink4_valid          (crosser_008_out_valid),                                           //          .valid
		.sink4_channel        (crosser_008_out_channel),                                         //          .channel
		.sink4_data           (crosser_008_out_data),                                            //          .data
		.sink4_startofpacket  (crosser_008_out_startofpacket),                                   //          .startofpacket
		.sink4_endofpacket    (crosser_008_out_endofpacket),                                     //          .endofpacket
		.sink5_ready          (crosser_009_out_ready),                                           //     sink5.ready
		.sink5_valid          (crosser_009_out_valid),                                           //          .valid
		.sink5_channel        (crosser_009_out_channel),                                         //          .channel
		.sink5_data           (crosser_009_out_data),                                            //          .data
		.sink5_startofpacket  (crosser_009_out_startofpacket),                                   //          .startofpacket
		.sink5_endofpacket    (crosser_009_out_endofpacket),                                     //          .endofpacket
		.sink6_ready          (crosser_010_out_ready),                                           //     sink6.ready
		.sink6_valid          (crosser_010_out_valid),                                           //          .valid
		.sink6_channel        (crosser_010_out_channel),                                         //          .channel
		.sink6_data           (crosser_010_out_data),                                            //          .data
		.sink6_startofpacket  (crosser_010_out_startofpacket),                                   //          .startofpacket
		.sink6_endofpacket    (crosser_010_out_endofpacket),                                     //          .endofpacket
		.sink7_ready          (crosser_011_out_ready),                                           //     sink7.ready
		.sink7_valid          (crosser_011_out_valid),                                           //          .valid
		.sink7_channel        (crosser_011_out_channel),                                         //          .channel
		.sink7_data           (crosser_011_out_data),                                            //          .data
		.sink7_startofpacket  (crosser_011_out_startofpacket),                                   //          .startofpacket
		.sink7_endofpacket    (crosser_011_out_endofpacket),                                     //          .endofpacket
		.sink8_ready          (crosser_012_out_ready),                                           //     sink8.ready
		.sink8_valid          (crosser_012_out_valid),                                           //          .valid
		.sink8_channel        (crosser_012_out_channel),                                         //          .channel
		.sink8_data           (crosser_012_out_data),                                            //          .data
		.sink8_startofpacket  (crosser_012_out_startofpacket),                                   //          .startofpacket
		.sink8_endofpacket    (crosser_012_out_endofpacket),                                     //          .endofpacket
		.sink9_ready          (crosser_013_out_ready),                                           //     sink9.ready
		.sink9_valid          (crosser_013_out_valid),                                           //          .valid
		.sink9_channel        (crosser_013_out_channel),                                         //          .channel
		.sink9_data           (crosser_013_out_data),                                            //          .data
		.sink9_startofpacket  (crosser_013_out_startofpacket),                                   //          .startofpacket
		.sink9_endofpacket    (crosser_013_out_endofpacket),                                     //          .endofpacket
		.sink10_ready         (crosser_014_out_ready),                                           //    sink10.ready
		.sink10_valid         (crosser_014_out_valid),                                           //          .valid
		.sink10_channel       (crosser_014_out_channel),                                         //          .channel
		.sink10_data          (crosser_014_out_data),                                            //          .data
		.sink10_startofpacket (crosser_014_out_startofpacket),                                   //          .startofpacket
		.sink10_endofpacket   (crosser_014_out_endofpacket),                                     //          .endofpacket
		.sink11_ready         (crosser_015_out_ready),                                           //    sink11.ready
		.sink11_valid         (crosser_015_out_valid),                                           //          .valid
		.sink11_channel       (crosser_015_out_channel),                                         //          .channel
		.sink11_data          (crosser_015_out_data),                                            //          .data
		.sink11_startofpacket (crosser_015_out_startofpacket),                                   //          .startofpacket
		.sink11_endofpacket   (crosser_015_out_endofpacket)                                      //          .endofpacket
	);

	altera_avalon_st_handshake_clock_crosser #(
		.DATA_WIDTH          (86),
		.BITS_PER_SYMBOL     (86),
		.USE_PACKETS         (1),
		.USE_CHANNEL         (1),
		.CHANNEL_WIDTH       (12),
		.USE_ERROR           (0),
		.ERROR_WIDTH         (1),
		.VALID_SYNC_DEPTH    (2),
		.READY_SYNC_DEPTH    (2),
		.USE_OUTPUT_PIPELINE (0)
	) crosser (
		.in_clk            (system_pll_outclk1_clk),                                          //        in_clk.clk
		.in_reset          (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset), //  in_clk_reset.reset
		.out_clk           (pwm_pll_outclk0_clk),                                             //       out_clk.clk
		.out_reset         (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),            // out_clk_reset.reset
		.in_ready          (cmd_xbar_demux_src4_ready),                                       //            in.ready
		.in_valid          (cmd_xbar_demux_src4_valid),                                       //              .valid
		.in_startofpacket  (cmd_xbar_demux_src4_startofpacket),                               //              .startofpacket
		.in_endofpacket    (cmd_xbar_demux_src4_endofpacket),                                 //              .endofpacket
		.in_channel        (cmd_xbar_demux_src4_channel),                                     //              .channel
		.in_data           (cmd_xbar_demux_src4_data),                                        //              .data
		.out_ready         (crosser_out_ready),                                               //           out.ready
		.out_valid         (crosser_out_valid),                                               //              .valid
		.out_startofpacket (crosser_out_startofpacket),                                       //              .startofpacket
		.out_endofpacket   (crosser_out_endofpacket),                                         //              .endofpacket
		.out_channel       (crosser_out_channel),                                             //              .channel
		.out_data          (crosser_out_data),                                                //              .data
		.in_empty          (1'b0),                                                            //   (terminated)
		.in_error          (1'b0),                                                            //   (terminated)
		.out_empty         (),                                                                //   (terminated)
		.out_error         ()                                                                 //   (terminated)
	);

	altera_avalon_st_handshake_clock_crosser #(
		.DATA_WIDTH          (86),
		.BITS_PER_SYMBOL     (86),
		.USE_PACKETS         (1),
		.USE_CHANNEL         (1),
		.CHANNEL_WIDTH       (12),
		.USE_ERROR           (0),
		.ERROR_WIDTH         (1),
		.VALID_SYNC_DEPTH    (2),
		.READY_SYNC_DEPTH    (2),
		.USE_OUTPUT_PIPELINE (0)
	) crosser_001 (
		.in_clk            (system_pll_outclk1_clk),                                          //        in_clk.clk
		.in_reset          (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset), //  in_clk_reset.reset
		.out_clk           (pwm_pll_outclk0_clk),                                             //       out_clk.clk
		.out_reset         (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),            // out_clk_reset.reset
		.in_ready          (cmd_xbar_demux_src5_ready),                                       //            in.ready
		.in_valid          (cmd_xbar_demux_src5_valid),                                       //              .valid
		.in_startofpacket  (cmd_xbar_demux_src5_startofpacket),                               //              .startofpacket
		.in_endofpacket    (cmd_xbar_demux_src5_endofpacket),                                 //              .endofpacket
		.in_channel        (cmd_xbar_demux_src5_channel),                                     //              .channel
		.in_data           (cmd_xbar_demux_src5_data),                                        //              .data
		.out_ready         (crosser_001_out_ready),                                           //           out.ready
		.out_valid         (crosser_001_out_valid),                                           //              .valid
		.out_startofpacket (crosser_001_out_startofpacket),                                   //              .startofpacket
		.out_endofpacket   (crosser_001_out_endofpacket),                                     //              .endofpacket
		.out_channel       (crosser_001_out_channel),                                         //              .channel
		.out_data          (crosser_001_out_data),                                            //              .data
		.in_empty          (1'b0),                                                            //   (terminated)
		.in_error          (1'b0),                                                            //   (terminated)
		.out_empty         (),                                                                //   (terminated)
		.out_error         ()                                                                 //   (terminated)
	);

	altera_avalon_st_handshake_clock_crosser #(
		.DATA_WIDTH          (86),
		.BITS_PER_SYMBOL     (86),
		.USE_PACKETS         (1),
		.USE_CHANNEL         (1),
		.CHANNEL_WIDTH       (12),
		.USE_ERROR           (0),
		.ERROR_WIDTH         (1),
		.VALID_SYNC_DEPTH    (2),
		.READY_SYNC_DEPTH    (2),
		.USE_OUTPUT_PIPELINE (0)
	) crosser_002 (
		.in_clk            (system_pll_outclk1_clk),                                          //        in_clk.clk
		.in_reset          (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset), //  in_clk_reset.reset
		.out_clk           (pwm_pll_outclk0_clk),                                             //       out_clk.clk
		.out_reset         (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),            // out_clk_reset.reset
		.in_ready          (cmd_xbar_demux_src6_ready),                                       //            in.ready
		.in_valid          (cmd_xbar_demux_src6_valid),                                       //              .valid
		.in_startofpacket  (cmd_xbar_demux_src6_startofpacket),                               //              .startofpacket
		.in_endofpacket    (cmd_xbar_demux_src6_endofpacket),                                 //              .endofpacket
		.in_channel        (cmd_xbar_demux_src6_channel),                                     //              .channel
		.in_data           (cmd_xbar_demux_src6_data),                                        //              .data
		.out_ready         (crosser_002_out_ready),                                           //           out.ready
		.out_valid         (crosser_002_out_valid),                                           //              .valid
		.out_startofpacket (crosser_002_out_startofpacket),                                   //              .startofpacket
		.out_endofpacket   (crosser_002_out_endofpacket),                                     //              .endofpacket
		.out_channel       (crosser_002_out_channel),                                         //              .channel
		.out_data          (crosser_002_out_data),                                            //              .data
		.in_empty          (1'b0),                                                            //   (terminated)
		.in_error          (1'b0),                                                            //   (terminated)
		.out_empty         (),                                                                //   (terminated)
		.out_error         ()                                                                 //   (terminated)
	);

	altera_avalon_st_handshake_clock_crosser #(
		.DATA_WIDTH          (86),
		.BITS_PER_SYMBOL     (86),
		.USE_PACKETS         (1),
		.USE_CHANNEL         (1),
		.CHANNEL_WIDTH       (12),
		.USE_ERROR           (0),
		.ERROR_WIDTH         (1),
		.VALID_SYNC_DEPTH    (2),
		.READY_SYNC_DEPTH    (2),
		.USE_OUTPUT_PIPELINE (0)
	) crosser_003 (
		.in_clk            (system_pll_outclk1_clk),                                          //        in_clk.clk
		.in_reset          (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset), //  in_clk_reset.reset
		.out_clk           (pwm_pll_outclk0_clk),                                             //       out_clk.clk
		.out_reset         (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),            // out_clk_reset.reset
		.in_ready          (cmd_xbar_demux_src7_ready),                                       //            in.ready
		.in_valid          (cmd_xbar_demux_src7_valid),                                       //              .valid
		.in_startofpacket  (cmd_xbar_demux_src7_startofpacket),                               //              .startofpacket
		.in_endofpacket    (cmd_xbar_demux_src7_endofpacket),                                 //              .endofpacket
		.in_channel        (cmd_xbar_demux_src7_channel),                                     //              .channel
		.in_data           (cmd_xbar_demux_src7_data),                                        //              .data
		.out_ready         (crosser_003_out_ready),                                           //           out.ready
		.out_valid         (crosser_003_out_valid),                                           //              .valid
		.out_startofpacket (crosser_003_out_startofpacket),                                   //              .startofpacket
		.out_endofpacket   (crosser_003_out_endofpacket),                                     //              .endofpacket
		.out_channel       (crosser_003_out_channel),                                         //              .channel
		.out_data          (crosser_003_out_data),                                            //              .data
		.in_empty          (1'b0),                                                            //   (terminated)
		.in_error          (1'b0),                                                            //   (terminated)
		.out_empty         (),                                                                //   (terminated)
		.out_error         ()                                                                 //   (terminated)
	);

	altera_avalon_st_handshake_clock_crosser #(
		.DATA_WIDTH          (86),
		.BITS_PER_SYMBOL     (86),
		.USE_PACKETS         (1),
		.USE_CHANNEL         (1),
		.CHANNEL_WIDTH       (12),
		.USE_ERROR           (0),
		.ERROR_WIDTH         (1),
		.VALID_SYNC_DEPTH    (2),
		.READY_SYNC_DEPTH    (2),
		.USE_OUTPUT_PIPELINE (0)
	) crosser_004 (
		.in_clk            (system_pll_outclk1_clk),                                          //        in_clk.clk
		.in_reset          (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset), //  in_clk_reset.reset
		.out_clk           (pwm_pll_outclk0_clk),                                             //       out_clk.clk
		.out_reset         (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),            // out_clk_reset.reset
		.in_ready          (cmd_xbar_demux_src8_ready),                                       //            in.ready
		.in_valid          (cmd_xbar_demux_src8_valid),                                       //              .valid
		.in_startofpacket  (cmd_xbar_demux_src8_startofpacket),                               //              .startofpacket
		.in_endofpacket    (cmd_xbar_demux_src8_endofpacket),                                 //              .endofpacket
		.in_channel        (cmd_xbar_demux_src8_channel),                                     //              .channel
		.in_data           (cmd_xbar_demux_src8_data),                                        //              .data
		.out_ready         (crosser_004_out_ready),                                           //           out.ready
		.out_valid         (crosser_004_out_valid),                                           //              .valid
		.out_startofpacket (crosser_004_out_startofpacket),                                   //              .startofpacket
		.out_endofpacket   (crosser_004_out_endofpacket),                                     //              .endofpacket
		.out_channel       (crosser_004_out_channel),                                         //              .channel
		.out_data          (crosser_004_out_data),                                            //              .data
		.in_empty          (1'b0),                                                            //   (terminated)
		.in_error          (1'b0),                                                            //   (terminated)
		.out_empty         (),                                                                //   (terminated)
		.out_error         ()                                                                 //   (terminated)
	);

	altera_avalon_st_handshake_clock_crosser #(
		.DATA_WIDTH          (86),
		.BITS_PER_SYMBOL     (86),
		.USE_PACKETS         (1),
		.USE_CHANNEL         (1),
		.CHANNEL_WIDTH       (12),
		.USE_ERROR           (0),
		.ERROR_WIDTH         (1),
		.VALID_SYNC_DEPTH    (2),
		.READY_SYNC_DEPTH    (2),
		.USE_OUTPUT_PIPELINE (0)
	) crosser_005 (
		.in_clk            (system_pll_outclk1_clk),                                          //        in_clk.clk
		.in_reset          (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset), //  in_clk_reset.reset
		.out_clk           (pwm_pll_outclk0_clk),                                             //       out_clk.clk
		.out_reset         (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),            // out_clk_reset.reset
		.in_ready          (cmd_xbar_demux_src9_ready),                                       //            in.ready
		.in_valid          (cmd_xbar_demux_src9_valid),                                       //              .valid
		.in_startofpacket  (cmd_xbar_demux_src9_startofpacket),                               //              .startofpacket
		.in_endofpacket    (cmd_xbar_demux_src9_endofpacket),                                 //              .endofpacket
		.in_channel        (cmd_xbar_demux_src9_channel),                                     //              .channel
		.in_data           (cmd_xbar_demux_src9_data),                                        //              .data
		.out_ready         (crosser_005_out_ready),                                           //           out.ready
		.out_valid         (crosser_005_out_valid),                                           //              .valid
		.out_startofpacket (crosser_005_out_startofpacket),                                   //              .startofpacket
		.out_endofpacket   (crosser_005_out_endofpacket),                                     //              .endofpacket
		.out_channel       (crosser_005_out_channel),                                         //              .channel
		.out_data          (crosser_005_out_data),                                            //              .data
		.in_empty          (1'b0),                                                            //   (terminated)
		.in_error          (1'b0),                                                            //   (terminated)
		.out_empty         (),                                                                //   (terminated)
		.out_error         ()                                                                 //   (terminated)
	);

	altera_avalon_st_handshake_clock_crosser #(
		.DATA_WIDTH          (86),
		.BITS_PER_SYMBOL     (86),
		.USE_PACKETS         (1),
		.USE_CHANNEL         (1),
		.CHANNEL_WIDTH       (12),
		.USE_ERROR           (0),
		.ERROR_WIDTH         (1),
		.VALID_SYNC_DEPTH    (2),
		.READY_SYNC_DEPTH    (2),
		.USE_OUTPUT_PIPELINE (0)
	) crosser_006 (
		.in_clk            (system_pll_outclk1_clk),                                          //        in_clk.clk
		.in_reset          (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset), //  in_clk_reset.reset
		.out_clk           (pwm_pll_outclk0_clk),                                             //       out_clk.clk
		.out_reset         (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),            // out_clk_reset.reset
		.in_ready          (cmd_xbar_demux_src10_ready),                                      //            in.ready
		.in_valid          (cmd_xbar_demux_src10_valid),                                      //              .valid
		.in_startofpacket  (cmd_xbar_demux_src10_startofpacket),                              //              .startofpacket
		.in_endofpacket    (cmd_xbar_demux_src10_endofpacket),                                //              .endofpacket
		.in_channel        (cmd_xbar_demux_src10_channel),                                    //              .channel
		.in_data           (cmd_xbar_demux_src10_data),                                       //              .data
		.out_ready         (crosser_006_out_ready),                                           //           out.ready
		.out_valid         (crosser_006_out_valid),                                           //              .valid
		.out_startofpacket (crosser_006_out_startofpacket),                                   //              .startofpacket
		.out_endofpacket   (crosser_006_out_endofpacket),                                     //              .endofpacket
		.out_channel       (crosser_006_out_channel),                                         //              .channel
		.out_data          (crosser_006_out_data),                                            //              .data
		.in_empty          (1'b0),                                                            //   (terminated)
		.in_error          (1'b0),                                                            //   (terminated)
		.out_empty         (),                                                                //   (terminated)
		.out_error         ()                                                                 //   (terminated)
	);

	altera_avalon_st_handshake_clock_crosser #(
		.DATA_WIDTH          (86),
		.BITS_PER_SYMBOL     (86),
		.USE_PACKETS         (1),
		.USE_CHANNEL         (1),
		.CHANNEL_WIDTH       (12),
		.USE_ERROR           (0),
		.ERROR_WIDTH         (1),
		.VALID_SYNC_DEPTH    (2),
		.READY_SYNC_DEPTH    (2),
		.USE_OUTPUT_PIPELINE (0)
	) crosser_007 (
		.in_clk            (system_pll_outclk1_clk),                                          //        in_clk.clk
		.in_reset          (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset), //  in_clk_reset.reset
		.out_clk           (pwm_pll_outclk0_clk),                                             //       out_clk.clk
		.out_reset         (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),            // out_clk_reset.reset
		.in_ready          (cmd_xbar_demux_src11_ready),                                      //            in.ready
		.in_valid          (cmd_xbar_demux_src11_valid),                                      //              .valid
		.in_startofpacket  (cmd_xbar_demux_src11_startofpacket),                              //              .startofpacket
		.in_endofpacket    (cmd_xbar_demux_src11_endofpacket),                                //              .endofpacket
		.in_channel        (cmd_xbar_demux_src11_channel),                                    //              .channel
		.in_data           (cmd_xbar_demux_src11_data),                                       //              .data
		.out_ready         (crosser_007_out_ready),                                           //           out.ready
		.out_valid         (crosser_007_out_valid),                                           //              .valid
		.out_startofpacket (crosser_007_out_startofpacket),                                   //              .startofpacket
		.out_endofpacket   (crosser_007_out_endofpacket),                                     //              .endofpacket
		.out_channel       (crosser_007_out_channel),                                         //              .channel
		.out_data          (crosser_007_out_data),                                            //              .data
		.in_empty          (1'b0),                                                            //   (terminated)
		.in_error          (1'b0),                                                            //   (terminated)
		.out_empty         (),                                                                //   (terminated)
		.out_error         ()                                                                 //   (terminated)
	);

	altera_avalon_st_handshake_clock_crosser #(
		.DATA_WIDTH          (86),
		.BITS_PER_SYMBOL     (86),
		.USE_PACKETS         (1),
		.USE_CHANNEL         (1),
		.CHANNEL_WIDTH       (12),
		.USE_ERROR           (0),
		.ERROR_WIDTH         (1),
		.VALID_SYNC_DEPTH    (2),
		.READY_SYNC_DEPTH    (2),
		.USE_OUTPUT_PIPELINE (0)
	) crosser_008 (
		.in_clk            (pwm_pll_outclk0_clk),                                             //        in_clk.clk
		.in_reset          (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),            //  in_clk_reset.reset
		.out_clk           (system_pll_outclk1_clk),                                          //       out_clk.clk
		.out_reset         (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset), // out_clk_reset.reset
		.in_ready          (rsp_xbar_demux_004_src0_ready),                                   //            in.ready
		.in_valid          (rsp_xbar_demux_004_src0_valid),                                   //              .valid
		.in_startofpacket  (rsp_xbar_demux_004_src0_startofpacket),                           //              .startofpacket
		.in_endofpacket    (rsp_xbar_demux_004_src0_endofpacket),                             //              .endofpacket
		.in_channel        (rsp_xbar_demux_004_src0_channel),                                 //              .channel
		.in_data           (rsp_xbar_demux_004_src0_data),                                    //              .data
		.out_ready         (crosser_008_out_ready),                                           //           out.ready
		.out_valid         (crosser_008_out_valid),                                           //              .valid
		.out_startofpacket (crosser_008_out_startofpacket),                                   //              .startofpacket
		.out_endofpacket   (crosser_008_out_endofpacket),                                     //              .endofpacket
		.out_channel       (crosser_008_out_channel),                                         //              .channel
		.out_data          (crosser_008_out_data),                                            //              .data
		.in_empty          (1'b0),                                                            //   (terminated)
		.in_error          (1'b0),                                                            //   (terminated)
		.out_empty         (),                                                                //   (terminated)
		.out_error         ()                                                                 //   (terminated)
	);

	altera_avalon_st_handshake_clock_crosser #(
		.DATA_WIDTH          (86),
		.BITS_PER_SYMBOL     (86),
		.USE_PACKETS         (1),
		.USE_CHANNEL         (1),
		.CHANNEL_WIDTH       (12),
		.USE_ERROR           (0),
		.ERROR_WIDTH         (1),
		.VALID_SYNC_DEPTH    (2),
		.READY_SYNC_DEPTH    (2),
		.USE_OUTPUT_PIPELINE (0)
	) crosser_009 (
		.in_clk            (pwm_pll_outclk0_clk),                                             //        in_clk.clk
		.in_reset          (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),            //  in_clk_reset.reset
		.out_clk           (system_pll_outclk1_clk),                                          //       out_clk.clk
		.out_reset         (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset), // out_clk_reset.reset
		.in_ready          (rsp_xbar_demux_005_src0_ready),                                   //            in.ready
		.in_valid          (rsp_xbar_demux_005_src0_valid),                                   //              .valid
		.in_startofpacket  (rsp_xbar_demux_005_src0_startofpacket),                           //              .startofpacket
		.in_endofpacket    (rsp_xbar_demux_005_src0_endofpacket),                             //              .endofpacket
		.in_channel        (rsp_xbar_demux_005_src0_channel),                                 //              .channel
		.in_data           (rsp_xbar_demux_005_src0_data),                                    //              .data
		.out_ready         (crosser_009_out_ready),                                           //           out.ready
		.out_valid         (crosser_009_out_valid),                                           //              .valid
		.out_startofpacket (crosser_009_out_startofpacket),                                   //              .startofpacket
		.out_endofpacket   (crosser_009_out_endofpacket),                                     //              .endofpacket
		.out_channel       (crosser_009_out_channel),                                         //              .channel
		.out_data          (crosser_009_out_data),                                            //              .data
		.in_empty          (1'b0),                                                            //   (terminated)
		.in_error          (1'b0),                                                            //   (terminated)
		.out_empty         (),                                                                //   (terminated)
		.out_error         ()                                                                 //   (terminated)
	);

	altera_avalon_st_handshake_clock_crosser #(
		.DATA_WIDTH          (86),
		.BITS_PER_SYMBOL     (86),
		.USE_PACKETS         (1),
		.USE_CHANNEL         (1),
		.CHANNEL_WIDTH       (12),
		.USE_ERROR           (0),
		.ERROR_WIDTH         (1),
		.VALID_SYNC_DEPTH    (2),
		.READY_SYNC_DEPTH    (2),
		.USE_OUTPUT_PIPELINE (0)
	) crosser_010 (
		.in_clk            (pwm_pll_outclk0_clk),                                             //        in_clk.clk
		.in_reset          (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),            //  in_clk_reset.reset
		.out_clk           (system_pll_outclk1_clk),                                          //       out_clk.clk
		.out_reset         (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset), // out_clk_reset.reset
		.in_ready          (rsp_xbar_demux_006_src0_ready),                                   //            in.ready
		.in_valid          (rsp_xbar_demux_006_src0_valid),                                   //              .valid
		.in_startofpacket  (rsp_xbar_demux_006_src0_startofpacket),                           //              .startofpacket
		.in_endofpacket    (rsp_xbar_demux_006_src0_endofpacket),                             //              .endofpacket
		.in_channel        (rsp_xbar_demux_006_src0_channel),                                 //              .channel
		.in_data           (rsp_xbar_demux_006_src0_data),                                    //              .data
		.out_ready         (crosser_010_out_ready),                                           //           out.ready
		.out_valid         (crosser_010_out_valid),                                           //              .valid
		.out_startofpacket (crosser_010_out_startofpacket),                                   //              .startofpacket
		.out_endofpacket   (crosser_010_out_endofpacket),                                     //              .endofpacket
		.out_channel       (crosser_010_out_channel),                                         //              .channel
		.out_data          (crosser_010_out_data),                                            //              .data
		.in_empty          (1'b0),                                                            //   (terminated)
		.in_error          (1'b0),                                                            //   (terminated)
		.out_empty         (),                                                                //   (terminated)
		.out_error         ()                                                                 //   (terminated)
	);

	altera_avalon_st_handshake_clock_crosser #(
		.DATA_WIDTH          (86),
		.BITS_PER_SYMBOL     (86),
		.USE_PACKETS         (1),
		.USE_CHANNEL         (1),
		.CHANNEL_WIDTH       (12),
		.USE_ERROR           (0),
		.ERROR_WIDTH         (1),
		.VALID_SYNC_DEPTH    (2),
		.READY_SYNC_DEPTH    (2),
		.USE_OUTPUT_PIPELINE (0)
	) crosser_011 (
		.in_clk            (pwm_pll_outclk0_clk),                                             //        in_clk.clk
		.in_reset          (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),            //  in_clk_reset.reset
		.out_clk           (system_pll_outclk1_clk),                                          //       out_clk.clk
		.out_reset         (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset), // out_clk_reset.reset
		.in_ready          (rsp_xbar_demux_007_src0_ready),                                   //            in.ready
		.in_valid          (rsp_xbar_demux_007_src0_valid),                                   //              .valid
		.in_startofpacket  (rsp_xbar_demux_007_src0_startofpacket),                           //              .startofpacket
		.in_endofpacket    (rsp_xbar_demux_007_src0_endofpacket),                             //              .endofpacket
		.in_channel        (rsp_xbar_demux_007_src0_channel),                                 //              .channel
		.in_data           (rsp_xbar_demux_007_src0_data),                                    //              .data
		.out_ready         (crosser_011_out_ready),                                           //           out.ready
		.out_valid         (crosser_011_out_valid),                                           //              .valid
		.out_startofpacket (crosser_011_out_startofpacket),                                   //              .startofpacket
		.out_endofpacket   (crosser_011_out_endofpacket),                                     //              .endofpacket
		.out_channel       (crosser_011_out_channel),                                         //              .channel
		.out_data          (crosser_011_out_data),                                            //              .data
		.in_empty          (1'b0),                                                            //   (terminated)
		.in_error          (1'b0),                                                            //   (terminated)
		.out_empty         (),                                                                //   (terminated)
		.out_error         ()                                                                 //   (terminated)
	);

	altera_avalon_st_handshake_clock_crosser #(
		.DATA_WIDTH          (86),
		.BITS_PER_SYMBOL     (86),
		.USE_PACKETS         (1),
		.USE_CHANNEL         (1),
		.CHANNEL_WIDTH       (12),
		.USE_ERROR           (0),
		.ERROR_WIDTH         (1),
		.VALID_SYNC_DEPTH    (2),
		.READY_SYNC_DEPTH    (2),
		.USE_OUTPUT_PIPELINE (0)
	) crosser_012 (
		.in_clk            (pwm_pll_outclk0_clk),                                             //        in_clk.clk
		.in_reset          (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),            //  in_clk_reset.reset
		.out_clk           (system_pll_outclk1_clk),                                          //       out_clk.clk
		.out_reset         (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset), // out_clk_reset.reset
		.in_ready          (rsp_xbar_demux_008_src0_ready),                                   //            in.ready
		.in_valid          (rsp_xbar_demux_008_src0_valid),                                   //              .valid
		.in_startofpacket  (rsp_xbar_demux_008_src0_startofpacket),                           //              .startofpacket
		.in_endofpacket    (rsp_xbar_demux_008_src0_endofpacket),                             //              .endofpacket
		.in_channel        (rsp_xbar_demux_008_src0_channel),                                 //              .channel
		.in_data           (rsp_xbar_demux_008_src0_data),                                    //              .data
		.out_ready         (crosser_012_out_ready),                                           //           out.ready
		.out_valid         (crosser_012_out_valid),                                           //              .valid
		.out_startofpacket (crosser_012_out_startofpacket),                                   //              .startofpacket
		.out_endofpacket   (crosser_012_out_endofpacket),                                     //              .endofpacket
		.out_channel       (crosser_012_out_channel),                                         //              .channel
		.out_data          (crosser_012_out_data),                                            //              .data
		.in_empty          (1'b0),                                                            //   (terminated)
		.in_error          (1'b0),                                                            //   (terminated)
		.out_empty         (),                                                                //   (terminated)
		.out_error         ()                                                                 //   (terminated)
	);

	altera_avalon_st_handshake_clock_crosser #(
		.DATA_WIDTH          (86),
		.BITS_PER_SYMBOL     (86),
		.USE_PACKETS         (1),
		.USE_CHANNEL         (1),
		.CHANNEL_WIDTH       (12),
		.USE_ERROR           (0),
		.ERROR_WIDTH         (1),
		.VALID_SYNC_DEPTH    (2),
		.READY_SYNC_DEPTH    (2),
		.USE_OUTPUT_PIPELINE (0)
	) crosser_013 (
		.in_clk            (pwm_pll_outclk0_clk),                                             //        in_clk.clk
		.in_reset          (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),            //  in_clk_reset.reset
		.out_clk           (system_pll_outclk1_clk),                                          //       out_clk.clk
		.out_reset         (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset), // out_clk_reset.reset
		.in_ready          (rsp_xbar_demux_009_src0_ready),                                   //            in.ready
		.in_valid          (rsp_xbar_demux_009_src0_valid),                                   //              .valid
		.in_startofpacket  (rsp_xbar_demux_009_src0_startofpacket),                           //              .startofpacket
		.in_endofpacket    (rsp_xbar_demux_009_src0_endofpacket),                             //              .endofpacket
		.in_channel        (rsp_xbar_demux_009_src0_channel),                                 //              .channel
		.in_data           (rsp_xbar_demux_009_src0_data),                                    //              .data
		.out_ready         (crosser_013_out_ready),                                           //           out.ready
		.out_valid         (crosser_013_out_valid),                                           //              .valid
		.out_startofpacket (crosser_013_out_startofpacket),                                   //              .startofpacket
		.out_endofpacket   (crosser_013_out_endofpacket),                                     //              .endofpacket
		.out_channel       (crosser_013_out_channel),                                         //              .channel
		.out_data          (crosser_013_out_data),                                            //              .data
		.in_empty          (1'b0),                                                            //   (terminated)
		.in_error          (1'b0),                                                            //   (terminated)
		.out_empty         (),                                                                //   (terminated)
		.out_error         ()                                                                 //   (terminated)
	);

	altera_avalon_st_handshake_clock_crosser #(
		.DATA_WIDTH          (86),
		.BITS_PER_SYMBOL     (86),
		.USE_PACKETS         (1),
		.USE_CHANNEL         (1),
		.CHANNEL_WIDTH       (12),
		.USE_ERROR           (0),
		.ERROR_WIDTH         (1),
		.VALID_SYNC_DEPTH    (2),
		.READY_SYNC_DEPTH    (2),
		.USE_OUTPUT_PIPELINE (0)
	) crosser_014 (
		.in_clk            (pwm_pll_outclk0_clk),                                             //        in_clk.clk
		.in_reset          (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),            //  in_clk_reset.reset
		.out_clk           (system_pll_outclk1_clk),                                          //       out_clk.clk
		.out_reset         (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset), // out_clk_reset.reset
		.in_ready          (rsp_xbar_demux_010_src0_ready),                                   //            in.ready
		.in_valid          (rsp_xbar_demux_010_src0_valid),                                   //              .valid
		.in_startofpacket  (rsp_xbar_demux_010_src0_startofpacket),                           //              .startofpacket
		.in_endofpacket    (rsp_xbar_demux_010_src0_endofpacket),                             //              .endofpacket
		.in_channel        (rsp_xbar_demux_010_src0_channel),                                 //              .channel
		.in_data           (rsp_xbar_demux_010_src0_data),                                    //              .data
		.out_ready         (crosser_014_out_ready),                                           //           out.ready
		.out_valid         (crosser_014_out_valid),                                           //              .valid
		.out_startofpacket (crosser_014_out_startofpacket),                                   //              .startofpacket
		.out_endofpacket   (crosser_014_out_endofpacket),                                     //              .endofpacket
		.out_channel       (crosser_014_out_channel),                                         //              .channel
		.out_data          (crosser_014_out_data),                                            //              .data
		.in_empty          (1'b0),                                                            //   (terminated)
		.in_error          (1'b0),                                                            //   (terminated)
		.out_empty         (),                                                                //   (terminated)
		.out_error         ()                                                                 //   (terminated)
	);

	altera_avalon_st_handshake_clock_crosser #(
		.DATA_WIDTH          (86),
		.BITS_PER_SYMBOL     (86),
		.USE_PACKETS         (1),
		.USE_CHANNEL         (1),
		.CHANNEL_WIDTH       (12),
		.USE_ERROR           (0),
		.ERROR_WIDTH         (1),
		.VALID_SYNC_DEPTH    (2),
		.READY_SYNC_DEPTH    (2),
		.USE_OUTPUT_PIPELINE (0)
	) crosser_015 (
		.in_clk            (pwm_pll_outclk0_clk),                                             //        in_clk.clk
		.in_reset          (pwm_cpu_s0_1_clock_reset_reset_bridge_in_reset_reset),            //  in_clk_reset.reset
		.out_clk           (system_pll_outclk1_clk),                                          //       out_clk.clk
		.out_reset         (s0_io_clockCrossing_bridge_m0_reset_reset_bridge_in_reset_reset), // out_clk_reset.reset
		.in_ready          (rsp_xbar_demux_011_src0_ready),                                   //            in.ready
		.in_valid          (rsp_xbar_demux_011_src0_valid),                                   //              .valid
		.in_startofpacket  (rsp_xbar_demux_011_src0_startofpacket),                           //              .startofpacket
		.in_endofpacket    (rsp_xbar_demux_011_src0_endofpacket),                             //              .endofpacket
		.in_channel        (rsp_xbar_demux_011_src0_channel),                                 //              .channel
		.in_data           (rsp_xbar_demux_011_src0_data),                                    //              .data
		.out_ready         (crosser_015_out_ready),                                           //           out.ready
		.out_valid         (crosser_015_out_valid),                                           //              .valid
		.out_startofpacket (crosser_015_out_startofpacket),                                   //              .startofpacket
		.out_endofpacket   (crosser_015_out_endofpacket),                                     //              .endofpacket
		.out_channel       (crosser_015_out_channel),                                         //              .channel
		.out_data          (crosser_015_out_data),                                            //              .data
		.in_empty          (1'b0),                                                            //   (terminated)
		.in_error          (1'b0),                                                            //   (terminated)
		.out_empty         (),                                                                //   (terminated)
		.out_error         ()                                                                 //   (terminated)
	);

endmodule
